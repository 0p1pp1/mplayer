.\" Partial sync with en/mplayer.1 r23370
.\" Encoding: utf-8
.\" Only 3 sections unfinished: "VIDEO FILTERS", "GENERAL ENCODING..." and
.\"   "CODEC SPECIFIC ENCODING OPTIONS",
.\"   also see line 4560.
.\" Reminder of hard terms which need better/final solution later: 
.\"   /capture; palytree in parent list; colorkey; retrace; desync; downmix;
.\"   wrapper script ... shellescapes; keyframe; deblock; dering;
.\"   encoding audio rate; alphamap; upsampling; sweep; 
.\"   aligned buffers; instancenumber; 
.\" 
.\" MPlayer (C) 2000-2007 MPlayer 团队
.\" 本(英文)手册页由 Gabucino, Diego Biurrun, Jonas Jermann 编写
.\" 参于翻译本中文手册页的有: 
.\"   Lu Ran <hephooey@fastmail.fm>,
.\"   Sheldon Jin <jinsh2 AT yahoo.com>,
.
.\" --------------------------------------------------------------------------
.\" 宏定义
.\" --------------------------------------------------------------------------
.
.\" 定义子选项缩进
.nr SS 5
.\" 添加新子选项
.de IPs
.IP "\\$1" \n(SS
..
.\" 一级子选项开始, 结束用 .RE
.de RSs
.RS 10
..
.\" 二级子选项开始
.de RSss
.PD 0
.RS \n(SS+3
..
.\" 二级子选项结束
.de REss
.RE
.PD 1
..
.
.\" --------------------------------------------------------------------------
.\" 名称
.\" --------------------------------------------------------------------------
.
.TH MPlayer 1 "2006-10-15" "MPlayer 项目" "电影播放器"
.
.SH 名称
mplayer  \- 电影播放器
.br
mencoder \- 电影编解码器
.
.\" --------------------------------------------------------------------------
.\" 概要
.\" --------------------------------------------------------------------------
.
.SH 概要
.na
.nh
.B mplayer
[选项] [文件|URL|播放列表|\-]
.
.br
.B mplayer
[选项] 文件1
[指定选项] [文件2] [指定选项]
.
.br
.B mplayer
[选项]
{文件和选项组}
[组指定选项]
.
.br
.B mplayer
[dvd|dvdnav]://[标题|[开头标题]\-末尾标题]
[选项]
.
.br
.B mplayer
vcd://轨迹[/设备]
.
.br
.B mplayer
tv://[频道]
[选项]
.
.br
.B mplayer
radio://[频道|频率][/capture]
[选项]
.
.br
.B mplayer
pvr://
[选项]
.
.br
.B mplayer
dvb://[卡号@]频道
[选项]
.
.br
.B mplayer
mf://文件掩码
[\-mf 选项] [选项]
.
.br
.B mplayer
[cdda|cddb]://轨迹[-末轨迹][:速度][/设备]
[选项]
.
.br
.B mplayer
cue://文件[:轨迹]
[选项]
.
.br
.B mplayer
[file|mms[t]|http|http_proxy|rt[s]p|ftp|udp|unsv|smb]:// 
[用户名:密码@]URL[:端口] [选项]
.
.br
.B mplayer
sdp://文件
[选项]
.
.br
.B mplayer
mpst://主机[:端口]/URL
[选项]
.
.br
.B mplayer
tivo://主机/[list|llist|fsid]
[选项]
.
.br
.B gmplayer
[选项]
[\-skin\ 皮肤]
.
.br
.B mencoder
[选项] 文件
[文件|URL|\-] [\-o 文件 | file://文件 | smb://[用户名:密码@]主机/文件路径]
.
.br
.B mencoder
[选项] 文件1
[指定选项] [文件2] [指定选项]
.ad
.hy
.
.\" --------------------------------------------------------------------------
.\" 描述
.\" --------------------------------------------------------------------------
.
.SH 描述
.B mplayer
是一个 LINUX 下的电影播放器 (也能运行在许多其它的平台和 CPU 架构, 请参阅文档)。
通过许多原生的和可执行的编解码器的支持, 它能播放绝大部分的 MPEG/\:VOB, AVI, 
ASF/\:WMA/\:WMV, RM, QT/\:MOV/\:MP4, Ogg/\:OGM, MKV, VIVO, FLI, NuppelVideo, 
yuv4mpeg, FILM 和 RoQ 文件。
你还能观看 VCD, SVCD, DVD, 3ivx, DivX 3/4/5, 甚至 WMV 电影。
.PP
MPlayer 广泛地支持音视频输出驱动。
它不仅可以使用 X11, Xv, DGA, OpenGL, SVGAlib, fbdev, AAlib, libcaca, 
DirectFB, Quartz, Mac OS X CoreVideo, 也能使用 GGI, SDL (及它们的所有驱动),
所有 VESA 兼容显卡上的 VESA (甚至不需要 X11), 某些低级的
显卡相关的驱动 (如 Matrox, 3dfx 及 ATI) 和一些硬件 MPEG 解码器卡, 
比如 Siemens DVB, Hauppauge PVR (IVTV), DXR2 和 DXR3/\:Hollywood+。
它们中绝大多数支持软件或硬件缩放, 所以你可以享受全屏电影。
.PP
MPlayer 具有 OSD(屏上显示) 功能显示状态信息, 有
抗锯齿带阴影的漂亮大字幕和键盘控制的可视反馈。
支持的字体包括欧洲语种/\:ISO8859-1,2 (匈牙利语, 英语, 捷克语等等), 
西里尔语和韩语, 可以播放 12 种格式的字幕文件 (MicroDVD, SubRip, OGM,
SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS 
及我们自己的: MPsub) 和 DVD 字幕 (SPU 流, VOBsub 及隐藏式 CC 字幕)。
.PP
.B mencoder
(MPlayer 的电影编解码器) 是一个简单的电影编解码器, 其设计为将
MPlayer 可播放的电影(见上所述)编码成其他的 MPlayer 可播放格式(见下面)。
其编码成的 MPEG-4 (DivX/Xvid), 是 libavcodec 编解码器的一种和
使用 1, 2 或 3-passes(通) 的 PCM/\:MP3/\:VBRMP3 音频。
此外还具有流复制的能力, 拥有强大的(过滤器)插件系统(裁剪,
扩展, 反转, 后处理, 旋转, 缩放, 降噪声, RGB/\:YUV 转换)等。
.PP
.B gmplayer
是具有图形用户界面的 MPlayer。其选项与 MPlayer 相同。
.PP
本手册页最后有用法示例, 能让你迅速上手。
.PP
.B 也请参阅 HTML 文档!
.
.
.\" --------------------------------------------------------------------------
.\" 交互式控制
.\" --------------------------------------------------------------------------
.
.SH "交互式控制"
MPlayer 有个完全可配置的, 命令驱动的控制层, 
让你通过键盘, 鼠标, 操纵杆或遥控器(需使用 LIRC)来控制 MPlayer。
参见 \-input 选项定制控制层的方法。
.
.TP
.B 键盘控制
.PD 0
.RS
.IPs "<\- 和 \->"
后退/\:快进 10 秒。
.IPs "up 和 down"
快进/\:后退 1 分。
.IPs "pgup 和 pgdown"
快进/\:后退 10 分。
.IPs "[ 和 ]"
减少/增加当前回放速度 10%。
.IPs "{ 和 }"
减半/加倍当前回放速度。
.IPs "backspace"
重置正常回放速度.
.IPs "< 和 >"
在播放列表中后退/\:快进。
.IPs "ENTER"
在播放列表中快进, 甚至越过末尾。
.IPs "HOME 和 END"
下一个/\:前一个父列表中的播放树项。
.IPs "INS 和 DEL (仅用于 ASX 播放列表)"
下一个/\:前一个供选择的源。
.IPs "p / SPACE"
暂停 (再按取消暂停)。
.IPs ".\ \ \ \ "
步进。
按一下暂停回放, 每按一下就播放一帧(直到按其它键取消步进)。
.IPs "q / ESC"
停止播放和退出。
.IPs "+ 和 -"
调整音频延迟增加/减少 0.1 秒。
.IPs "/ 和 *"
降低/\:提高音量。
.IPs "9 和 0"
降低/\:提高音量。
.IPs "m\ \ \ \ "
静音。
.IPs "_ (仅用于MPEG-TS和libav库格式)"
循环可用的像轨。
.IPs "# (仅用于DVD、MPEG、Matroska、AVI和libav库格式)"
循环可用的音轨。
.IPs "TAB (仅用于MPEG-TS)"
循环可用的节目。
.IPs "f\ \ \ \ "
切换全屏 (也请参见 \-fs)。
.IPs "T\ \ \ \ "
切换顶置 (也请参见 \-ontop)。
.IPs "w 和 e"
降低/\:提高摇移范围。
.IPs "o\ \ \ \ "
循环 OSD 状态: 无 / 搜索条 / 搜索条 + 计时器 / 搜索条 + 计时器 + 总时间。
.IPs "d\ \ \ \ "
循环丢帧状态: 无 / 跳过显示 / 跳过解码。
(请参见 \-framedrop 和 \-hardframedrop)。
.IPs "v\ \ \ \ "
切换显示字幕。
.IPs "j\ \ \ \ "
循环可用的字幕。
.IPs "y 和 g"
在字幕列表中步进/步退。
.IPs "F\ \ \ \ "
切换显示 "锁定的字幕"。
.IPs "a\ \ \ \ "
切换对齐字幕: 上 / 中 / 下。
.IPs "x 和 z"
调整字幕延迟增加/减少 0.1 秒。
.IPs "r 和 t"
上/下调整字幕位置。
.IPs "i (仅用于 \-edlout 模式)"
设置 EDL 的开头或末尾并写入指定的文件。
.IPs "s (仅用于 \-vf 截屏)"
截屏。
.IPs "S (仅用于 \-vf 截屏)"
开始/停止截屏。
.IPs "I\ \ \ \ "
用 OSD 显示文件名。
.IPs "! 和 @"
寻到前一章节/后一章节的开始处。
.IPs "D (仅用于\-vo xvmc, \-vf yadif, \-vf kerndeint)"
激活/撤销去交错。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于硬件加速视频输出(xv, (x)vidix, (x)mga, 等), 
软件均衡器(\-vf eq or \-vf eq2), 或者色调过滤器(\-vf hue)。)
.RE
.PP
.PD 0
.RS
.IPs "1 和 2"
调整对比度。
.IPs "3 和 4"
调整亮度。
.IPs "5 和 6"
调整色调。
.IPs "7 和 8"
调整饱和度。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于 quartz or macosx 视频输出驱动。)
.RE
.PP
.PD 0
.RS
.IPs "command + 0"
半尺寸。
.IPs "command + 1"
原始尺寸。
.IPs "command + 2"
双倍尺寸。
.IPs "command + f"
切换全屏 (也请参见 \-fs)。
.IPs "command + [ 和 command + ]"
设置窗口的 alpha。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于 sdl 视频输出驱动。)
.RE
.PP
.PD 0
.RS
.IPs "c\ \ \ \ "
切换可用的全屏模式。
.IPs "n\ \ \ \ "
原始尺寸。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于多媒体键盘。)
.RE
.PP
.PD 0
.RS
.IPs PAUSE
暂停。
.IPs "STOP\ "
停止并退出。
.IPs "PREVIOUS 和 NEXT"
后退/\:快进 1 分。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 GUI 并优先于以前的定义。)
.RE
.PP
.PD 0
.RS
.IPs ENTER
开始播放。
.IPs "ESC\ \ "
停止播放。
.IPs "l\ \ \ \ "
加载文件。
.IPs "t\ \ \ \ "
加载字幕。
.IPs "c\ \ \ \ "
打开皮肤浏览器。
.IPs "p\ \ \ \ "
打开播放列表。
.IPs "r\ \ \ \ "
打开首选项。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 TV 或 DVB 的输入并优先于以前的定义。)
.RE
.PP
.PD 0
.RS
.IPs "h 和 k"
选择上一个/\:下一个频道。
.IPs "n\ \ \ \ "
改变制式。
.IPs "u\ \ \ \ "
改变频道列表。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 dvdnav: 用于导航菜单)
.RE
.PP
.PD 0
.RS
.IPs "keypad 8"
选择上。
.IPs "keypad 2"
选择下。
.IPs "keypad 4"
选择左。
.IPs "keypad 6"
选择右。
.IPs "keypad 5"
返回主菜单。
.IPs "keypad 7"
返回最近的菜单(先后次序是: 章节->标题->根)。
.IPs "keypad ENTER"
确定。
.RE
.PD 1
.PP
.RS
.
.TP
.B 鼠标控制
.PD 0
.RS
.IPs "button 3 和 button 4"
后退/\:快进 1 分。
.IPs "button 5 和 button 6"
降低/\:提高音量。
.RE
.PD 1
.
.TP
.B 操纵杆
.PD 0
.RS
.IPs "left 和 right"
后退/\:快进 10 秒。
.IPs "up 和 down"
快进/\:后退 1 分。
.IPs "button 1"
暂停。
.IPs "button 2"
循环 OSD 状态: 无 / 搜索条 / 搜索条 + 计时器 / 搜索条 + 计时器 + 总时间。
.IPs "button 3 和 button 4"
降低/\:提高音量。
.RE
.PD 1
.
.
.\" --------------------------------------------------------------------------
.\" 用法
.\" --------------------------------------------------------------------------
.
.SH "用法"
每个 "flag" 选项有个相反的 "noflag" 选项对应, 如: 选项 \-fs 相反的是 \-nofs。
.PP
如果某选项标为: (仅用于 XXX), 就仅适用于与选项 XXX 联合使用或者已编译进 XXX。
.PP
.I 注意:
子选项解析器(例如用于 \-ao pcm 子选项)支持
一种特殊的字符串转义(string-escaping)意欲和外部的 GUI 一起使用。
.br
其格式如下:
.br
%n%string_of_length_n
.br
.I 示例:
.br
mplayer \-ao pcm:file=%10%C:test.wav test.avi
.br
或在脚本中:
.br
mplayer \-ao pcm:file=%`expr length "$NAME"`%"$NAME" test.avi
.PP
.
.\" --------------------------------------------------------------------------
.\" 配置文件
.\" --------------------------------------------------------------------------
.
.SH "配置文件"
你可以把所有选项放在配置文件中, 每次 MPlayer/MEncoder 运行时都会读取它们。
系统范围的配置文件 "mplayer.conf" 位于你的配置目录
(例如: /etc/\:mplayer 或者 /usr/\:local/\:etc/\:mplayer)中, 
用户指定的配置文件是 "~/\:.mplayer/\:config"。
MEncoder 的配置文件是 "mencoder.conf" 位于你的配置目录
(例如: /etc/\:mplayer 或者 /usr/\:local/\:etc/\:mplayer)中, 
用户指定的配置文件是 "~/\:.mplayer/\:mencoder.conf"。
用户指定的选项优先于系统范围的选项, 而命令行选项优先于以上两者。
配置文件的语法是 "option=<值>", 任何 "#" 后面的都认为是注释。
启用没有参数值的选项可以把参数设为 "yes" 或者 "1" 或者 "true", 
而如果要停用就把它们设置为 "no" 或者 "0" 或者 "false"。
甚至子选项也可以如此设定选项。
.PP
你也可以为特定文件写配置文件。
如果你希望一个特定文件 "movie.avi" 有个配置文件, 就新建文件, 
名为 "movie.avi.conf", 写上该特定文件的选项并放在目录 ~/.mplayer/ 下。
你也可以把配置文件放在与播放该特定文件时该特定文件相同的目录之下, 
只要你(要么在命令行或者在全局配置文件中)给定 \-use-filedir-conf 选项。
.PP
.I MPLAYER 配置文件示例:
.sp 1
.nf
# 默认使用 Matrox 驱动。
vo=xmga
# 我喜欢在看片子的时候练习倒立。
flip=yes
# 解码/编码多个 PNG 文件,
# 开始于 mf://文件掩码
mf=type=png:fps=25
# 怪异的负片图像好酷。
vf=eq2=1.0:-0.8
.fi
.PP
.I "MENCODER 配置文件示例:"
.sp 1
.nf
# 产生 MEncoder 输出到默认的文件名。
o=encoded.avi
# 下面四行使 mencoder tv:// 立刻开始捕捉。
oac=pcm=yes
ovc=lavc=yes
lavcopts=vcodec=mjpeg
tv=driver=v4l2:input=1:width=768:height=576:device=/dev/video0:audiorate=48000
# 较复杂的默认编码选项设置
lavcopts=vcodec=mpeg4:autoaspect=1
lameopts=aq=2:vbr=4
ovc=lavc=1
oac=lavc=1
passlogfile=pass1stats.log
noautoexpand=1
subfont-autoscale=3
subfont-osd-scale=6
subfont-text-scale=4
subalign=2
subpos=96
spuaa=20
.fi
.
.\" --------------------------------------------------------------------------
.\" 配置集
.\" --------------------------------------------------------------------------
.
.SH "配置集"
为了方便操作不同的配置文件, 可以在配置文件中定义配置集。
配置集以放在方括号中的名称开始, 如: "[my-profile]"。
所有跟随的选项成为配置集的一部分。
描述(通过 \-profile help 显示)定义于 profile-desc 选项。
要结束该配置集, 使用别的名称开始即可
或使用配置集名称 "default" 继续正常的选项。
.fi
.PP
.I "MENCODER 配置集示例:"
.sp 1
.nf

[mpeg4]
profile-desc="MPEG4 encoding"
ovc=lacv=yes
lavcopts=vcodec=mpeg4:vbitrate=1200

[mpeg4-hq]
profile-desc="HQ MPEG4 encoding"
profile=mpeg4
lavcopts=mbd=2:trell=yes:v4mv=yes
.fi
.
.\" --------------------------------------------------------------------------
.\" 选项
.\" --------------------------------------------------------------------------
.
.SH "通用选项"
.
.TP
.B \-codecs-file <文件名> (也请参见 \-afm, \-ac, \-vfm, \-vc)
重载标准的搜索路径并使用指定的文件代替内置的 codecs.conf。
.
.TP
.B \-include <配置文件>
指定配置文件在默认的配置文件后面解析。
.
.TP
.B \-list-options
打印所有可用的选项。
.
.TP
.B \-msgcharset <字符集>
转换控制台消息为指定的字符集(默认是自动侦测: autodetect)。
文字的字符集编码用选项 \-\-charset 指定配置。
设置为 "noconv" 以停用转换 (为了如: iconv 问题)。
.br
.I 注意:
选项在命令行解析完成后生效。
环境变量 MPLAYER_CHARSET 能帮你去除开头几行混乱的输出。
.
.TP
.B \-msglevel <all=<级别>:<模块>=<级别>:...>
直接对各个模块控制冗赘度。
此 "all" 模块改变所有模块(虽然没有在命令行中显式指定)的冗赘级别。
查看所有模块的列表请参见于 "\-msglevel help"。
.br
.I 注意:
消息是在命令行解析之前打印的, 仅受到能应用于所有模块的
环境变量 MPLAYER_VERBOSE 的控制。
.br
可用级别:
.PD 0
.RSs
.IPs "-1"
完全沉默
.IPs " 0"
仅致命消息
.IPs " 1"
错误消息
.IPs " 2"
警告消息
.IPs " 3"
简短提示
.IPs " 4"
信息消息
.IPs " 5"
状态消息 (隐藏用 \-quiet)
.IPs " 6"
冗赘消息
.IPs " 7"
调试级别 2
.IPs " 8"
调试级别 3
.IPs " 9"
调试级别 4
.RE
.PD 1
.
.TP
.B "\-quiet\ "
使得控制台消息少输出; 特别地, 阻止状态行
(即 A:   0.7 V:   0.6 A-V:  0.068 ...)的显示。
对慢机器或者不能正确处理回车符(即 \\r)的旧机器特别有用。
.
.TP
.B \-priority <优先> (仅适用于 Windows)
根据 Windows 下可用的预定义优先级设置 MPlayer 的进程优先级。
可能的 <优先> 值为:
.RSs
idle|belownormal|normal|abovenormal|high|realtime
.RE
.sp 1
.RS
.I 警告:
使用 realtime(实时) 优先级会引起系统锁住。
.RE
.
.TP
.B \-profile <配置轮廓1,配置轮廓2,...>
使用给定的配置轮廓, \-profile help 显示定义的配置轮廓列表。
.
.TP
.B \-really-quiet (也请参见 \-quiet)
显示比 \-quiet 更少的输出和状态信息。
.
.TP
.B \-show-profile <配置轮廓>
显示配置轮廓的描述和内容。
.
.TP
.B \-use-filedir-conf
在文件播放时的相同目录之下寻找该特定文件的配置文件。
.br
.I 警告:
播放未经信任的媒体可能有危险。
.
.TP
.B "\-v\ \ \ \ \ "
提高冗赘级别, 对命令行中发现的各个 \-v 提高一级。
.
.
.
.SH "播放器选项（仅适用于MPLAYER）"
.
.TP
.B \-autoq <质量> (和 \-vf [s]pp 一起使用)
依据可用的 CPU 空闲时间动态改变后期处理的级别。
你指定的数字可能是已使用中的最高级别。通常你可以使用有点高的级别数字。
为此你必须使用不带参数的 \-vf [s]pp 选项。
.
.TP
.B \-autosync <因子>
基于音频延迟的检测逐步调整 A/V 同步。
指定 \-autosync 0, 也就是默认值, 将导致帧计时完全基于音频延迟的检测。
指定 \-autosync 1 也是一样, 但会微妙地改变所使用的 A/V 修正算法。
对那些视频帧率不均匀, 但用 \-nosound 可以正常播放的电影, 
设置大于 1 的整数值一般会有所帮助。
这个值越大, 计时方法越接近于 \-nosound。
对于某些音频延迟检测实现不完善的声卡驱动, 试试用 \-autosync\ 30 来平滑此问题。
使用这个值时, 如果出现 A/V 同步大偏移, 只需要 1, 2 秒时间就可以搞定。
对于所有的声卡驱动, 对突然的 A/V 偏移, 在反应时间上有延迟, 
这应该是打开此选项的唯一副作用。
.
.TP
.B \-benchmark
在终端打印一些回放后的 CPU 使用率和丢帧数的统计信息。
与 \-nosound 和 \-vo null 联合使用可用来仅仅评测视频编解码器.
.br
.I 注意:
使用此参数仅仅回放视频时, MPlayer 也将忽略帧持续期(frame duration) 
(你可以认为那是不定帧率)。
.
.TP
.B \-colorkey <号码>
改变 colorkey 为你所选的 RGB 值。
0x000000 是黑色而 0xffffff 是白色。
仅被视频输出驱动 cvidix, fbdev, svga, vesa, winvidix, xmga, xvidix, 
xover, xv (参见 \-vo xv:ck), xvmc (参见 \-vo xv:ck) 和 directx 支持。
.
.TP
.B \-nocolorkey
停用 colorkeying。
仅被视频输出驱动 cvidix, fbdev, svga, vesa, winvidix, xmga, xvidix, 
xover, xv (参见 \-vo xv:ck), xvmc (参见 \-vo xv:ck) 和 directx 支持。
.
.TP
.B \-correct-pts (试验)
切换 MPlayer 到试验模式, 
其中视频帧的时戳计算不同, 且支持视频过滤器添加新的帧或修改已有的时戳。
可以看到更精确的时戳, 例如通过 \-ass 选项修改播放字幕与镜头同步。
没有 \-correct-pts, 字幕同步典型地会被某些帧关闭。
此选项不能与某些分路器和编解码器一起正常工作。
.
.TP
.B \-crash-debug (调试代码)
一旦崩溃或 SIGTRAP 自动联上 gdb 调试程序。
此支持必须已编译进配置 \-\-enable-crash-debug。
.
.TP 
.B \-doubleclick-time 
以毫秒为单位的时间值，用以判定两次连续的按键动作是否为一次双击动作（默认值：
300）。
设为0则让你的窗体系统判断什么样动作的是双击（仅当 \-vo directx 时）。
.br
.I 注意：
你会体验到不同的效果，这取决于你绑定了 MOUSE_BTN0_DBL 还是
MOUSE_BTN0\-MOUSE_BTN0_DBL。
.
.TP
.B \-edlout <文件名>
新建文件并写入 EDL(编辑决定列表) 记录。
回放时, 用户击 "i" 键标记跳过块的开始结束处。
这提供了用户一个以后能精调 EDL (记录)项的开始点。
详情请参见 http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:edl.html。
.
.TP
.B \-enqueue (仅用于 GUI)
将命令行中给定的文件排入播放列表但不立刻播放。
.
.TP
.B \-fixed-vo
为多个文件锁定一个固定的视频系统 (对所有的文件(反)初始化仅一次)。
这样, 对所有文件只打开一个窗口。
目前 fixed-vo 兼容的驱动有: gl, gl2, mga, svga, x11, xmga, 
xv, xvidix 和 dfbmga。
.
.TP
.B \-framedrop (也请参见 \-hardframedrop)
跳过显示一些帧从而在慢的机器上保持 A/V 同步。
视频滤镜不会应用到这些帧上。对于 B-帧 甚至解码也完全跳过。
.
.TP
.B \-(no)gui
启用或停用 GUI 接口(默认取决于可执行文件名)。
仅能作为命令行第一个参数。不能作为选项写入配置文件。
.
.TP
.B \-h, \-help, \-\-help
显示简短的选项概要。
.
.TP
.B \-hardframedrop
更高强度的丢帧(破坏解码)。导致图像失真!
.
.TP
.B \-identify
是 \-msglevel identify=4 的简式。使用易于分析的格式显示文件参数。
也打印更详细的字幕信息和音轨语言和 ID。
在某些情形下, 你使用 \-msglevel identify=6 能得到更多的信息。
例如, 对于 DVD 能列出每个标题的时长和碟片 ID 号。
wrapper(封套) 脚本 TOOLS/\:midentify 能抑制 MPlayer 的其它输出
并(希望能) shellescapes(脚本转义) 文件名。
.
.TP
.B \-idle (也请参见 \-slave)
当没有文件播放时, 让 MPlayer 空闲等待而不是退出。
一般在 slave 模式时有用, 能通过输入命令控制 MPlayer。
.
.TP
.B \-input <命令>
此选项可以用来配置输入系统的某些部分。路径相对于 ~/.mplayer/。
.br
.I 注意:
自动重复功能目前只有游戏操纵杆支持。
.sp 1
可用的命令有:
.sp 1
.PD 0
.RSs
.IPs conf=<文件名>
指定输入配置文件而不是默认的 ~/\:.mplayer/\:input.conf。
如果没有给出完全路径名, 将假设是 ~/\:.mplayer/\:<文件名>。
.IPs ar-delay
在开始自动重复一个键之前等待多少毫秒 (0 代表停用)。
.IPs ar-rate
自动重复数是每秒重复多少次按键。
.IPs keylist
列出所有可以被绑定于命令的键。
.IPs cmdlist
列出所有可以被绑定于键的命令。
.IPs js-dev
指定使用的操纵杆设备(默认是: /dev/\:input/\:js0)。
.IPs file=<文件名>
从给定文件中读取命令。
一般结合 FIFO 时有用。
.br
.I 注意:
当给定文件是 FIFO 时 MPlayer 打开两个端头, 这样你就可以做
几次 ‘echo "seek 10" > mp_pipe’ 而管道仍保持有效。
.RE
.PD 1
.
.TP
.B \-key-fifo-size <2\-65000>
指定 FIFO 大小供缓冲按键事件（默认值：7）。
n 大小的 FIFO 能容纳 (n-1) 缓冲事件。
如果太小会丢失一些事件
(导致 "鼠标键卡住" 或类似效果)。
如果太大, MPlayer 处理缓冲的事件时可能看上去挂住了。
为得到同以前一样的行为效果而引入此选项,
对 Linux 设置为 2 或对 Windows 为 1024。
.
.TP
.B \-lircconf <文件名> (仅适用于 LIRC)
为 LIRC 指定配置文件(默认是: ~/.lircrc)。
.
.TP
.B \-list-properties
打印可用的属性列表。
.
.TP
.B \-loop <数>
重复回放电影 <数> 遍。
0 表示重复不断。
.
.TP
.B \-menu （仅用于OSD菜单）
打开 OSD 菜单支持。.
.
.TP
.B \-menu-cfg <文件名> （仅用于OSD菜单）
使用另一种的 menu.conf。
.
.TP
.B \-menu-keepdir （仅用于OSD菜单)
文件浏览器的起始位置为上一次记录的位置而不是当前目录。
.
.TP
.B \-menu-root <参数值> (仅适用于 OSD 菜单)
指定主菜单。
.
.TP
.B \-menu-startup (仅适用于 OSD 菜单)
在 MPlayer 启动时显示主菜单。
.
.TP
.B \-mouse-movements
允许 MPlayer 接受指针事件来自视频输出驱动(目前仅支持 X11 衍生型)。
必须选择 DVD 菜单中的按钮。
.
.TP
.B \-noconsolecontrols
阻止 MPlayer 读取标准输入的键盘事件。
读取标准输入的数据时有用。命令行中发现 \- 会自动启用。
会遇到不得不手动设置的情形, 比如你
打开 /dev/\:stdin (或者你系统中等价的设备), 在播放列表中使用 stdin 
或者意欲以后通过 slave 命令的 loadfile 或 loadlist 从 stdin 读取。
.
.TP
.B \-nojoystick
关闭支持操纵杆。
.
.TP
.B \-nolirc
关闭支持 LIRC。
.
.TP
.B \-nomouseinput
停用鼠标键 按/\:放 输入 (mozplayerxp 的上下文菜单依赖此选项)。
.
.TP
.B \-rtc (仅适用 RTC)
打开使用 Linux 的 RTC (实时钟 \- /dev/\:rtc) 作为计时机制。
唤醒过程每 1/1024 秒核查当前时间。
除非现代 Linux 内核配置为桌面应用, 因为当使用正常的定时睡眠时, 
已唤醒相似精度的过程。
.
.TP
.B \-playing-msg <字符串>
开始回放前打印出字符串。
支持以下的扩展:
.RSs
.IPs ${NAME}
扩展为属性 NAME 的值。
.IPs $(NAME:TEXT)
仅当属性 NAME 可用时扩展 TEXT(文字)。
.RE
.
.TP
.B \-playlist <文件名>
根据播放列表播放文件(ASX, Winamp, SMIL, 或者
one-file-per-line(每行一个文件) 格式)。
.br
.I 注意:
此选项作为条目仅应用于播放列表的元素以后, 会找到选项。
.br
FIXME: 需要彻底理清并建立文档。
.
.TP
.B \-rtc-device <设备>
为 RTC 计时使用指定的设备。
.
.TP
.B \-shuffle
以随机顺序播放文件。
.
.TP
.B \-skin <名> (仅用于 GUI)
从默认皮肤目录 
/usr/\:local/\:share/\:mplayer/\:skins/\: 或 ~/.mplayer/\:skins/ 
下的, 作为参数的给定目录中装载皮肤。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-skin fittyfene"
尝试 /usr/\:local/\:share/\:mplayer/\:skins/\:fittyfene
然后是 ~/.mplayer/\:skins/\:fittyfene。
.RE
.PD 1
.
.TP
.B \-slave (也请参见 \-input)
切换到 slave 模式, MPlayer 为其他程序在后台运行。
MPlayer 从标准输入读取以新行 (\\n) 分隔开的命令行, 
而不再截获键盘事件。
.br
.I 注意:
请参见 \-input cmdlist 的命令列表和 DOCS/tech/slave.txt 中的描述。
.
.TP
.B \-softsleep
通过不断核查当前时间来测定帧的时间, 
而不是请求内核在适当的时刻唤醒 MPlayer。
对于内核计时器精度不高且不能使用 RTC 时有用, 代价是较高的 CPU 消耗。
.
.TP
.B \-sstep <数>
每帧后跳过 <数> 秒。
影片的正常帧率仍被保留, 所以回放加速了。
既然 MPlayer 仅能搜寻到下一个 keyframe, 加速过程可能不精准。
.
.
.
.SH "分离器/媒体流选项"
.
.TP
.B \-a52drc <级别>
选择 AC3 音频流的动态范围压缩(DRC)级别。
<级别> 是 0 到 1 的浮点数, 其中 0 表示无压缩, 
(默认值) 1 表示全压缩 (使得响亮的通路更安静或相反)。
此选项仅当 AC3 流包含所需范围的压缩信息时显示效果。
.
.TP
.B \-aid <标识> (也请参见 \-alang)
选择音频频道 (MPEG: 0\-31, AVI/\:OGM: 1\-99, ASF/\:RM: 0\-127, 
VOB(AC3): 128\-159, VOB(LPCM): 160\-191, MPEG-TS 17\-8190)。
MPlayer 在 verbose (\-v) 模式下会打印可用的音频标识。
当播放 MPEG-TS 流时, MPlayer/\:MEncoder 用第一个程序
播放已选择的(如果有的话)音频流。
.
.TP
.B \-alang <语言代号[,语言代号,...]> (也请参见 \-aid)
指定使用音频语言的优先级列表。
不同的容器格式使用不同的语言代号。DVDs 使用 ISO 639-1 的
两字符语言代号, Matroska、MPEG-TS 和 NUT 使用 ISO 639-2 的
三字符语言代号, 而 OGM 使用任意格式标识符。
MPlayer 在 verbose (\-v) 模式下会打印可用的语言。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "mplayer dvd://1 \-alang hu,en"
选择 DVD 上的匈牙利语音轨播放而英语在没有匈牙利语时备用。
.IPs "mplayer \-alang jpn example.mkv"
播放日语 Matroska 文件。
.RE
.PD 1
.
.TP
.B \-audio-demuxer <[+]名称> (仅用于 \-audiofile)
锁定用于 \-audiofile 的音频分路器类型。
在名称前使用 "+" 锁定类型, 跳过某些核查!
按照 \-audio-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 libmpdemux/\:demuxer.h 的分路器标识。
\-audio-demuxer audio 或 \-audio-demuxer 17 锁定 MP3。
.
.TP
.B \-audiofile <文件名>
在看电影时播放外部音频文件(WAV, MP3 或 Ogg Vorbis)。
.
.TP
.B \-audiofile-cache <千字节>
对 \-audiofile 的文件流启用缓存, 使用指定大小的内存。
.
.TP
.B \-reuse-socket （仅适用于udp://）
允许SOCKET在关闭后立即被其它进程重新利用。
.
.TP
.B \-bandwidth <参数值> (仅适用于网络)
指定网络流的最大带宽(用于服务器可以以不同带宽传送内容的情况)。
当你以慢速连接观看现场流媒体时有用。
对于 Real RTSP 流, 也用来设置最大的传送带宽
以容许较快的缓存填充和流转储。
.
.TP
.B \-cache <千字节>
此选项指定用多少内存(以 kBytes 为单位)作为播放文件或 URL 的预缓冲。
对速度慢的媒体特别有用。
.
.TP
.B \-nocache
关闭缓冲。
.
.TP
.B \-cache-min <百分数>
当缓冲填充到总数的 <百分数> 时开始回放。
.
.TP
.B \-cache-seek-min <百分数>
如果查寻到的位置处于从当前位置算起的缓存大小的 <百分数> 之内, 
MPlayer 等待填充缓存到此位置而不是执行流查寻(默认是: 50)。
.
.TP
.B \-cdda <选项1:选项2> (仅适用于 CDDA)
此选项用来调整 MPlayer 的 CD 音频读取特性。
.sp 1
可用选项有:
.RSs
.IPs speed=<参数值>
设定 CD 转速。
.IPs paranoia=<0\-2>
设定谨慎级别。
0 以外的值可能会打断除了第一个音轨的任何回放。
.RSss
0: 关闭检测 (默认)
.br
1: 只进行重叠检测
.br
2: 完全数据修正和校检
.REss
.IPs generic-dev=<参数值>
使用指定的通用 SCSI 设备。
.IPs sector-size=<参数值>
单位读取量。
.IPs overlap=<参数值>
锁定校检时的最小重叠搜索为 <参数值> 个扇区。
.IPs toc-bias
假定 TOC 报告中第1音轨的起始偏移量为 LBA 0。
有些东芝光驱需要这样来修正音轨边界。
.IPs toc-offset=<参数值>
报告音轨时在扇区数上再加上 <参数值> 个扇区。可能是负数。
.IPs (no)skip
(不)接受不完整的数据重建。
.RE
.
.TP
.B \-cdrom-device <设备路径>
指定 CD-ROM 设备 (默认是: /dev/\:cdrom)。
.
.TP
.B \-channels <数字> (也请参见 \-af channels)
请求播放的声道数 (默认是: 2)。
MPlayer 要求解码器把音频解码到指定数量的声道。
然后由解码器来实现这个要求。
此选项通常只有在播放带 AC3 音频(比如 DVD)的视频时才显得重要。
在那时默认使用 liba52 解码并把音频正确地混合到需要的声道数。
为了直接控制输出声道数独立于解码声道数, 使用声道过滤器。
.br
.I 注意:
此选项可以被解码器(仅适用于 AC3), 过滤镜(环绕立体声), 和音频
输出驱动(至少 OSS 可以)接受。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs 2
立体声
.IPs 4
环绕立体声
.IPs 6
5.1 立体声
.RE
.PD 1
.
.TP
.B \-chapter <场景标识>[\-<末尾场景标识>] (仅适用于 dvd:// 和 dvdnav://)
指定从哪个场景开始播放。也可以指定在哪个场景结束播放 (默认值为: 1)。
.
.TP
.B \-cookies (仅适用于网络)
HTTP 请求时发送 cookies。
.
.TP
.B \-cookies-file <文件名> (仅适用于网络)
从 <文件名> 中读取 HTTP cookies (默认是: ~/.mozilla/ 和 ~/.netscape/)
而跳过从默认位置读取。
假定文件是 Netscape 格式。
.
.TP
.B \-delay <数>
音频延迟数秒 (正或负的浮点数)
.br
负值延迟音频，而正值延迟视频。
注意这与MEncoder的\-audio-delay选项正好相反。
.br
.I 注意:
当和 MEncoder 一起用时, 并不保证能与 \-ovc copy 一起工作正常; 
请使用 \-audio-delay。
.
.TP
.B \-ignore-start
忽略 AVI 文件中指定的流开始时间。
对于 MPlayer, 用 \-audio-delay 选项编码的文件废除了流延迟。
在编码时期, 此选项防止 MEncoder 转送原流的开始时间到新的文件; 
但是 \-audio-delay 选项并不受影响。
注意 MEncoder 有时会自动调整流开始时间以补偿预期的解码延迟, 
所以没有测试之前不要使用此选项进行编码。
.
.TP
.B \-demuxer <[+]类型名>
锁定分路器类型。
在名称前使用 "+" 锁定类型, 跳过某些核查!
按照 \-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 libmpdemux/\:demuxer.h 的分路器标识。
.
.TP
.B \-dumpaudio (仅用于 MPlayer)
转储原始的音频压缩流到 ./stream.dump (用于 MPEG/\:AC3, 
对大多数其它情形, 转储的文件不可播放)。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dumpfile <文件名> (仅用于 MPlayer)
指定 MPlayer 应该转储到的文件。
应该与 \-dumpaudio / \-dumpvideo / \-dumpstream 一起使用。
.
.TP
.B \-dumpstream (仅用于 MPlayer)
转储原始流到 ./stream.dump。
从 DVD 或网络上抓取的时候有用。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dumpvideo (仅用于 MPlayer)
转储原始流到 ./stream.dump (不是十分有用)。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dvbin <选项> (仅用于 DVB)
为了替代默认的值, 把下面的参数传递给 DVB 输入模块:
.sp 1
.PD 0
.RSs
.IPs card=<1\-4>
指定使用卡号 1\-4 (默认是: 1).
.IPs file=<文件名>
指示 MPlayer 从频道中读取 <文件名>。
默认是 ~/.mplayer/\:channels.conf.{sat,ter,cbl,atsc} (基于卡的类型)
或者最后于求助 ~/.mplayer/\:channels.conf。
.IPs timeout=<1\-30>
放弃试图调谐的最大等候秒数(默认是: 30)。
.RE
.PD 1
.
.TP
.B \-dvd\-device <设备路径> (仅用于 DVD)
指定 DVD 设备(默认是: /dev/\:dvd)。
你也可以指定目录, 其中包含以前直接从 DVD 拷贝(比如用 vobcopy)的文件。
首先注意使用 \-dumpstream 通常是更好的拷贝 DVD 的方法(请参见示例)。
.
.TP
.B \-dvd-speed <以KB/s为单位的因数或速度值> （仅适用于DVD） 
尝试限制DVD的传输速度（默认值：0，代表不作更改）。
DVD的基础速率约为1350KB/s，所以一台8倍速的驱动器能以最高10800KB/s的速度读取
数据。
较低的速度使驱动器工作得更安静，对于观看DVD片来说，2700KB/s应该是足够安静且快速
了。 
MPlayer在关闭时将驱动器的速度重置至默认值。
数值如果小于100则表示1350KB/s的倍数，例如\-dvd-speed 8表示选择10800KB/s。
.br
.I 注意：
你需要用DVD设备的写权限以更改传输速度。
.
.TP
.B \-dvdangle <视角标识> (仅用于 DVD)
有些 DVD 碟片中的场景可以从多个视角观看。
这里你可以告诉 MPlayer 使用哪个视角(默认是: 1)。
.
.TP
.B \-edl <文件名>
回放时启用编辑决定列表(EDL)。
根据给定文件的条目视频被跳过, 而音频或静音或不静音。
如何使用详情请参见 http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:edl.html。
.
.TP
.B \-endpos <[[hh:]mm:]ss[.ms]|size[b|kb|mb]> (也请参见 \-ss 和 \-sb)
停止在给定的时间或字节位置。
.br
.I 注意:
字节位置仅为了 MEncoder 而启用但不精确, 因为它只会停在帧的边缘。
当与 \-ss 选项组合使用时, \-endpos 的时间会向前移动 \-ss 指定的秒数。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-endpos 56"
56 秒后停止。
.IPs "\-endpos 01:10:00"
1 小时 10 分后停止。
.IPs "\-ss 10 \-endpos 56"
1 分 6 秒后停止。
.IPs "\-endpos 100mb"
只编码 100 MB。
.RE
.PD 1
.
.TP
.B \-forceidx
强制索引重建。
对索引受损的文件(A/V 不同步等等)有用。
这使得不可能搜索的文件启用搜索。
你能使用 MEncoder 永久性地修复索引 (请参见文档)。
.br
.I 注意:
此选项仅对原本支持搜索的媒体有效 (即不能是: 标准输入, 管道, 等)。
.
.TP
.B \-fps <浮点数>
重载帧速率。
如果原先的值是错误的或缺少的有用。
.
.TP
.B \-frames <参数值>
只播放/\:转换前<参数值>帧, 然后退出。
.
.TP
.B \-hr-mp3-seek (仅用于 MP3)
高精度 MP3 搜索。
播放外部 MP3 文件时启用, 
因为我们需要搜索到非常精确的位置来保持 A/V 同步。
这种方法在后退搜索时尤其慢, 因为需要绕回到开头来寻找准确的帧位置。
.
.TP
.B \-idx (也请参见 \-forceidx)
在没有找到索引的情况下重建文件的索引, 从而允许搜索。
对于损坏的/\:不完整的下载, 或制作低劣的文件有用。
.br
.I 注意:
此选项仅对原本支持搜索的媒体有效 (即不能是: 标准输入, 管道, 等)。
.
.TP
.B \-noidx
跳过重建索引文件的步骤。
MEncoder在此选项下跳过写入索引的步骤。
.TP
.B \-ipv4-only-proxy (仅适用于网络)
对于 IPv6 地址跳过代理服务器。
仍然用于 IPv4 连接。
.
.TP
.B \-loadidx <索引文件>
从 \-saveidx 保存的此文件中, 读取视频索引数据。
索引用于搜索, 过载其它任何包含在 AVI 本身的索引。
MPlayer 不阻止你装载产生于不同 AVI 的索引文件, 
但是的确会导致不利的结果。
.br
.I 注意:
既然 MPlayer 现在支持 OpenDML, 此选项已废弃。
.
.TP
.B \-mc <每帧秒数>
每帧的最大 A-V 同步修正(以秒为单位)。
.
.TP
.B \-mf <选项1:选项2:...>
用来从多个 PNG 或 JPEG 文件中解码。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs w=<参数值>
输入文件的宽度 (默认是: 自动检测)
.IPs h=<参数值>
输入文件的高度 (默认是: 自动检测)
.IPs fps=<参数值>
输出的帧率 (默认是: 25)
.IPs type=<参数值>
输入文件的类型 (可用类型是: jpeg, png, tga, sgi)
.RE
.PD 1
.
.TP
.B \-ni (仅用于 AVI)
锁定使用非交错的 AVI 分析器(修复某些质量差的 AVI 文件的播放)。
.
.TP
.B \-nobps (仅用于 AVI)
不使用平均比特率值来维持 A-V 同步。
对某些文件头损坏的 AVI 文件有帮助。
.
.TP
.B \-noextbased
停用基于后缀名的分路器选择机制。
默认情况下, 当文件类型(分路器)无法可靠检测时
(文件没有头部或者不够可靠), 使用文件后缀名来选择分路器。
基于内容的分路器总是可作为备用的。
.
.TP
.B \-passwd <密码> (也请参见\-user 选项) (仅适用于网络)
设置 http 认证密码.
.
.TP
.B \-prefer-ipv4 (仅适用于网络)
使用 IPv4 网络连接。
IPv6 自动地作为备用。
.
.TP
.B \-prefer-ipv6 (仅适用于 IPv6 网络)
使用 IPv6 网络连接。
IPv4 自动地作为备用。
.
.TP
.B \-psprobe <字节所在位置>
当播放MPEG-PS流时，此选项让你设定你希望MPlayer查看多少字节以确认所要
使用的视频编/解码器。 
在播放含有H.264流的EVO文件时需要此选项。
.
.TP
.B \-pvr <选项1:选项2:...> (仅适用于 PVR)
此选项调谐 PVR 捕捉模块的各种编码属性。
不得不与基于硬件 MPEG 编码器 V4L2 驱动支持的卡一起使用。
Hauppauge WinTV PVR\-150/250/350/500 和所有基于 IVTV 的卡
是众所周知的 PVR 捕捉卡。
小心只有 Linux 2.6.18 及以上的内核能通过 V4L2 层处理 MPEG 流。
对于 MPEG 流硬件捕捉卡并使用 MPlayer/MEncoder 来观看电影的, 
使用 "pvr://" 作为 URL 地址。
.sp 1
可用选项有:
.RSs
.IPs aspect=<0\-3>
指定宽高比:
.RSss
0: 1:1
.br
1: 4:3 (默认)
.br
2: 16:9
.br
3: 2.21:1
.REss
.IPs arate=<32000\-48000>
指定编码音频率(encoding audio rate) (默认是: 48000 Hz, 可用的有: 32000, 
44100 和 48000 Hz)。
.IPs alayer=<1\-3>
指定编码 MPEG 音频层 (默认是: 2)。
.IPs abitrate=<32\-448>
指定音频编码比特率(以 kbps 为单位) (默认是: 384)。
.IPs amode=<参数值>
指定音频编码模式。
可用的预设值是 "stereo", "joint_stereo", "dual" 和 "mono" (默认是: stereo)。
.IPs vbitrate=<参数值>
指定平均编码视频比特率(以 Mbps 为单位) (默认是: 6)。
.IPs vmode=<参数值>
指定视频编码模式:
.RSss
vbr: Variable BitRate (可变比特率) (默认)
.br
cbr: Constant BitRate (常量比特率)
.REss
.IPs vpeak=<参数值>
指定编码视频比特率峰值(以 Mbps 为单位) 
(只对 VBR 编码有用, 默认是: 9.6)。
.IPs fmt=<参数值>
选择进行编码的 MPEG 格式:
.RSss
ps:    MPEG-2 Program Stream (MPEG-2 程序流) (默认)
.br
ts:    MPEG-2 Transport Stream (MPEG-2 传输流)
.br
mpeg1: MPEG-1 System Stream (MPEG-1 系统流)
.br
vcd:   Video CD compatible stream (VCD 可兼容流)
.br
svcd:  Super Video CD compatible stream (SVCD 可兼容流)
.br
dvd:   DVD compatible stream (DVD 可兼容流)
.REss
.RE
.PD 1
.
.TP
.B \-radio <选项1:选项2:...> （仅适用于收音）
这些选项集用以设置收音捕捉模块的各种参数。
要用MPlayer收听电台使用‘radio://<频率>’（如果不提供频道选项）或
‘radio://<频道号>’（如果提供频道选项）作为URL。
你可以通过以‘-v’选项运行MPlayer查看允许的频率范围。
若要启动捕捉子系统，则使用‘radio://<频率或频道>/capture’。
如果不给出关键字capture，则你可以只使用输入线缆收听电台。
由于同步问题，不推荐使用capture来收听电台，这会使效果不佳。
.sp 1
可用选项有：
.RSs
.IPs device=<值>
所使用的收音设备（默认值：Linux下为/dev/radio0，而*BSD下为/dev/tuner0）。
.IPs driver=<值> 
所使用的收音驱动（默认值：如果有则用v412，否则为v41）。
当前支持v41和v412驱动。
.IPs volume=<0..100>
收音设备的音量（默认为100）
.IPs freq_min=<值>（仅适用于*BSD BT848）
允许的最小频率（默认值：87.50）
.IPs freq_max=<value>（仅适用于*BSD BT848）
允许的最大频率（默认值：108.00）
.IPs channels=<频率>\-<名称>,<频率>\-<名称>,...
设置频道列表。
在名称中用“_”代替空格（或使用引号）。
频道名字就会以OSD方式显示出来，而从命令radio_step_channel和radio_set_channel
对于遥控会很有用（参见LIRC）。
如果给出，则URL中的数字将作为频道列表中的频道位置编号。
.br
.I 示例:
radio://1, radio://104.4, radio_set_channel 1
.IPs adevice=<值>（需要激活收音捕捉功能） 
作为所捕捉声音来源的设备的名字
没有这样的名字将禁用捕捉功能，即便URL中出现capture关键字。
如果设备名中含有一个‘=’，则模块将使用ALSA来捕捉，
否则用OSS。
.IPs arate=<参数值>（需要激活收音捕捉功能）
以每秒采样数为单位的频率值（默认值：44100）。
.br
.I 注意：
当使用音频捕捉时，也将\-rawaudio rate=<数值>选项设置为arate中一样的值。
如果你存在声音播放速度的问题（播放太快），尝试以不同的速率值
（例如4800，44100，32000……）播放 。
.IPs achannels=<参数值>（需要激活收音捕捉功能）
捕捉声音的声道数。
.RE
.
.TP
.B \-rawaudio <选项1:选项2:...>
此选项可让你播放原始音频文件。
你也不得不使用 \-demuxer rawaudio。
也可以用来播放不是 44kHz 16-位 立体声的音频 CD。
播放原始 AC3 流请使用 \-rawaudio format=0x2000 \-demuxer rawaudio。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs channels=<参数值>
声道数
.IPs rate=<参数值>
每秒采样率
.IPs samplesize=<参数值>
样本大小(以字节为单位)
.IPs bitrate=<参数值>
原始音频文件的比特率
.IPs format=<参数值>
16-进制的 fourcc
.RE
.PD 1
.
.TP
.B \-rawvideo <选项1:选项2:...>
此选项可让你播放原始视频文件。
你也不得不使用 \-demuxer rawvideo。
.sp 1
可用的选项有:
.sp 1
.PD 0
.RSs
.IPs fps=<参数值>
每秒帧(速)率 (默认是: 25.0)
.IPs sqcif|qcif|cif|4cif|pal|ntsc
设置标准的图像大小
.IPs w=<参数值>
图像宽(以像素为单位)
.IPs h=<参数值>
图像高(以像素为单位)
.IPs i420|yv12|yuy2|y8
设置色彩空间
.IPs format=<参数值>
16-进制的色彩空间(fourcc)
.IPs size=<参数值>
帧大小(以字节为单位)
.REss
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs "mplayer foreman.qcif -demuxer rawvideo -rawvideo qcif"
播放著名的 "foreman" 视频样本。
.IPs "mplayer sample-720x576.yuv -demuxer rawvideo -rawvideo w=720:h=576"
播放原始 YUV 样本。
.RE
.PD 1
.
.TP
.B \-rtsp-port
与 "rtsp://" 的 URL 地址一起用来锁定客户端的端口号。
如果你在路由器后面, 想把 RTSP 流从服务器转到指定客户端, 此选项可能有用。
.
.TP
.B \-rtsp-destination
与 "rtsp://" 的 URL 地址一起用来强制目标绑定 IP 地址。
对某些 RTSP 服务器不能把 RTP 包送到正确的接口, 此选项可能有用。
如果连接 RTSP 服务器失败, 使用 \-v 看看 MPlayer 试图绑定到
哪个 IP 地址, 然后试试用它强制分配到你的计算机。
.
.TP
.B \-rtsp-stream-over-tcp (仅适用于 LIVE555)
与 "rtsp://" 的 URL 地址一起用来指定让 RTP 和 RTCP 进入包流过 TCP 
(使用与 RTSP 相同的 TCP 连接)。
如果你的破 internet 连接不传递 UDP 进入包, 此选项可能有用 
(参见 http://www.live555.com/\:mplayer/)。
.
.TP
.B \-saveidx <文件名>
强制重建索引并转储到 <文件名>。
目前只对 AVI 文件有效。
.br
.I 注意:
既然 MPlayer 现在支持 OpenDML, 此选项已废弃。
.
.TP
.B \-sb <比特位置> (也请参见 \-ss)
搜索到比特位置。
回放开始部分是垃圾的 CD-ROM 镜像或 VOB 文件时有用。
.
.TP
.B \-speed <0.01\-100>
根据给定的参数因子, 减慢或加快回放速度。
并不保证能与 \-oac copy 一起工作正常。
.
.TP
.B \-srate <Hz>
选择输出的取样率(当然声卡对此有限制)。
如果选择的样本频率与当前的媒体有差异, 会在音频过滤层中插入
音频过滤器 resample(重采样) 或 lavcresample 来补偿此差异。
重采样的类型由 \-af-adv 选项控制。
默认的是快速重采样, 可能会引起失真。
.
.TP
.B \-ss <时间> (也请参见 \-sb)
搜索到给定的时间位置。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-ss 56"
搜索到 56 秒处。
.IPs "\-ss 01:10:00"
搜索到 1 小时 10 分钟处。
.RE
.PD 1
.
.TP
.B \-tskeepbroken
告诉 MPlayer 不要丢弃流中报告损坏的 TS 包。
有时需要播放窜改了的 MPEG-TS 文件。
.
.TP
.B \-tsprobe <字节位置>
播放 MPEG-TS 流时, 此选项让你指定流中多少字节给 MPlayer 搜索
你所要的音频和视频的标识。
.
.TP
.B \-tsprog <1\-65534>
播放 MPEG-TS 流时, 你可以用此选项指定你想运行的程序(如果知道的话)。
能和 \-vid 及 \-aid 一起使用。
.
.TP
.B \-tv <选项1:选项2:...> (仅用于 TV/\:PVR)
此选项会调谐 TV 捕捉模块的各种属性。
为了用 MPlayer 收看 TV, 使用 "tv://" 或 "tv://<频道号>"
甚至用 "tv://<频道名>" (参见下面的频道选项) 作为 URL 地址。
.sp 1
可用选项有:
.RSs
.IPs noaudio
没有声音
.IPs driver=<参数值>
参见\-tv driver=help以获取内置TV输入驱动的列表。
可用参数: dummy, v4l, bsdbt848
.IPs device=<参数值>
指定 TV 设备 (默认是: /dev/\:video0）。
.I 注意：
对于bsdbt848驱动，你可以同时给出bktr和调谐设备的名称，使用逗号分隔两
者，其中调谐器在bktr之后（例如：-tv device=/dev/bktr1,/dev/tuner1）。
.IPs input=<参数值>
指定输入 (默认是: 0 (TV), 参见控制台输出的可用输入列表）。
.IPs freq=<参数值>
指定调谐器的频率(例如: 511.250)。
与频道参数不兼容.
.IPs outfmt=<参数值>
指定调谐器的输出格式, 用 V4L 驱动支持的预设置(yv12, rgb32, rgb24, 
rgb16, rgb15, uyvy, yuy2, i420) 或者一个以 16-进制值给定的武断的格式。
试试用 outfmt=help 察看可用的所有格式的列表。
.IPs width=<参数值>
输出窗口的宽度
.IPs height=<参数值>
输出窗口的高度
.IPs fps=<参数值>
捕捉视频的帧速率(帧每秒)
.IPs buffersize=<参数值>
捕捉缓冲区的最大尺寸(以兆为单位) (默认值: 动态)
.IPs norm=<参数值>
bsdbt848 和 v4l 可用的参数: PAL, SECAM, NTSC。对于 v4l2, 
参见控制台输出的所有可用制式列表, 也请参看下面的 normid 选项。
.IPs "normid=<参数值> (仅用于 v4l2)"
设置 TV 制式 为给定的数字标识。
TV 制式取决于捕捉卡。参见控制台输出的可用 TV 制式列表。
.IPs channel=<参数值>
设置调谐器到 <参数值> 频道.
.IPs chanlist=<参数值>
可用参数: europe-east, europe-west, us-bcast, us-cable, 等等
.IPs channels=<频道>\-<名称>,<频道>\-<名称>,...
设置频道的名称。
.I 注意：
如果<频道>是一个大于1000的整数，它将被看作是频率（以kHz为单位）而不是频率表中的
频道名。
.br
名称中使用 _ 代替空格(或使用引号 ;-))。
OSD 会显示频道名称, slave 命令 tv_step_channel, tv_set_channel 及 
tv_last_channel 会有用于遥控(参见 LIRC)。
与频率参数不兼容。
.br
.I 注意:
频道号就将是 "频道" 列表上从1开始计数的位置。
.br
.I 示例:
tv://1, tv://TV1, tv_set_channel 1, tv_set_channel TV1
.IPs [brightness|contrast|hue|saturation]=<-100\-100>
设置显卡的色彩均衡器。
.IPs audiorate=<参数值>
设置音频捕捉比特率。
.IPs forceaudio
即使 v4l 报告没有音频源也捕捉音频。
.IPs "alsa\ "
从 ALSA 捕捉。
.IPs amode=<0\-3>
选择音频模式:
.RSss
0: 单声道
.br
1: 立体声
.br
2: 语言 1
.br
3: 语言 2
.REss
.IPs forcechan=<1\-2>
默认情况下, 音频声道数计数由电视卡查询音频模式自动决定。
此选项允许锁定立体声/\:单声道记录而不管 amode 选项和 v4l 返回的参数。
在电视卡不能报告正确的当前音频模式的时候可以用此选项解决麻烦。
.IPs adevice=<参数值>
设置音频设备。
<参数值> 必须是 /dev/\:xxx 用于 OSS 而硬件标识用于 ALSA。
硬件标识用于 ALSA 时, 你务必要用 "." 代替 ":"。
.IPs audioid=<参数值>
选择捕捉卡的音频输出, 如果它有不止一个的话。
.IPs "[volume|bass|treble|balance]=<0\-65535> (v4l1)"
.IPs "[volume|bass|treble|balance]=<0\-100> (v4l2)"
这些选项用来设置视频捕捉卡上的混音器参数。
如果你的卡没有混音器, 它们将没有效果。
对于 v4l2 50 根据驱动器的报告影射到控制器上的默认值。
.IPs immediatemode=<布尔值>
参数值为 0 表示同时捕捉和缓冲音频和视频 (MEncoder 的默认值)。
参数值为 1 (MPlayer 的默认值)表示只捕捉视频
而让音频通过环路电缆由电视卡输入声卡。
.IPs mjpeg
使用硬件 MJPEG 压缩(如果芯片支持的话)。
使用此选项时, 你不需要指定输出窗口的宽和高, 
因为 MPlayer 会根据 decimation 参数(见下面)自动确定。
.IPs decimation=<1|2|4>
选择硬件 MJPEG 压缩的图像尺寸:
.RSss
1: 全尺寸
    704x576    PAL
    704x480    NTSC
.br
2: 中等尺寸
    352x288    PAL
    352x240    NTSC
.br
4: 小尺寸
    176x144    PAL
    176x120    NTSC
.REss
.IPs quality=<0\-100>
选择 JPEG 压缩的质量(全尺寸推荐值 < 60)。
.RE
.
.TP
.B \-user <用户名> (也请参见 \-passwd) (仅用于网络)
指定 HTTP 认证的用户名。
.
.TP
.B \-user-agent <字符串>
使用 <字符串> 作为 HTTP 流的用户代理。
.
.TP
.B \-vid <标识>
选择视频频道 (MPG: 0\-15, ASF: 0\-255, MPEG-TS: 17\-8190)。
当播放 MPEG-TS 流时, MPlayer/\:MEncoder 用第一个程序
播放已选择的(如果有的话)视频流。
.
.TP
.B \-vivo <子选项> (调试代码)
锁定 VIVO 分路器的音频参数(用于调试)。
.
.
.
.SH "OSD/字幕选项"
.I 注意:
也请参见 \-vf expand。
.
.TP
.B \-ass (仅适用于 FreeType)
打开 SSA/ASS 字幕提供。
通过此选项, libass 将用于 SSA/ASS 外部字幕和 Matroska 轨迹。
你可能也想使用 \-embeddedfonts。
.
.TP
.B \-ass-border-color <参数值>
为文字字幕设置边框 (轮廓) 颜色。
颜色格式是 RRGGBBAA。
.
.TP
.B \-ass-bottom-margin <参数值>
在帧底部添加黑条。
SSA/ASS 提供器能在那里放置字幕 (与 \-ass-use-margins 组合用)。
.
.TP
.B \-ass-color <参数值>
为文字字幕设置颜色。
颜色格式是 RRGGBBAA。
.
.TP
.B \-ass-font-scale <参数值>
为 SSA/ASS 提供器中的字体设置比例系数。
.
.TP
.B \-ass-force-style <[Style.]Param=参数值[,...]>
重载一些风格参数。
.sp
.I 示例:
.PD 0
.RSs
\-ass-force-style FontName=Arial,Default.Bold=1
.RE
.PD 1
.
.TP
.B \-ass-hinting <类型>
设置微调类型。
.PD 0
.RSs
.IPs <类型>
0：无微调。
.br
1：FreeType自动微调器，轻量模式。
.br
2: FreeType自动微调器，普通模式。
.br
3: 字体内置微调。
.br
0-3 + 4：相同，但微调只有当OSD以全屏方式显示而因此不会伸缩时才会使用。
.br
默认值为7（当OSD不伸缩时使用内置微调器，否则无微调）。
.RE
.PD 1
.
.TP
.B \-ass-line-spacing <参数值>
为 SSA/ASS 提供器设置行间隔。
.
.TP
.B \-ass-styles <文件名>
装载指定文件中找到的所有 SSA/ASS 风格并在提供文字字幕时使用。
文件的语法完全像是 SSA/ASS 中的一节 [V4 Styles] / [V4+ Styles]。
.
.TP
.B \-ass-top-margin <参数值>
在帧顶部添加黑条。
SSA/ASS 提供器能在那里放置字幕 (与 \-ass-use-margins 组合用)。
.
.TP
.B \-(no)ass-use-margins
启用/停用放置字幕(如果有的话)在黑框中 (默认是: no)。
.
.TP
.B \-dumpjacosub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 JACOsub 字幕格式。
在当前的目录中创建 dumpsub.js 文件。
.
.TP
.B \-dumpmicrodvdsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为 MicroDVD 字幕格式。
在当前的目录中创建 dumpsub.sub 文件。
.
.TP
.B \-dumpmpsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为 MPlayer 的字幕格式, MPsub。
在当前的目录中创建 dumpsub.mpsub 文件。
.
.TP
.B \-dumpsami (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 SAMI 字幕格式。
在当前的目录中创建 dumpsub.smi 文件。
.
.TP
.B \-dumpsrtsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 SubViewer (SRT) 字幕格式。
在当前的目录中创建 dumpsub.srt 文件。
.br
.I 注意:
有些破硬件播放器对 Unix 行结尾的 SRT 字幕会哽住。
如果你够彩碰到这样的盒子, 把你的字幕文件到 unix2dos 或类似的程序过一过, 
替换 Unix 行结尾为 DOS/Windows 行结尾。
.
.TP
.B \-dumpsub (仅用于 MPlayer) (BETA 代码)
从 VOB 流中转储字幕子流。
也请参见 \-dump*sub 和 \-vobsubout* 选项。
.
.TP
.B \-(no)embeddedfonts (仅用于 FreeType)
允许抽取 Matroska 内嵌字体（默认值：禁止）。
这些字体能用于 SSA/ASS 字幕渲染 (\-ass 选项)。
字体文件创建在~/.mplayer/\:fonts目录中。
.br
.I 注意：
在FontConfig 2.4.2或更新的版本里，内嵌字体直接从内存中打开而这个选项默认打开。
.
.TP
.B \-ffactor <数字>
对字体的 alphamap 重新采样。
可设为:
.PD 0
.RSs
.IPs 0
普通白色字体
.IPs 0.75
非常细的黑色边框(默认值)
.IPs 1
细的黑色边框
.IPs 10
粗的黑色边框
.RE
.PD 1
.
.TP
.B \-flip-hebrew (仅用于 FriBiDi)
打开使用 FriBiDi 的翻转字幕。
.
.TP
.B \-noflip-hebrew-commas
改变 FriBiDi 中假定的字幕中的逗号位置。
如果字幕中的逗号显示在句首而不是在句尾, 就使用它。
.
.TP
.B \-font <文件 font.desc 的路径> 
在别的目录中寻找 OSD/\:SUB 字体(
默认的普通字体为: ~/\:.mplayer/\:font/\:font.desc, 
默认的 FreeType 字体为: ~/.mplayer/\:subfont.ttf)。
.br
.I 注意:
对于 FreeType, 此选项决定文本字体文件的路径。
对于 fontconfig, 此选项决定 fontconfig 的字体名称。
.sp 1
.I 示例:
.PD 0
.RSs
\-font ~/\:.mplayer/\:arial-14/\:font.desc
.br
\-font ~/\:.mplayer/\:arialuni.ttf
.br
\-font 'Bitstream Vera Sans'
.RE
.PD 1
.
.TP
.B \-fontconfig (仅用于 fontconfig)
启用使用 fontconfig 管理的字体。
.
.TP
.B \-forcedsubsonly
仅显示锁定的字幕, 例如由 \-slang 选择的 DVD 字幕流。
.
.TP
.B \-fribidi-charset <字符集名称> (仅用于 FriBiDi)
当编码非 UTF-8 字幕(默认是: ISO8859-8)时, 指定传递到 FriBiDi 的字符集。
.
.TP
.B \-ifo <VOBsub 的 IFO 文件>
指出用于装载 VOBsub 字幕的调色板和帧尺寸的文件。
.
.TP
.B \-noautosub
关闭自动载入字幕文件。
.
.TP
.B \-osd-duration <时间>
设置 OSD 信息的停留时间(以毫秒 ms 为单位) (默认是: 1000)。
.
.TP
.B \-osdlevel <0\-3> (仅用于 MPlayer)
指定 OSD 的启始模式。
.PD 0
.RSs
.IPs 0
只有字幕
.IPs 1
音量 + 搜索条 (默认)
.IPs 2
音量 + 搜索条 + 计时器 + 百分比
.IPs 3
音量 + 搜索条 + 计时器 + 百分比 + 总时间
.RE
.PD 1
.
.TP
.B \-overlapsub
虽然当前有字幕显示, 允许同时显示下一行字幕(默认启用只支持特定格式)。
.
.TP
.B \-sid <标识> (也请参见 \-slang, \-vobsubid)
显示由 <标识> (0\-31) 指定的字幕流。
MPlayer 运行在 verbose (\-v) 模式时, 打印可用的字幕标识。
如果你不能选择 DVD 中其中之一的字幕, 也请试试 \-vobsubid。
.
.TP
.B \-slang <语言代号[,语言代号,...]> (也请参见 \-sid)
指定使用字幕语言的优先级列表。
不同的容器格式使用不同的语言代号。DVDs 使用 ISO 639-1 的
两字符语言代号, Matroska 使用 ISO 639-2 的
三字符语言代号, 而 OGM 使用自由格式标识符。
MPlayer 在 verbose (\-v) 模式下会打印可用的语言。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "mplayer dvd://1 \-slang hu,en"
选择 DVD 上的匈牙利语字幕轨迹而英语在没有匈牙利语时备用。
.IPs "mplayer \-slang jpn example.mkv"
播放日语字幕的 Matroska 文件。
.RE
.PD 1
.
.TP
.B \-spuaa <模式>
设置 DVD/\:VOBsub 的反锯齿/\:缩放模式。
甚至在原始的与缩放的帧尺寸已匹配时, 还可能在 <模式> 上增加 16 以强制进行缩放, 
比如使用高斯柔化来平滑字幕。
可用模式有:
.PD 0
.RSs
.IPs 0
不缩放(最快, 很丑)
.IPs 1
近似缩放(好像坏了?)
.IPs 2
完全缩放(慢)
.IPs 3
二次线性缩放(默认值, 快速而且效果不坏)
.IPs 4
使用软件缩放的高斯柔化(看起来很好)
.RE
.PD 1
.
.TP
.B \-spualign <-1\-2>
指定 SPU (DVD/\:VOBsub) 字幕该如何对齐。
.PD 0
.RSs
.IPs "-1"
原始位置。
.IPs " 0"
顶部对齐 (原始行为, 默认)。
.IPs " 1"
中央对齐。
.IPs " 2"
底部对齐。
.RE
.PD 1
.
.TP
.B \-spugauss <0.0\-3.0>
高斯模糊的可变参数用于 \-spuaa 4。
越高表示越柔化 (默认是: 1.0)。
.
.TP
.B \-sub <字幕文件1,字幕文件2,...>
使用/\:显示指定的字幕文件。
同时只能显示一个文件。
.
.TP
.B \-sub-bg-alpha <0\-255>
指定字幕和 OSD 背景的 alpha 通道值。
值越大代表越透明。但 0 表示完全透明。
.
.TP
.B \-sub-bg-color <0\-255>
指定字幕和 OSD 背景的颜色值。
目前字幕是灰度图像所以这个值相当于颜色的亮度。
255 代表白色 0 代表黑色。
.
.TP
.B \-sub-demuxer <[+]名称> (仅用于 \-subfile) (BETA 代码)
锁定 \-subfile 的字幕分路器类型。
在名称前使用 "+" 锁定类型, 跳过某些核查!
按照 \-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 subreader.h 的分路器标识。
.
.TP
.B \-sub-fuzziness <模式>
搜寻字幕时调整匹配模糊度:
.PD 0
.RSs
.IPs 0
精确匹配
.IPs 1
装载所有包含电影名称的字幕。
.IPs 2
装载当前目录的所有字幕。
.RE
.PD 1
.
.TP
.B \-sub-no-text-pp
停用载入字幕后的任何形式的文字后期处理。
用于调试目的。
.
.TP
.B \-subalign <0\-2>
根据 \-subpos 给定的高度, 指定该对齐哪个字幕边缘。
.PD 0
.RSs
.IPs 0
顶部对齐 (原始行为)。
.IPs 1
中央对齐。
.IPs 2
底部对齐 (默认)。
.RE
.PD 1
.
.TP
.B "\-subcc \ "
显示 DVD 的隐藏式(CC)字幕。
它们
.B 不
是 VOB 字幕, 它们是为听力有障碍的人准备的特殊的 ASCII 字幕,
编码在大多数 DVD 地区码为 1 的 VOB 用户数据流中。
CC 字幕到目前为止还没有在其它地区码的 DVD 中发现。
.
.TP
.B \-subcp <编码页> (仅用于 iconv)
如果你的系统支持 iconv(3), 你可以用此选项来指定字幕的编码页。
.sp 1
.I 示例:
.PD 0
.RSs
\-subcp latin2
.br
\-subcp cp1250
.RE
.PD 1
.
.TP
.B \-subcp enca:<语言>:<备用编码页> (仅用于 ENCA)
你可以使用两字符语言代号指定语言, 让 ENCA 自动检测编码页。
如果不能确定, 随便输入点什么然后察看 mplayer 的 \-v output 中可用的语言。
备用编码页指定自动检测失败时使用的编码页。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-subcp enca:cs:latin2"
猜测编码页, 假定字幕是捷克语, 如果自动检测失败 latin 2 作备用。
.IPs "\-subcp enca:pl:cp1250"
猜测波兰语的编码页, cp1250 作备用。
.RE
.PD 1
.
.TP
.B \-subdelay <数>
字幕延迟 <数> 秒。可以是负数。
.
.TP
.B \-subfile <文件名> (BETA 代码)
目前没有用。
与 \-audiofile 一样, 但用于字幕流(OggDS?)。
.
.TP
.B \-subfont-autoscale <0\-3> (仅用于 FreeType)
设置自动缩放模式。
.br
.I 注意:
0 表示文字和 OSD 的尺度为字体高度(以点 point 为单位的)。
.sp 1
可用模式有:
.sp 1
.PD 0
.RSs
.IPs 0
不自动缩放
.IPs 1
高度成比例
.IPs 2
宽度成比例
.IPs 3
对角线成比例 (默认值)
.RE
.PD 1
.
.TP
.B \-subfont-blur <0\-8> (仅用于 FreeType)
设置字体柔化半径(默认是: 2)。
.
.TP
.B \-subfont-encoding <参数值> (仅用于 FreeType)
设置字幕编码。
当设为 "unicode" 时, 字体文件中的所有字模都会被渲染
并使用 unicode 编码(默认是: unicode)。
.
.TP
.B \-subfont-osd-scale <0\-100> (仅用于 FreeType)
设置 OSD 元素的自动缩放系数(默认是: 6)。
.
.TP
.B \-subfont-outline <0\-8> (仅用于 FreeType)
设置字体边框的宽度(默认是: 2)。
.
.TP
.B \-subfont-text-scale <0\-100> (仅用于 FreeType)
设置字幕文本的自动缩放系数(屏幕尺寸的百分比) (默认是: 5)。
.
.TP
.B \-subfps <速率>
指定字幕文件的帧率(默认是: 电影的帧率)。
.br
.I 注意:
仅用于基于帧的字幕文件, 即 MicroDVD 格式。
.
.TP
.B \-subpos <0\-100> (用于 \-vf expand)
指定字幕在屏幕上显示的位置。
参数值是以屏幕高度的百分比为单位的字幕垂直位置。
.
.TP
.B \-subwidth <10\-100>
指定字幕在屏幕上显示的最大宽度。
对于电视输出(TV-out)有用。
参数值是以屏幕宽度的百分比为单位的字幕宽度。
.
.TP
.B \-noterm-osd
当没有可用的视频输出时, 停止在控制台上显示 OSD 信息。
.
.TP
.B \-term-osd-esc <转义序列>
指定, 在控制台上显示 OSD 信息之前, 使用的转义序列。
转义序列应该把指针移到 OSD 的行首然后清理(默认是: ^[[A\\r^[[K)。
.
.TP
.B \-unicode
告诉 MPlayer 把字幕文件作为 unicode 来处理。
.
.TP
.B "\-utf8 \ \ "
告诉 MPlayer 把字幕文件作为 UTF-8 来处理。
.
.TP
.B \-vobsub <无后缀名的 VOBsub 文件名>
指定用于字幕显示的 VOBsub 文件。
不得不是无后缀名的完整路径名, 即没有 ".idx", ".ifo" 及 ".sub"。
.
.TP
.B \-vobsubid <0\-31>
指定 VOBsub 字幕标识。
.
.
.
.SH "音频输出选项（仅适用于MPLAYER）"
.
.TP
.B \-abs <参数值> (仅用于 \-ao oss) (废弃)
重载音频驱动/\:声卡的缓冲区大小检测。
.
.TP
.B \-format <格式> (也请参见音频过滤器一节中的格式)
选择样本格式用于从音频过滤器层输出到声卡。
下面音频过滤器一节中的格式描述列出了可采用的<格式>值。
.
.TP
.B \-mixer <设备>
使用不是默认的 /dev/\:mixer 混音设备。
对于 ALSA 来说是混音名称。
.
.TP
.B \-mixer-channel <混音线>[,混音索引] (仅用于 \-ao oss 和 \-ao alsa)
此选项告诉 MPlayer 使用不同的通道控制音量而不是默认的 PCM。
用于 OSS 的选项包括
.B vol, pcm, line。
有关选项的完全列表请查找 /usr/\:include/\:linux/\:soundcard.h 中的 
SOUND_DEVICE_NAMES。
对于 ALSA (如 alsamixer displays), 你可以使用的名称, 如 
.B Master, Line, PCM。
.br
.I 注意:
ALSA 混音通道名称后面跟的数字必须用 <名称,数字> 格式指定, 
即 alsamixer 中通道标为 "PCM 1" 的必须转换为
.BR PCM,1 。
.
.TP
.B \-softvol
锁定使用软件混音, 而不用声卡混音。
.
.TP
.B \-softvol-max <10.0\-10000.0>
设置最大扩音级别(以百分比为单位) (默认是: 110)。
值 200 允许你调整的音量最高达到目前级别的两倍。
对于值低于 100 的, 初始音量(为 100%) 会高于最大值,  OSD 不能正确显示。
.
.TP
.B \-volstep <0\-100>
设置混音音量调整的步进单位为整个范围的百分比 (默认是: 3)。
.
.
.
.SH "音频输出驱动（仅适用于MPLAYER）"
音频输出驱动是各种音频输出设备的接口。
语法是:
.
.TP
.B \-ao <驱动1[:子选项1[=参数值]:...],驱动2,...[,]>
指定使用音频输出驱动的优先级列表。
.PP
如果列表尾有 "," MPlayer 使用没有列出的驱动作为后备。
子选项是可选的, 大多数省略。
.br
.I 注意:
已编译进的音频输出驱动参见于 \-ao help 的列表。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-ao alsa,oss,"
尝试使用 ALSA 驱动, 然后是 OSS 驱动, 再后是其他的。
.IPs "\-ao alsa:noblock:device=hw=0.3"
设置 noblock-模式和 device-名称为第一个卡, 第四个设备。
.RE
.PD 1
.sp 1
可用的音频输出驱动有:
.
.TP
.B "alsa\ \ \ "
ALSA 0.9/1.x 音频输出驱动
.PD 0
.RSs
.IPs noblock
设置 noblock-模式。
.IPs device=<设备>
设置设备名称。
在 ALSA 设备名称中替换 "," 为 ".", ":" 为 "="。
对于通过 S/PDIF 输出的 hwac3, 使用 "iec958" 或 "spdif" 设备, 
除非你真的知道如何正确设置。
.RE
.PD 1
.
.TP
.B "alsa5\ \ "
ALSA 0.5 音频输出驱动
.
.TP
.B "oss\ \ \ \ "
OSS 音频输出驱动
.PD 0
.RSs
.IPs <dsp-device>
设置音频输出设备 (默认是: /dev/\:dsp)。
.IPs <mixer-device>
设置音频混音设备 (默认是: /dev/\:mixer)。
.IPs <mixer-channel>
设置音频混音通道 (默认是: pcm)。
.RE
.PD 1
.
.TP
.B sdl (仅用于 SDL)
高级平台独立的 SDL(简单 Directmedia 层) 库音频输出驱动
.PD 0
.RSs
.IPs <driver>
显式选择 SDL 音频输出 (默认是: 让 SDL 选)。
.RE
.PD 1
.
.TP
.B "arts\ \ \ "
音频输出通过 aRts daemon
.
.TP
.B "esd\ \ \ \ "
音频输出通过 ESD daemon
.PD 0
.RSs
.IPs <server>
显式选择 ESD 服务器 (默认是: localhost)。
.RE
.PD 1
.
.TP
.B "jack\ \ \ \ "
音频输出通过 JACK(Jack 音频连接工具)
.PD 0
.RSs
.IPs port=<名>
连接给定端口名 (默认是: 物理端口)。
.IPs name=<客户端名>
传递客户端名给 JACK (默认是: MPlayer [<PID>])。
如果你想自动建立某些连接时有用。
.IPs (no)estimate
估计音频延迟, 假定让视频回放更流畅 (默认是: 启用)。
.RE
.PD 1
.
.TP
.B "nas\ \ \ \ "
音频输出通过 NAS
.
.TP
.B macosx (仅用于 Mac OS X)
原生 Mac OS X 音频输出驱动
.
.TP
.B openal
试验性的, 未完成的 (会低端混音成单声道) OpenAL 音频输出驱动
.
.TP
.B sgi (仅用于 SGI)
原生 SGI 音频输出驱动
.PD 0
.RSs
.IPs "<输出设备名>"
显式选择音频输出设备/\:接口 (默认是: system-wide default)。
例如: "Analog Out" 或 "Digital Out"。
.RE
.PD 1
.
.TP
.B sun (仅用于 Sun)
原生 Sun 音频输出驱动
.PD 0
.RSs
.IPs <device>
显式选择音频设备 (默认是: /dev/\:audio)。
.RE
.PD 1
.
.TP
.B win32 (仅用于 Windows)
原生 Windows waveout 音频输出驱动
.
.TP
.B dsound (仅用于 Windows)
DirectX DirectSound 音频输出驱动
.PD 0
.RSs
.IPs device=<devicenum>
设置设备号。
用 \-v 播放文件能显示可用设备列表。
.RE
.PD 1
.
.TP
.B dxr2 (也请参见 \-dxr2) (仅用于 DXR2)
Creative DXR2 专用的输出驱动
.
.TP
.B ivtv (仅用于 IVTV)
IVTV 专用的 MPEG 音频输出驱动。
只能与 \-ac hwmpa 一起用。
.
.TP
.B mpegpes (仅用于 DVB)
DVB 卡音频输出驱动输出到 MPEG-PES 文件如果没安装 DVB 卡。
.PD 0
.RSs
.IPs card=<1\-4>
指定 DVB 卡如果有多于一个卡。
.IPs file=<文件名>
输出文件名
.RE
.PD 1
.
.TP
.B "null\ \ \ "
不产生音频输出但维持视频回放速度。
基准测试用 \-nosound。
.
.TP
.B "pcm\ \ \ \ "
原始 PCM/wave 文件记录器的音频输出
.PD 0
.RSs
.IPs (no)waveheader
包括或不包括声波头 (默认是: 包括)。
如果不包括, 会产生原始的 PCM。
.IPs file=<文件名>
写声音到 <文件名> 而不是默认的 audiodump.wav。
如果没指定声波头, 默认是 audiodump.pcm。
.IPs "fast\ "
尝试比实时更快地转储。
确保输出不被截掉 (通常有 "缓冲中视频包太多" 消息)。
你得到消息 "你的系统太“慢”了, 播放不了!" 是正常的。
.RE
.PD 1
.
.TP
.B "plugin\ \ "
音频输出驱动插件
.
.
.
.SH "视频输出选项（仅适用于MPLAYER）"
.
.TP
.B \-adapter <参数值>
设置显卡接受图像。
用此选项带 \-v 能得到可用卡的列表。
目前只能与 directx 视频输出驱动一起工作。
.
.TP
.B \-bpp <深度>
重载自动检测的色彩深度。
只被 fbdev, dga, svga, vesa 视频输出驱动支持。
.
.TP
.B \-border
使用窗口边框和装饰来播放电影。
既然默认是启用, 使用 \-noborder 停用标准的窗口装饰。
被 directx 视频输出驱动支持。
.
.TP
.B \-brightness <-100\-100>
调整视频信号的亮度 (默认是: 0)。
不被所有的视频输出驱动支持。
.
.TP
.B \-contrast <-100\-100>
调整视频信号的对比度 (默认是: 0)。
不被所有的视频输出驱动支持。
.
.TP
.B \-display <名> (仅用于 X11)
指定你希望使用 X server 的主机名和显示号。
.sp 1
.I 示例:
.PD 0
.RSs
\-display xtest.localdomain:0
.RE
.PD 1
.
.TP
.B "\-dr \ \ \ "
打开直接渲染功能(还不被所有的编解码器视频输出支持)
.br
.I 警告:
可能导致 OSD/字幕 损坏!
.
.TP
.B \-dxr2 <选项1:选项2:...>
此选项用来控制 dxr2 视频输出驱动。
.RSs
.IPs ar-mode=<参数值>
宽高比模式 (0 = 普通, 1 = pan-and-scan, 2 = letterbox (默认))
.IPs iec958-encoded
设置 iec958 输出模式为 encoded。
.IPs iec958-decoded
设置 iec958 输出模式为 decoded (默认)。
.IPs macrovision=<参数值>
macrovision 模式 (0 = off (默认), 1 = agc, 2 = agc 2 colorstripe,
3 = agc 4 colorstripe)
.IPs "mute\ "
静音输出
.IPs unmute
非静音输出
.IPs ucode=<参数值>
microcode 的路径
.RE
.RS
.sp 1
.I TV output
.RE
.RSs
.IPs 75ire
启用 7.5 IRE 输出模式
.IPs no75ire
停用 7.5 IRE 输出模式 (默认)
.IPs "bw\ \ \ "
黑白电视输出
.IPs color
彩色电视输出 (默认)
.IPs interlaced
交错电视输出 (默认)
.IPs nointerlaced
停用交错电视输出
.IPs norm=<参数值>
TV 制式 (ntsc (默认), pal, pal60, palm, paln, palnc)
.IPs square-pixel
设置像素模式为 square
.IPs ccir601-pixel
设置像素模式为 ccir601
.RE
.RS
.sp 1
.I overlay
.RE
.RSs
.IPs cr-left=<0\-500>
设置左裁减值 (默认是: 50)。
.IPs cr-right=<0\-500>
设置右裁减值 (默认是: 300)。
.IPs cr-top=<0\-500>
设置上裁减值 (默认是: 0)。
.IPs cr-bottom=<0\-500>
设置下裁减值 (默认是: 0)。
.IPs ck-[r|g|b]=<0\-255>
设置叠加 color-key 的红(r), 绿(g)和蓝(b)增益。
.IPs ck-[r|g|b]min=<0\-255>
各自 color key 的最小值
.IPs ck-[r|g|b]max=<0\-255>
各自 color key 最大值
.IPs ignore-cache
忽略缓存的叠加设置。
.IPs update-cache
更新缓存的叠加设置。
.IPs ol-osd
启用叠加屏上显示(OSD)。
.IPs nool-osd
停用屏上显示(OSD) (默认)。
.IPs ol[h|w|x|y]-cor=<-20\-20>
调整叠加尺寸(h,w) 和位置(x,y), 万一跟窗口匹配不够完美 (默认是: 0)。
.IPs overlay
激活叠加 (默认)。
.IPs nooverlay
激活电视输出。
.IPs overlay-ratio=<1\-2500>
调整叠加 (默认是: 1000)。
.RE
.
.TP
.B \-fbmode <模式名> (仅用于 \-vo fbdev)
改变视频模式为 /etc/\:fb.modes 中标记为 <模式名> 的模式。
.
.br
.I 注意:
VESA 帧缓冲不支持改变模式。
.
.TP
.B \-fbmodeconfig <文件名> (仅用于 \-vo fbdev)
重载帧缓冲模式的配置文件 (默认是: /etc/\:fb.modes)。
.
.TP
.B \-fs (也请参见 \-zoom)
全屏幕回放 (电影居中, 四周填充黑色条边)。
还不被所有的视频输出驱动支持。
.
.TP
.B \-fsmode-dontuse <0\-31> (废弃, 使用 \-fs 选项)
如果你仍然有全屏问题试试此选项。
.
.TP
.B \-fstype <类型1,类型2,...> (仅用于 X11)
指定使用全屏模式的优先级列表。
你可以用前缀 "\-" 取消模式。
如果你遇到像全屏窗口被其他窗口遮住问题, 试试不同的顺序。
.br
.I 注意:
参见 \-fstype help 列出的全部可用模式的列表。
.sp 1
可用的类型有:
.sp 1
.PD 0
.RSs
.IPs above
如果可用的话, 使用 _NETWM_STATE_ABOVE 提示。
.IPs below
如果可用的话, 使用 _NETWM_STATE_BELOW 提示。
.IPs fullscreen
如果可用的话, 使用 _NETWM_STATE_FULLSCREEN 提示。
.IPs layer
与默认层一起使用 _WIN_LAYER 提示。
.IPs layer=<0...15>
与给定的层号一起使用 _WIN_LAYER 提示。
.IPs netwm
锁定 NETWM 风格。
.IPs "none\ "
不设置全屏窗口层。
.IPs stays_on_top
如果可用的话, 使用 _NETWM_STATE_STAYS_ON_TOP 提示。
.REss
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs layer,stays_on_top,above,fullscreen
如果指定了不正确的或不支持的模式, 默认的顺序作为备用而使用。
.IPs \-fullscreen
修复 OpenBox 1.x 的全屏开关。
.RE
.PD 1
.
.TP
.B \-geometry x[%][:y[%]] or [WxH][+x+y]
调整屏幕输出的初始位置。
x 和 y 代表从屏幕左上角到显示图像左上角的距离(以像素为单位)。
不过如果在参数值后有百分号记号, 参数值就变为该方向上的屏幕尺寸的百分数。
它也支持标准 X11 的 \-geometry 选项格式。
如果使用 \-wid 选项指定了外部窗口, 
那么 x 和 y 坐标是相对于窗口而不是屏幕的左上角。
.br
.I 注意:
此选项仅被 x11, xmga, xv, xvmc, xvidix, 
gl, gl2, directx 和 tdfxfb 视频输出驱动支持。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs 50:40
把窗口放在 x=50, y=40 处。
.IPs 50%:50%
把窗口放在屏幕中央。
.IPs "100%\ "
把窗口放在屏幕右边中央。
.IPs 100%:100%
把窗口放在屏幕右下角。
.RE
.PD 1
.
.TP
.B \-guiwid <窗口标识> (也请参见 \-wid) (仅用于 GUI)
告诉 GUI 也使用 X11 窗口并把自己钉在视频窗口的下方, 
这对于将一个 mini-GUI 嵌入到浏览器时(比如 MPlayer 插件)有用。
.
.TP
.B \-hue <-100\-100>
调视频信号的色调 (默认是: 0)。
你可以通过此选项得到负片效果的图像。
还不被所有视频输出驱动支持。
.
.TP
.B \-monitor-dotclock <范围[,范围,...]> (仅用于 \-vo fbdev 和 vesa)
指定监视器的 dotclock 或 pixelclock 范围。
.
.TP
.B \-monitor-hfreq <范围[,范围,...]> (仅用于 \-vo fbdev 和 vesa)
指定监视器的水平频率范围。
.
.TP
.B \-monitor-vfreq <范围[,范围,...]> (仅用于 \-vo fbdev 和 vesa)
指定监视器的垂直频率范围。
.
.TP
.B \-monitoraspect <宽高比> (也请参见 \-aspect)
设置监视器或电视屏幕的宽高比。
值 0 将禁用先前的屏幕宽高比设置（例如在配置文件中的设置）。如果激活了，此选项
将屏蔽\-monitorpixelaspect中的设置。
.sp 1
.I 示例:
.PD 0
.RSs
\-monitoraspect 4:3 或者 1.3333
.br
\-monitoraspect 16:9 或者 1.7777
.RE
.PD 1
.
.TP
.B \-monitorpixelaspect <宽高比> (也请参见 \-aspect)
设置监视器或电视屏幕的单像素宽高比 (默认是停用的)。
值 1 表示正方形像素((几乎?)对所有的 LCD 是正确的)。
.
.TP
.B \-nodouble
停用双缓冲, 多数用于调试目的。
双缓冲通过在内存里储存两帧来解决闪烁问题, 在显示一帧的同时解码另一帧。
会负面影响 OSD, 但常常能去除 OSD 闪烁。
.
.TP
.B \-nograbpointer
视频模式改变(\-vm)后, 不截获鼠标焦点。
对多输出头设置有用。
.
.TP
.B \-nokeepaspect
缩放窗口时不保持窗口的宽高比。
只能与 x11, xv, xmga, xvidix, directx 视频输出驱动一起工作。
而且在 X11 下你的窗口管理器必须尊重窗口宽高比的提示。
.
.TP
.B "\-ontop\ "
使得此播放器窗口位于其他窗口之上。
视频输出驱动使用 X11 的, 除了 SDL, 还有使用 directx, macosx, quartz, 
ggi 和 gl2 的都支持此功能。
.
.TP
.B \-panscan <0.0\-1.0>
启用 pan-and-scan 功能 (裁减如 16:9 电影的边适应 4:3 显示不带黑边)。
范围参数值用来控制裁减多少图像。
只能与 xv, xmga, mga, gl, gl2, quartz, macosx 和 xvidix 的
视频输出驱动一起工作。
.
.TP
.B \-panscanrange <-19.0\-99.0> (试验)
改变 pan-and-scan 功能的范围参数值 (默认是: 1)。
正值表示倍扩默认范围。
负值表示你可以放大到因子 \-panscanrange+1 所允许的范围。
例如 \-panscanrange -3 允许缩放因子达到 4。
此特性属实验性, 不要报告相关错误除非你在用 using \-vo gl。
.
.TP
.B \-refreshrate <Hz>
设置监视器的刷新率(以 Hz 为单位)。
目前仅被 \-vo directx 与 \-vm 的组合支持。
.
.TP
.B \-rootwin
在根窗口(桌面背景)中播放电影。
虽然桌面背景图像可能盖住电影窗口。
只能与 x11, xv, xmga, xvidix, quartz, macosx 和 directx 的
视频输出驱动一起工作。
.
.TP
.B \-saturation <-100\-100>
调整视频信号的饱和度(默认值: 0)。
你可以通过此选项获得灰度输出。
还不被所有的视频输出驱动支持。
.
.TP
.B \-screenh <像素>
指定垂直分辨率, 如果视频输出驱动不知道屏幕分辨率, 如 fbdev, x11 和 TVout。
.
.TP
.B \-screenw <pixels>
指定水平分辨率, 如果视频输出驱动不知道屏幕分辨率, 如 fbdev, x11 和 TVout。
.
.TP
.B \-stop-xscreensaver (仅用于 X11)
启动时关闭 xscreensaver, 退出时再打开它。
.
.TP
.B "\-vm \ \ \ "
尝试改变不同的视频模式。
视频输出驱动支持的有 dga, x11, xv, sdl 和 directx。
如果用于 directx 视频输出驱动 \-screenw, \-screenh, \-bpp 和 
\-refreshrate 选项可用来设置新的显示模式。
.
.TP
.B "\-vsync \ \ "
启用 VBI 用于 vesa, dfbmga 和 svga 视频输出驱动。
.
.TP
.B \-wid <窗口标识> (也请参见 \-guiwid) (仅用于 X11, OpenGL 和 DirectX)
告诉 MPlayer 附着于一个已有的窗口。
把 MPlayer 嵌入浏览器(比如 plugger 扩展)时有用。
.
.TP
.B \-xineramascreen <\-2\-...> (仅用于 X11)
在 Xinerama 配置中(就是一个单一桌面展开在多个显示器上), 
此选项告诉 MPlayer 把电影显示在哪个屏幕上。
值 \-2 表示全屏幕展开到整个虚拟的显示屏幕上（在这种情况下将完全忽略Xinerama的信
息），\-1 表示在目前窗口所在的显示屏上全屏幕。
通过 \-geometry 选项设置的初始位置是相对于指定屏幕的。
通常只能与 "\-fstype \-fullscreen" 或 "\-fstype none" 一起工作。
.
.TP
.B \-zrbw (仅用于 \-vo zr)
黑白显示。
用于优化性能, 此选项可以与 "\-lavdopts gray" 组合使用。
.
.TP
.B \-zrcrop <[宽]x[高]+[x 偏移]+[y 偏移]> (仅用于 \-vo zr)
选择显示输入图像的一部分, 使用多个这样的选项就启动了 cinerama 模式。
在 cinerama 模式下电影分布在多个电视(或投影仪)上, 用于创建一个较大的图像。
在第 n 个 \-zrcrop 后面的选项应用于第 n 个 MJPEG 解码卡, 
每一个编码卡至少需要有一个 \-zrcrop 选项加上一个 \-zrdev 选项。
请察看 \-zrhelp 的输出和文档 Zr 一节中的示例。
.
.TP
.B \-zrdev <设备> (仅用于 \-vo zr)
指定你的 MJPEG 编码卡使用的设备文件名, 默认情况下
此 zr 视频输出驱动使用它所能找到的第一个 v4l 设备。
.
.TP
.B \-zrfd (仅用于 \-vo zr)
强制简化取样: 简化取样由 \-zrhdec 和 \-zrvdec 指定,
一般只有在硬件缩放能把图像伸展到原始尺寸时才使用。
.
.TP
.B \-zrhdec <1|2|4> (仅用于 \-vo zr)
水平简化取样: 要求驱动只发送输入图像的每 2 或 4 行/\:像素到 MJPEG 编码卡, 
并使用 MJPEG 卡的缩放器把图像回复到原始尺寸。
.
.TP
.B \-zrhelp (仅用于 \-vo zr)
显示一个列表包括所有 \-zr* 的选项, 它们的默认值和使用 cinerama 模式的例子
.
.TP
.B \-zrnorm <制式> (仅用于 \-vo zr)
指定电视制式为 PAL 或 NTSC (默认是: 不改变)。
.
.TP
.B \-zrquality <1\-20> (仅用于 \-vo zr)
从数值 1(最好) 到 20(最差) 代表 JPEG 编码质量。
.
.TP
.B \-zrvdec <1|2|4> (仅用于 \-vo zr)
垂直简化取样: 要求驱动只发送输入图像的每 2 或 4 行/\:像素到 MJPEG 编码卡, 
并使用 MJPEG 卡的缩放器把图像回复到原始尺寸。
.
.TP
.B \-zrxdoff <x 显示偏移量> (仅用于 \-vo zr)
如果电影屏幕比电视的小, 此选项指定
相对于电视屏幕左上角的 x 偏移量 (默认是: 中央位置)。
.
.TP
.B \-zrydoff <y 显示偏移量> (仅用于 \-vo zr)
如果电影屏幕比电视的小, 此选项指定
相对于电视屏幕左上角的 y 偏移量 (默认是: 中央位置)。
.
.
.
.SH "视频输出驱动（仅适用于MPLAYER）"
视频输出驱动是各种视频输出设备的接口。
语法是:
.
.TP
.B \-vo <驱动1[:子选项1[=参数值]:...],驱动2,...[,]>
指定使用视频输出驱动的优先级列表。
.PP
如果列表尾有 "," MPlayer 使用没有列出的驱动作为后备。
子选项是可选的, 大多数省略。
.br
.I 注意:
已编译进的视频输出驱动参见于 \-vo help 的列表。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-vo xmga,xv,"
尝试使用 Matrox X11 驱动, 然后是 Xv 驱动, 再后是其他的。
.IPs "\-vo directx:noaccel"
使用加速特性关闭的 DirectX 驱动。
.RE
.PD 1
.sp 1
可用的视频输出驱动有:
.
.TP
.B xv (仅用于 X11)
使用 XFree86 4.x 的 XVideo 扩展来启用硬件加速回放。
如果你不能使用硬件指定的驱动, 这或许是最好的选项。
有关用了什么 colorkey 以及如何绘制的信息, 请运行 MPlayer
的 \-v 选项并注意开头有标签 [xv common] 的行。
.PD 0
.RSs
.IPs port=<数值>
选择指定的 XVideo 端口。
.IPs ck=<cur|use|set>
选择用了 colorkey 的源 (默认是: cur)。
.RSss
.IPs cur
默认采用 Xv 中目前设置的 colorkey。
.IPs use
使用但不从 MPlayer (用 \-colorkey 选项来修改)来设置 colorkey。
.IPs set
同 use 一样但设置已提供的 colorkey。
.RE
.IPs ck-method=<man|bg|auto>
设置 colorkey 绘制方法 (默认是: man)。
.RSss
.IPs man
手动绘制 colorkey (减少某些情况下的闪烁)。
.IPs bg
设置 colorkey 作为窗口背景。
.IPs auto
让 Xv 绘制 colorkey。
.RE
.RE
.PD 1
.
.TP
.B x11 (仅用于 X11)
每当 X11 出场时, 共享内存的视频输出驱动虽没有硬件加速也能工作。
.
.TP
.B xover (仅用于 X11)
添加 X11 支持所有基于视频输出驱动的重叠。
目前仅被 tdfx_vid 支持。
.PD 0
.RSs
.IPs <vo_驱动>
选择此驱动作为源使用重叠在 X11 上面。
.RE
.PD 1
.
.TP
.B xvmc (仅用于 X11 的 \-vc ffmpeg12mc)
视频输出驱动使用 XFree86 4.x 的 XvMC(X 视频运动补偿) 扩展
以加速 MPEG-1/2 和 VCR2 的解码。
.PD 0
.RSs
.IPs port=<数值>
选择指定的 XVideo 端口。
.IPs (no)benchmark
停用图像显示。
对于适当的驱动基准测试是必要的, 因为只会改变监视器 retrace 的图像缓冲 (nVidia)。
默认是不停用图像显示 (nobenchmark)。
.IPs (no)bobdeint
非常简单的去交错。
可能没有 \-vf tfields=1 好, 但是是 xvmc 仅有的去交错 (默认是: nobobdeint)。
.IPs (no)queue
显示帧排队, 以允许视频硬件更多的并行工作。
可能增加微小的 (不令人注意的) 常量去 A/V 同步(desync) (默认是: noqueue)。
.IPs (no)sleep
当等待完成渲染时, 使用睡眠功能(不推荐 Linux 使用) (默认是: nosleep)。
.IPs ck=cur|use|set
同 \-vo xv:ck 一样 (参见 \-vo xv)。
.IPs ck-method=man|bg|auto
同 \-vo xv:ck-method 一样 (参见 \-vo xv)。
.RE
.PD 1
.
.TP
.B dga (仅用于 X11)
通过 XFree86 Direct Graphics Access 扩展播放视频。
考虑废弃。
.
.TP
.B sdl (仅用于 SDL)
高级平台独立的 SDL(简单 Directmedia 层) 库视频输出驱动。
既然 SDL 使用自己的 X11 层, MPlayer X11 选项对 SDL 没有影响。
.PD 0
.RSs
.IPs driver=<驱动>
显式选择 SDL 驱动。
.IPs (no)forcexv
通过 sdl 视频输出驱动使用 XVideo (默认是: forcexv)。
.IPs (no)hwaccel
使用硬件加速的缩放 (默认是: hwaccel)。
.RE
.PD 1
.
.TP
.B "vidix\ \ "
VIDIX (VIDeo Interface for *niX) 是不同显卡的视频加速特性的接口。
非常快速的卡视频输出驱动支持它。
.PD 0
.RSs
.IPs <子设备>
明确表示选择使用哪个 VIDIX 子设备驱动。
可用的子设备有 cyberblade, mach64, mga_crtc2, mga, nvidia, pm2, pm3, radeon,
rage128, sis 和 unichrome。
.RE
.PD 1
.
.TP
.B xvidix (仅用于 X11 )
VIDIX 的 X11 前台
.PD 0
.RSs
.IPs <子设备>
同 vidix 一样
.RE
.PD 1
.
.TP
.B "cvidix\ "
通用的平台独立的 VIDIX 前台, 甚至能用 nVidia 卡运行在文本控制台。
.PD 0
.RSs
.IPs <子设备>
同 vidix 一样
.RE
.PD 1
.
.TP
.B winvidix (仅用于 Windows)
VIDIX 的 Windows 前台
.PD 0
.RSs
.IPs <子设备>
同 vidix 一样
.RE
.PD 1
.
.TP
.B directx (仅用于 Windows)
使用 DirectX 接口的视频输出驱动。
.PD 0
.RSs
.IPs noaccel
关闭硬件加速。
如果显示有问题, 尝试此选项。
.RE
.PD 1
.
.TP
.B quartz (仅用于 Mac OS X)
Mac OS X Quartz 视频输出驱动。
在某些情况下, 锁定打包 YUV 输出格式, 如: \-vf format=yuy2, 可能更有效。
.PD 0
.RSs
.IPs device_id=<数值>
选择全屏显示设备。
.IPs fs_res=<宽>:<高>
指定全屏分辨率 (对慢系统有用)。
.RE
.PD 1
.
.TP
.B macosx (Mac OS X 10.4 或 10.3.9 的 QuickTime 7)
Mac OS X CoreVideo 视频输出驱动
.PD 0
.RSs
.IPs device_id=<数值>
选择全屏显示设备。
.RE
.PD 1
.
.TP
.B fbdev (仅用于 Linux)
使用内核帧缓冲播放视频。
.PD 0
.RSs
.IPs <设备>
显式选择 fbdev 设备名 (如 /dev/\:fb0), 或者如果设备名以 "vidix" 开始
选择 VIDIX 子设备名 (如: sis 驱动的 "vidixsis_vid")。
.RE
.PD 1
.
.TP
.B fbdev2 (仅用于 Linux)
使用内核帧缓冲播放视频, 另一种实现。
.PD 0
.RSs
.IPs <设备>
显式选择 fbdev 设备名 (默认是: /dev/\:fb0)。
.RE
.PD 1
.
.TP
.B "vesa\ \ \ "
非常通用的视频输出驱动, 应该能用于任何的 VESA VBE 2.0 兼容卡。
.PD 0
.RSs
.IPs (no)dga
打开或关闭DGA模式（默认为：打开）。
.IPs neotv_pal
激活 NeoMagic 电视输出并设置成 PAL 制式。
.IPs neotv_ntsc
激活 NeoMagic 电视输出并设置成 NTSC 制式。
.IPs vidix
使用 VIDIX 驱动
.IPs "lvo:\ \ \ "
激活 Linux 视频重叠在 VESA 模式上面。
.RE
.PD 1
.
.TP
.B "svga\ \ \ "
使用 SVGA 库播放视频。
.PD 0
.RSs
.IPs "<视频模式>"
指定使用的视频模式。
此模式以 <宽>x<高>x<颜色> 格式给出, 如 640x480x16M 或图形模式数字, 如 84。
.IPs bbosd
绘制 OSD 到(较慢)影片下方的黑条。
.IPs native
只使用原生的绘制功能。
避免直接渲染, OSD 和硬件加速。
.IPs retrace
强制帧打开垂直 retrace。
只与 \-double 合用有用。
同 \-vsync 选项的效果一样。
.IPs "sq\ \ \ "
尝试选择方像素视频模式。
.IPs vidix
使用 VIDIX 的 svga。
.RE
.PD 1
.
.TP
.B "gl\ \ \ \ \ "
OpenGL 视频输出驱动, 简版。
视频尺寸一定小于 OpenGL 实现的最大纹理尺寸。
瞄准能与甚至最基本的 OpenGL 实现一起工作, 
但也利用较新的扩展, 允许支持更多的色彩空间和直接渲染。
既然能对高清晰度提供
.B 大
的提速, 请使用 \-dr 如果你的 OpenGL 实现能一同工作。
此代码执行极少的检测, 所以如果某个特性不工作, 
可能是因为你的卡或 OpenGL 实现不支持, 尽管连任何错误消息都没给你。
使用 glxinfo 或类似的工具以显示支持的 OpenGL 扩展。
.PD 0
.RSs
.IPs (no)scaled-osd
当窗口大小改变时, 改变 OSD 的行为方式 (默认是: 停用)。
启用时, 行为就像其他的视频输出驱动, 对固定大小的字体更好。
停用时似乎对 FreeType 更有利并使用全屏模式的边框。
无法在使用 ass 字幕的情况下正确地工作（参见 \-ass）。作为替代性方法，你可以通过
\-vf ass在不用OpenGL的情况下渲染这种字幕。
.IPs osdcolor=<0xRRGGBB>
OSD 颜色 (默认是: 0xffffff, 对应白色)。
.IPs rectangle=<0,1,2>
选择矩形纹理保存视频内存的方法, 但常常会更慢 (默认是: 0)。
.RSss
0: 使用 power-of-two 纹理 (默认)。
.br
1: 使用 GL_ARB_texture_rectangle 扩展。
.br
2: 使用 GL_ARB_texture_non_power_of_two 扩展。
在某些情况下仅软件支持所以非常慢。
.RE
.IPs swapinterval=<n>
两缓冲交换的最小间隔, 对已显示的帧计时 (默认是: 1)。
1 等价于启用 VSYNC, 0 等价于停用 VSYNC。
系统对小于 0 的值忽略保持自己的默认值。
此限制帧率到 (水平刷新率 / n)。
需要 GLX_SGI_swap_control 的支持。
某些(大多数/所有?)实现仅工作于全屏模式。
.IPs yuv=<n>
选择 YUV 到 RGB 转换的类型。
.RSss
0: 使用软件转换 (默认)。
兼容于所有的 OpenGL 版本。
提供亮度, 对比度和饱和度控制。
.br
1: 使用寄存器组合。
这里使用 nVidia 专用的扩展 (GL_NV_register_combiners)。
至少需要三个纹理单位。提供饱和度和色调的控制。
此方法快速但不精确。
.br
2: 使用片断程序。
需要 GL_ARB_fragment_program 扩展和至少三个纹理单位。
提供亮度, 对比度, 饱和度和色调控制。
.br
3: 使用片断程序, 用到 POW 指令。
需要 GL_ARB_fragment_program 扩展和至少三个纹理单位。
提供亮度, 对比度, 饱和度, 色调和 gamma 控制。
对红, 绿和蓝色, Gamma 也能被独立设置。
方法 4 通常更快。
.br
4: 使用片断程序及附加的查询。
需要 GL_ARB_fragment_program 扩展和至少四个纹理单位。
提供亮度, 对比度, 饱和度, 色调和 gamma 控制。
对红, 绿和蓝色, Gamma 也能被独立设置。
.br
5: 使用 ATI-specific method (供较旧的卡)。
这里使用 ATI 专用的扩展 (GL_ATI_fragment_shader - 不是 
GL_ARB_fragment_shader!)。至少需要三个纹理单位。提供饱和度和色调的控制。
此方法快速但不精确。
.br
6: 使用 3D 纹理通过查询做转换。
需要 GL_ARB_fragment_program 扩展和至少四个纹理单位。
既然使用一个纹理和边框像素, 在某些(所有?) ATI 卡上 (软件模拟) 极其慢。
提供亮度, 对比度, 饱和度, 色调和 gamma 控制。
对红, 绿和蓝色, Gamma 也能被独立设置。
速度比其他方法更多地依赖于 GPU 内存带宽。
.RE
.IPs lscale=<n>
选择缩放功能供调节发光性。
仅对 yuv 模式 2, 3, 4 和 6 有效。
.RSss
0: 使用简单线性过滤 (默认)。
.br
1：使用双立体过滤 (较好的质量)。
需要一个额外的纹理单位。
至少在全屏模式, 较旧的卡不能处理色度。
.br
2：在水平方向使用立方体过滤，在垂直方向使用线性过滤。比起方式1适用于稍多的显卡。
.RE
.IPs cscale=<n>
选择缩放功能供调节色度.
详情参见 lscale。
.IPs customprog=<文件名>
从 <文件名> 装载定制的片断程序。
示例参见 TOOLS/edgedect.fp。
.IPs customtex=<文件名>
从 <文件名> 装载定制的 "gamma ramp" 纹理。
能用于与 yuv=4 或 customprog 选项的组合。
.IPs (no)customtlin
如果启用(默认), 使用 GL_LINEAR 插值, 否则使用 GL_NEAREST 用于 customtex 纹理。
.IPs (no)customtrect
如果启用, 使用 texture_rectangle 用于 customtex 纹理。默认是停用。
.RE
.sp 1
.RS
正常情况下没有理由使用以下选项，它们大多是为了测试而存在的。
.RE
.sp 1
.RSs
.IPs (no)glfinish
在交换缓存前调用glFinish()。
较慢但在某些情况下输出更精确（默认：禁用）。
.IPs (no)manyfmts
允许支持更多的色彩格式（RGB和BGR）（默认：允许）。
要求OpenGL版本>=1.2。
.IPs slice-height=<0\-...>
所复制的单片纹理中包含多少行内容（默认值：4）。
0代表整幅图像。
.br
.I 注意：
如果使用了YUV色彩空间（参见yuv子选项），将使用特别的规则：
.RSss
如果解码器采用分片渲染方式（参见\-noslices），该设置没有任何效果，所采用的分片大
小由解码器提供。
.br
如果解码器不采用分片泻染方式，则默认值为16。
.RE
.IPs (no)osd
允许或禁止通过OpenGL支持OSD渲染（默认：允许）。
此选项用于测试；而禁用OSD应使用\-osdlevel 0。
.IPs (no)aspect
允许或禁止支持保持比例缩放和全景缩放方式（默认：允许）。
禁用的话可能提高速度。
.REss
.RE
.PD 1
.
.TP
.B "gl2\ \ \ \ "
OpenGL 视频输出驱动, 第二代。
支持 OSD 和大于最大纹理尺寸的视频。
.PD 0
.RSs
.IPs (no)glfinish
同 gl 一样 (默认是: 启用)
.IPs yuv=<n>
选择 YUV 到 RGB 转换的类型。
如果设置不同于 0 的其它值 OSD 被停用, 而亮度, 对比度和 
gamma 的设置只能是通过全局的 X 服务器的设置才有效。
其它的值的意思同 \-vo gl 一样。
.REss
.
.TP
.B "null\ \ \ "
不产生视频输出。
对基准测试有用。
.
.TP
.B "aa\ \ \ \ \ "
ASCII art 视频输出驱动工作于文字控制台。
执行 
.I mplayer \-vo aa:help
, 你能得到可用子选项的列表和解释。
.
.TP
.B "caca\ \ \ "
彩色 ASCII art 视频输出驱动工作于文字控制台。
.
.TP
.B "bl\ \ \ \ \ "
使用 Blinkenlights UDP 协议回放视频。
此驱动高度特定于硬件。
.PD 0
.RSs
.IPs <子设备>
显式选择 Blinkenlights 子设备。
这多少有点像 arcade:host=localhost:2323 或 hdl:file=文件名1,file=文件名2。
你必须指定一个子设备。
.RE
.PD 1
.
.TP
.B "ggi\ \ \ \ "
GGI 图形系统视频输出驱动
.PD 0
.RSs
.IPs <驱动>
显式选择 GGI 驱动。
替换任何的 "," 为 "."。
.RE
.PD 1
.
.TP
.B directfb
使用 DirectFB 库播放视频 。
.PD 0
.RSs
.IPs (no)input
使用 DirectFB 替代 MPlayer 键盘码 (默认是: 启用)。
.IPs buffermode=single|double|triple
如果想避免撕裂问题, 双倍和三倍缓冲是最好的结果。
三倍缓冲比双倍缓冲更有效, 因为它等待垂直 retrace 时不限制 MPlayer。
单一缓冲应避免 (默认是: 单一)。
.IPs fieldparity=top|bottom
为交错帧控制输出次序 (默认是: 停用)。
有效值 top = 先顶域, bottom = 先底域。
此选项对逐行(像大多数 MPEG)影片不影响。
如果观看交错影片时遇到撕裂问题或动作不顺畅, 需启用此选项。
.IPs layer=N
锁定回放的层标识 N (默认是: -1 - 自动)。
.IPs dfbopts=<list>
指定 DirectFB 参数列表。
.RE
.PD 1
.
.TP
.B "dfbmga\ "
Matrox G400/\:G450/\:G550 专用的视频输出驱动
使用 DirectFB 库以利用特别的硬件特性。
启用 CRTC2 (第二头), 独立于第一头显示视频。
.PD 0
.RSs
.IPs (no)input
同 directfb 一样 (默认是: 停用)
.IPs buffermode=single|double|triple
同 directfb  一样(默认是: triple)
.IPs fieldparity=top|bottom
同 directfb 一样
.IPs (no)bes
启用 Matrox BES(后台缩放) (默认是: 停用)。
因为图像插值过程在硬件里完成, 结果是非常好的速度和输出质量。但仅工作于主头。
.IPs (no)spic
利用 Matrox 子图像层显示 OSD (默认是: 启用)。
.IPs (no)crtc2
用第二头打开电视输出 (默认是: 启用)。
输出质量出奇的好, 因为这是交错图像对每个奇/\:偶域有恰当的同步。
.IPs tvnorm=pal|ntsc|auto
设置 Matrox 卡的电视制式不需要改变 /etc/\:directfbrc (默认是: 停用)。
有效的制式是 pal = PAL, ntsc = NTSC。
特别的制式是 auto (auto-仅仅使用 PAL/\:NTSC), 
因为是通过察看影片的帧率决定使用什么制式。
.RE
.PD 1
.
.TP
.B mga (仅用于 Linux )
Matrox 专用的视频输出驱动通过内核模式利用 Gxxx 卡的 YUV 后台缩放器。
如果有 Matrox 卡, 这是最快的选项。
.PD 0
.RSs
.IPs <设备名>
显式选择 Matrox 设备名 (默认是: /dev/\:mga_vid)。
.RE
.PD 1
.
.TP
.B xmga (仅用于 Linux, X11)
mga 视频输出驱动, 运行在 X11 窗口。
.PD 0
.RSs
.IPs <设备名>
显式选择 Matrox 设备名 (默认是: /dev/\:mga_vid)。
.RE
.PD 1
.
.TP
.B "syncfb\ "
SyncFB 内核模式的视频输出驱动, 提供 Matrox Gxxx 卡特殊的硬件特性, 
像硬件去交错, 缩放和同步视频输出到监视器的垂直 retrace。
.
.TP
.B s3fb（仅适用于Linux）（另参见 \-vf yuv2 和 \-dr）
S3 Virge专用的视频输出驱动。
此驱动支持显卡的YUV转换与缩放、双重缓冲和直接渲染的功能。
使用\-vf yuy2以采用硬件加速下的YUV2渲染，这种方式在此款显卡下比YV12快很多。
.PD 0
.RSs
.IPs <device>
明确表示选择使用哪个fbdev设备名（默认值：/dev/\:fb0）。
.RE
.PD 1
.
.TP
.B 3dfx (仅用于 Linux)
3dfx 专用的视频输出驱动，此驱动在 X11 上直接使用硬件。
只支持 16 bpp。
.
.TP
.B tdfxfb (仅用于 Linux)
此驱动使用 tdfxfb 帧缓冲驱动以在3dfx卡上的使用YUV加速播放影片。
.PD 0
.RSs
.IPs <设备名>
显式选择 fbdev 设备名 (默认是: /dev/\:fb0)。
.RE
.PD 1
.
.TP
.B tdfx_vid (仅用于 Linux)
3dfx 专用的视频输出驱动，此驱动与tdfx_vid内核模块协同工作。
.PD 0
.RSs
.IPs <设备名>
显式选择设备名 (默认是: /dev/\:tdfx_vid)。
.RE
.PD 1
.
.TP
.B dxr2 (也请参见 \-dxr2) (仅用于 DXR2)
Creative DXR2 专用的视频输出驱动。
.PD 0
.RSs
.IPs <vo_driver>
输出视频子驱动用作重叠 (x11, xv)。
.RE
.PD 1
.
.TP
.B dxr3 (仅用于 DXR3)
Sigma Designs em8300 MPEG 解码器芯片 (Creative DXR3, Sigma Designs
Hollywood Plus) 专用的视频输出驱动。
也请参见 lavc 视频过滤器。
.PD 0
.RSs
.IPs overlay
激活重叠代替电视输出。
.IPs prebuf
打开预缓冲。
.IPs "sync\ "
将打开新的 sync-engine。
.IPs norm=<制式>
指定电视制式。
.RSss
0: 不改变目前制式 (默认)。
.br
1: 使用 PAL/\:NTSC 自动调节。
.br
2: 使用 PAL/\:PAL-60 自动调节。
.br
3: PAL
.br
4: PAL-60
.br
5: NTSC
.REss
.IPs <0\-3>
如果有多于一个 em8300 卡, 指定设备号。
.RE
.PD 1
.
.TP
.B ivtv (IVTV 仅适用于 )
Conexant CX23415 (iCompression iTVC15) 或 Conexant CX23416 (iCompression
iTVC16) MPEG 解码器芯片 (Hauppauge WinTV PVR-150/250/350/500)
专用的视频输出驱动供电视输出。
也请参见 lavc 视频过滤器。
.PD 0
.RSs
.IPs device
显式选择 MPEG 解码器设备名 (默认是: /dev/video16)。
.IPs output
显式选择电视输出用于视频信号。
.RE
.PD 1
.
.TP
.B mpegpes (仅用于 DVB)
视频输出驱动用于 DVB 卡写输出到一个 MPEG-PES 文件, 如果没有安装 DVB 卡。
.PD 0
.RSs
.IPs card=<1\-4>
如果有多于一个 DVB 输出卡, 指定设备号 (仅适用于 V3 API, 比如 1.x.y 驱动系列)。
.IPs <文件名>
输出文件名 (默认是: ./grab.mpg)
.RE
.PD 1
.
.TP
.B zr (也请参见 \-zr* 和 \-zrhelp)
一些 MJPEG 捕捉/\:回放卡的视频输出驱动。
.
.TP
.B zr2 (也请参见 zrmjpeg 视频 过滤器)
一些 MJPEG 捕捉/\:回放卡的视频输出驱动, 第二代。
.PD 0
.RSs
.IPs dev=<设备>
指定视频设备。
.IPs norm=<PAL|NTSC|SECAM|auto>
指定视频制式 (默认是: auto)。
.IPs (no)prebuf
激活或撤销预缓冲, 还没被支持。
.RE
.PD 1
.
.TP
.B "md5sum\ "
计算每帧的 MD5 和并写入文件。
支持 RGB24 和 YV12 色彩空间。
对调试有用。
.PD 0
.RSs
.IPs outfile=<参数值>
指定输出文件名 (默认是: ./md5sums)。
.RE
.PD 1
.
.TP
.B yuv4mpeg
变换视频流为无压缩 YUV 4:2:0 图像序列并储存到文件 (默认是: ./stream.yuv)。
格式与 mjpegtools 所用的一样, 
所以如果想要用 mjpegtools 套装软件处理视频, 这就有用。
它支持 YV12, RGB (24 bpp) 和 BGR (24 bpp) 格式。
能与 \-fixed-vo 选项组合来连接具有相同维数和 fps 值的文件。
.PD 0
.RSs
.IPs interlaced
作为交错帧写输出, 先顶域。
.IPs interlaced_bf
作为交错帧写输出, 先底域。
.IPs file=<文件名>
写输出到 <文件名> 代替默认的 stream.yuv。
.REss
.PD 1
.RS
.sp 1
.I 注意:
如果你不指定任何选项, 输出的是逐行的(即没有交错的)。
.RE
.
.TP
.B "gif89a\ "
输出每帧到当前目录的单个动画 GIF 文件。
仅支持 24 bpp 的 RGB 格式并转换输出为 256 色。
.PD 0
.RSs
.IPs <fps>
指定浮点数帧率 (默认是: 5.0)。
.IPs <output>
指定输出文件名 (默认是: ./out.gif)。
.REss
.PD 1
.RS
.sp 1
.I 注意:
你必须在指定文件名之前指定帧率, 否则帧率成为文件名的一部分。
.sp 1
.I 示例:
.RE
.PD 0
.RSs
mplayer video.nut \-vo gif89a:fps=15.0:output=test.gif
.RE
.PD 1
.
.TP
.B "jpeg\ \ \ "
输出每帧到当前目录的 JPEG 文件。
每帧以前面 0 填充引导的帧号作为文件名。
.PD 0
.RSs
.IPs [no]progressive
指定标准的或逐行的 JPEG (默认是: noprogressive)。
.IPs [no]baseline
指定是否使用基线 (默认是: baseline)。
.IPs optimize=<0\-100>
优化因子 (默认是: 100)
.IPs smooth=<0\-100>
平滑因子 (默认是: 0)
.IPs quality=<0\-100>
质量因子 (默认是: 75)
.IPs outdir=<dirname>
指定保存 JPEG 文件的目录 (默认是: ./)。
.IPs subdirs=<前缀>
创建编号的子目录保存文件, 用指定的前缀而不是用当前的目录。
.IPs maxfiles=<参数值> (仅用于 subdirs)
用于在每个子目录保存文件的最大编号。
必须大于或等于 1 (默认是: 1000)。
.RE
.PD 1
.
.TP
.B "pnm\ \ \ \ "
输出每帧到当前目录的 PNM 文件。
每帧以前面 0 填充引导的帧号作为文件名。
它在 raw 和 ASCII 模式下支持 PPM, PGM 和 PGMYUV 文件。
也请参见 pnm(5), ppm(5) 和 pgm(5)。
.PD 0
.RSs
.IPs "ppm\ \ "
写 PPM 文件 (默认)。
.IPs "pgm\ \ "
写 PGM 文件。
.IPs pgmyuv
写 PGMYUV 文件。
PGMYUV 像 PGM, 但也包含 U 和 V 平面, 添加在图像的底部。
.IPs "raw\ \ "
在 raw 模式下写 PNM 文件 (默认)。
.IPs ascii
在 ASCII 模式下写 PNM 文件。
.IPs outdir=<目录名>
指定目录保存 PNM 文件 (默认是: ./)。
.IPs subdirs=<前缀>
创建编号的子目录保存文件, 用指定的前缀而不是用当前的目录。
.IPs maxfiles=<参数值> (仅用于 subdirs)
用于在每个子目录保存文件的最大编号。
必须大于或等于 1 (默认是: 1000)。
.RE
.PD 1
.
.TP
.B "png\ \ \ \ "
输出每帧到当前目录的 PNG 文件。
每帧以前面 0 填充引导的帧号作为文件名。
支持 24 bpp 的 RGB 和 BGR 格式。
.PD 0
.RSs
.IPs z=<0-9>
指定压缩级别。
0 没压缩, 9 最强压缩。
.RE
.PD 1
.
.TP
.B "tga\ \ \ \ "
输出每帧到当前目录的 Targa 文件。
每帧以前面 0 填充引导的帧号作为文件名。
此视频输出驱动的目的是拥有一个简单无损失的图像绘制器且不需要任何外部库。
支持 15, 24 和 32 bpp 的 BGR[A] 色彩格式。
你能锁定一个特殊的格式带视频格式过滤器。
.sp 1
.I 示例:
.RE
.PD 0
.RSs
mplayer video.nut \-vf format=bgr15 \-vo tga
.RE
.PD 1
.
.
.
.SH "解码/过滤器选项"
.
.TP
.B \-ac <[-|+]编解码器1,[-|+]编解码器2,...[,]>
按照在 codecs.conf 中音频编解码器的名称, 指定使用它们的优先级列表。
编解码器名称前使用 "-" 表示忽略它。
编解码器名称前使用 "+" 表示锁定它, 这有可能会崩溃!
如果列表尾有 "," MPlayer 使用没有列出的编解码器作为后备。
.br
.I 注意:
可用的编解码器其完整列表请参见 \-ac help。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-ac mp3acm"
锁定 l3codeca.acm MP3 编解码器。
.IPs "\-ac mad,"
先尝试 libmad, 其它作为后备。
.IPs "\-ac hwac3,a52,"
先尝试硬件 AC3 通透, 然后是软件 AC3, 最后是其它。
.IPs "\-ac hwdts,"
先尝试硬件 DTS 通透, 然后是其它。
.IPs "\-ac -ffmp3,"
跳过 FFmpeg 的 MP3 编解码器。
.RE
.PD 1
.
.TP
.B \-af-adv <force=(0\-7):list=(filters)> (也请参见 \-af)
指定高级音频过滤器选项:
.RSs
.IPs force=<0\-7>
锁定音频过滤器的插入为下面其中之一:
.RSss
0: 使用完全自动的过滤器插入。
.br
1: 精度优化 (默认)。
.br
2: 速度优化。
.I 警告:
某些音频过滤器特性可能默默地消失, 且音质可能下降。
.br
3: 使用无自动的过滤器插入且无优化。
.I 警告:
使用此设定可能使 MPlayer 崩溃。
.br
4: 根据 0 以上的, 使用自动的过滤器插入,
但尽可能使用浮点处理。
.br
5: 根据 1 以上的, 使用自动的过滤器插入,
但尽可能使用浮点处理。
.br
6: 根据 2 以上的, 使用自动的过滤器插入,
但尽可能使用浮点处理。
.br
7: 根据 3 以上的, 使用自动的过滤器插入,
但尽可能使用浮点处理。
.REss
.IPs list=<过滤器列表>
同 \-af 一样。
.RE
.
.TP
.B \-afm <驱动1,驱动2,...>
按照在 codecs.conf 中音频编解码器族的名称, 指定使用它们的优先级列表。
如果给定的编解码器族没一个能工作, 使用默认的后备编解码器族。
如果列表尾有 "," MPlayer 使用没有列出的编解码器作为后备。
.br
.I 注意:
可用的编解码器族其完整列表请参见 \-afm help。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-afm ffmpeg"
先尝试 FFmpeg 的 libavcodec 编解码器。
.IPs "\-afm acm,dshow"
先尝试 Win32 编解码器。
.RE
.PD 1
.
.TP
.B \-aspect <高宽比> (也请参见 \-zoom)
重载影片的高宽比, 万一播放中的文件的高宽比信息不正确或缺少。
.sp 1
.I 示例:
.PD 0
.RSs
\-aspect 4:3  或 \-aspect 1.3333
.br
\-aspect 16:9 或 \-aspect 1.7777
.RE
.PD 1
.
.TP
.B \-noaspect
停用影片高宽比的自动补偿。
.
.TP
.B "\-field-dominance <-1\-1>"
设置隔行扫描内容的第一个域。
对于那些使帧速加倍的去隔行扫描器来说那很有用：\-vf tfields=1, \-vf yadif=1 
和 \-vo xvmc:bobdeint。
.PD 0
.RSs
.IPs -1
自动（默认值）：如果解码器不导出适当的信息的话，其将设回为0（上半域）。
.IPs 0
上半域为第一个域
.IPs 1
下半域为第一个域
.RE
.PD 1
.
.TP
.B "\-flip \ "
上下翻转图像。
.
.TP
.B \-lavdopts <选项1:选项2:...> (调试代码)
指定 libavcodec 解码参数。
用逗号分隔多重选项。
.sp 1
.I 示例:
.PD 0
.RSs
\-lavdopts gray:skiploopfilter=all:skipframe=nonref
.RE
.PD 1
.sp 1
.RS
可用的选项有:
.RE
.RSs
.IPs bitexact
对所有的解码步骤只用 bit-exact 算法 (用于编解码测试)。
.IPs bug=<参数值>
手工绕过编码器错误:
.RSss
0: 无
.br
1: 自动检测错误 (默认)
.br
2 (msmpeg4v3): 老式 lavc 生成的 msmpeg4v3 文件 (不自动检测)
.br
4 (mpeg4): Xvid 交错错误 (如果 fourcc==XVIX, 会自动检测)
.br
8 (mpeg4): UMP4 (如果 fourcc==UMP4, 会自动检测)
.br
16 (mpeg4): 填补错误 (自动检测)
.br
32 (mpeg4): 非法 vlc 错误 (每个 fourcc 都自动检测)
.br
64 (mpeg4): Xvid 或 DivX qpel 错误 (每个 fourcc/\:版本都自动检测)
.br
128 (mpeg4): 旧标准的 qpel (每个 fourcc/\:版本都自动检测)
.br
256 (mpeg4): 另一个 qpel 错误 (每个 fourcc/\:版本都自动检测)
.br
512 (mpeg4): direct-qpel-blocksize 错误 (每个 fourcc/\:版本都自动检测)
.br
1024 (mpeg4): 边沿填补错误 (每个 fourcc/\:版本都自动检测)
.REss
.IPs debug=<参数值>
显示调试信息。
.RSss
.br
0: 停用
.br
1: 图像信息
.br
2: 率控制
.br
4: 比特流
.br
8: 宏块(MB)类型
.br
16: 每块的量化参数(QP)
.br
32: 运动矢量
.br
0x0040: 运动矢量可视化 (使用 \-noslices)
.br
0x0080: 宏块(MB)跳略
.br
0x0100: 启动码
.br
0x0200: PTS
.br
0x0400: 错误恢复力(resilience)
.br
0x0800: 内存管理控制操作(H.264)
.br
0x1000: 错误
.br
0x2000: 可视化量化参数(QP), QP 值越低着色越绿。
.br
0x4000: 可视化块型。
.REss
.IPs ec=<参数值>
设置错误隐藏策略。
.RSss
1: 对受损的宏块使用强去块(deblock)过滤器。
.br
2: 往返式运动矢量(MV)搜寻 (慢)
.br
3: 全部 (默认)
.REss
.IPs er=<参数值>
设置错误恢复力策略。
.RSss
.br
0: 停用
.br
1: 谨慎的 (应该能用于破编码器。)
.br
2: 正常的 (默认) (用于正常的编码器。)
.br
3: 挑衅的 (更多检查, 但是连有效的比特流也可能导致问题。)
.br
4: 非常挑衅的
.REss
.IPs "fast （仅用于MPEG-2、MPEG-4和H.264）"
启用与标准不符的优化，并且可能导致一些潜在的问题, 诸如简化反量化步聚，想当然地使
用默认的量化矩阵，想当然地采用YUV 4:2:0，以及跳过一些检测受损比特流的检查步骤。
.IPs "gray\ "
只灰度图像解码 (比彩色解码快一点)
.IPs "idct=<0\-99> (参见 \-lavcopts)"
为了最佳的解码品质, 使用与编码和解码时相同的 IDCT 算法。
不过这可能会牺牲一些精确性。
.IPs lowres=<数值>[,<宽度>]
以较低的分辨率解码。
低分辨率解码还不被所有的边界码器支持, 且常常导致难看的图像。
这不是有错误, 只是一个副作用, 全分辨率时不解码。
.RSss
.br
0: 停用
.br
1: 1/2 分辨率
.br
2: 1/4 分辨率
.br
3: 1/8 分辨率
.REss
.RS
如果 <宽度> 指定了, 就使用了低分辨率解码, 
只要视频的宽度宽过(is major than)或等于 <宽度>。
.RE
.IPs "sb=<数值> (仅用于 MPEG-2)"
跳过宏块底部的制定行数。
.IPs "st=<数值> (仅用于 MPEG-2)"
跳过宏块顶部的制定行数。
.IPs skiploopfilter=<跳略值> (仅用于 H.264)
在 H.264 解码期间跳过循环过滤器(亦称为 "去块")。
既然被过滤的帧被当作解码依赖帧的引用, 在品质上
这比不进行去块步骤, 如不对 MPEG-2 视频去块, 效果更差。
但是至少对高比特流的 HDTV 提供了大的提速且不损失视觉品质。
.sp 1
<跳略值> 可以是以下的值之一:
.RSss
.br
none: 从不跳过。
.br
default: 跳过无用的处理步骤 (如: AVI 中的 0 大小的包)。
.br
nonref: 跳过没被引用的帧 (即, 不用于解码其它的帧, 错误不能 "兴旺")。
.br
bidir: 跳过 B-帧。
.br
nonkey: 跳过所有的帧除了 keyframes。
.br
all: 跳过所有的帧。
.REss
.IPs skipidct=<跳略值> (仅用于 MPEG1/2)
跳过 IDCT 步骤。
在几乎所有的情况下此步骤使得品质降级许多 
(可用的跳略值请参见 skiploopfilter)。
.IPs skipframe=<跳略值>
完全跳过解码帧。
大的提速, 但是有痉挛的动作或有时糟糕的图像 
(可用的跳略值请参见 skiploopfilter)。
.IPs threads=<1\-8>
用于解码的线程数 (默认是: 1)
.IPs vismv=<参数值>
可视化运动矢量。
.RSss
.br
0: 停用
.br
1: 可视化 P-帧的前瞻运动矢量。
.br
2: 可视化 B-帧的前瞻运动矢量。
.br
4: 可视化 B-帧的后瞻运动矢量。
.REss
.IPs vstats
打印一些统计量并保存到 ./vstats_*.log。
.RE
.
.TP
.B \-noslices
停用 16-像素高的片/\:条方式绘制视频, 而是一次绘制整个帧。
可能更快或更慢, 取决于显卡和可用的缓存。
它只对 libmpeg2 和 libavcodec 编解码器有效。
.
.TP
.B \-nosound
不播放/\:编码声音。
对基准测试有用。
.
.TP
.B \-novideo
不播放/\:编码视频。
但在许多情况下不工作, 请使用 \-vc null \-vo null 替代。
.
.TP
.B \-pp <品质> (也请参见 \-vf pp)
设置 DLL 的后期处理级别。
仅可以用于有内部后期处理例程的 Win32 DirectShow DLL。
此选项不再对 \-vf pp 有用。
\-pp 参数值的有效范围依编解码器不同而不同, 大部分为 
0\-6, 其中 0=禁用 6=最慢/\:最好。
.
.TP
.B \-pphelp (也请参见 \-vf pp)
显示可用的后期处理滤镜及其用法的简介。
.
.TP
.B \-ssf <模式>
指定软件缩放参数。
.sp 1
.I 示例:
.PD 0
.RSs
\-vf scale \-ssf lgb=3.0
.RE
.PD 1
.PD 0
.RSs
.IPs lgb=<0\-100>
高斯柔化过滤器 (亮度)
.IPs cgb=<0\-100>
高斯柔化过滤器 (色度)
.IPs ls=<-100\-100>
锐化过滤器 (亮度)
.IPs cs=<-100\-100>
锐化过滤器 (色度)
.IPs chs=<h>
水平色度偏移
.IPs cvs=<v>
垂直色度偏移
.RE
.PD 1
.
.TP
.B \-stereo <模式>
选择 MP2/\:MP3 立体声输出的类型。
.PD 0
.RSs
.IPs 0
立体声
.IPs 1
左声道
.IPs 2
右声道
.RE
.PD 1
.
.TP
.B \-sws <软件缩放类型> (也请参见 \-vf scale 和 \-zoom)
指定软件缩放算法用于 \-zoom 选项。
这对缺少硬件加速, 如 x11 的视频输出驱动不影响。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs 0
快速二次线性
.IPs 1
快速二次线性
.IPs 2
二次立方 (品质好) (默认)
.IPs 3
实验中
.IPs 4
最短距离 (品质差)
.IPs 5
area
.IPs 6
亮度二次立方/色度二次线性
.IPs 7
高斯
.IPs 8
sincR
.IPs 9
lanczos
.IPs 10
自然二次立方样条曲线
.RE
.PD 1
.sp 1
.RS
.I 注意:
有些 \-sws 选项可调。
视频缩放过滤器的描述有更多的信息。
.RE
.
.TP
.B \-vc <[-|+]编解码器1,[-|+]编解码器2,...[,]>
按照在 codecs.conf 中视频编解码器的名称, 指定使用它们的优先级列表。
编解码器名称前使用 "-" 表示忽略它。
编解码器名称前使用 "+" 表示锁定它, 这有可能会崩溃!
如果列表尾有 "," MPlayer 使用没有列出的编解码器作为后备。
.br
.I 注意:
可用的编解码器其完整列表请参见 \-vc help。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-vc divx"
锁定 Win32/\:VfW DivX 编解码器, 无后备。
.IPs "\-vc -divxds,-divx,"
跳过 Win32 DivX 编解码器。
.IPs "\-vc ffmpeg12,mpeg12,"
先尝试 libavcodec 的 MPEG-1/2 编解码器, 其次是 libmpeg2, 然后是其它的。
.RE
.PD 1
.
.TP
.B \-vfm <驱动1,驱动1,...>
按照在 codecs.conf 中视频编解码器族的名称, 指定使用它们的优先级列表。
如果给定的编解码器族没一个能工作, 使用默认的后备编解码器族。
如果列表尾有 "," MPlayer 使用没有列出的编解码器作为后备。
.br
.I 注意:
可用的编解码器族其完整列表请参见 \-vfm help。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-vfm ffmpeg,dshow,vfw"
先尝试 libavcodec, 其次是 Directshow, 然后 VfW 编解码器, 
最后如果它们都不工作使用其它后备的。
.IPs "\-vfm xanim"
先尝试 XAnim 编解码器。
.RE
.PD 1
.
.TP
.B \-x <x> (也请参见 \-zoom) (仅用于 MPlayer)
缩放图像到宽度 <x> (如果软件/\:硬件缩放可用)。
停用高宽比计算。
.
.TP
.B \-xvidopts <选项1:选项2:...>
指定使用Xvid解码时的附加参数。
.br
.I 注意:
既然 libavcodec 快过 Xvid 你可能想使用 
libavcodec 后期处理过滤器 (\-vf pp) 和解码器 (\-vfm ffmpeg) 来替换。
.sp 1
Xvid 的内部后期处理过滤器有:
.PD 0
.RSs
.IPs deblock-chroma (也请参见 \-vf pp)
色度去块(deblock)过滤器
.IPs deblock-luma (也请参见 \-vf pp)
亮度去块(deblock)过滤器
.IPs dering-luma (也请参见 \-vf pp)
亮度去环(deringing)过滤器
.IPs dering-chroma (也请参见 \-vf pp)
色度去环(deringing)过滤器
.IPs filmeffect (也请参见 \-vf noise)
在视频中添加人工的胶片纹理。
可能提高了视觉品质, 虽然降低了真实的品质。
.RE
.sp 1
.RS
渲染方法:
.RE
.PD 0
.RSs
.IPs "dr2\ \ "
激活直接渲染的方法 2。
.IPs nodr2
撤销直接渲染的方法 2。
.RE
.PD 1
.
.TP
.B \-xy <参数值> (也请参见 \-zoom)
.PD 0
.RSs
.IPs 参数值<=8
按因子 <参数值> 缩放图像。
.IPs 参数值>8
设置图像宽度为参数值, 并计算图像高度以保持高宽比。
.RE
.PD 1
.
.TP
.B \-y <y> (也请参见 \-zoom) (仅用于 MPlayer)
缩放图像到高度 <y> (如果软件/\:硬件缩放可用)。
停用高宽比计算。
.
.TP
.B "\-zoom\ \ "
在可能的情况下允许使用软件缩放。
不支持硬件缩放的输出驱动(像 x11, fbdev), 因为性能缘故
而被 MPlayer 默认停用缩放, 但现在允许软件缩放。
.
.
.
.SH "音频过滤器"
音频过滤器允许你修改音频流及其属性。
语法是:
.
.TP
.B \-af <过滤器1[=参数1:参数2:...],过滤器2,...>
建立音频过滤器链。
.PP
.I 注意:
请参见 \-af help, 获得可用的音频过滤器其完整列表。
.PP
可用的过滤器有:
.
.TP
.B resample[=srate[:sloppy[:type]]]
改变音频流的采样(速/频)率。
可用于声卡只有一个固定的频率或者要卡住的旧卡最高只能达 44.1kHz。
此过滤器在必要时被自动启用。
它只支持 16-位 native-endian(低位在前) 格式的整数值和浮点数作为输入。
.br
.I 注意:
对于 MEncoder, 你也需要使用 \-srate <srate>。
.PD 0
.RSs
.IPs <srate>
输出的采样率(以 Hz 为单位)。
参数的有效范围是从 8000 到 192000。
如果输入和输出的采样率相同, 或者如果此参数被省略, 此过滤器被自动卸载。
正常情况下高的采样率能改善音频品质, 尤其是与其它过滤器结合时。
.IPs <sloppy>
允许(1) 或不允许(0) 输出采样率与给定的频率 <srate> 稍微不同 (默认是: 1)。
可用于启动回放时极端慢的情形。
.IPs <type>
选择使用何种重采样方式。
.RSss
0: 线性插值 (快速, 品质低 尤其是 upsampling 时)
.br
1: 多相过滤器组(filterbank)并且整数处理
.br
2: 多相过滤器组(filterbank)并且浮点数处理 (慢, 品质最佳)
.REss
.PD 1
.RE
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs "mplayer \-af resample=44100:0:0"
设置重采样过滤器的输出采样率为 44100Hz, 使用此不允许微调的输出采样率
缩放和线性插值。
.RE
.PD 1
.
.TP
.B lavcresample[=srate[:length[:linear[:count[:cutoff]]]]]
改变音频流采样率为整数 <srate> (以 Hz 为单位)。
它只支持 16位 native-endian(低位在前) 格式。
.br
.I 注意:
对于 MEncoder, 你也需要使用 \-srate <srate>。
.PD 0
.RSs
.IPs <srate>
输出的采样率
.IPs <length>
有关较低采样率的过滤器长度 (默认是: 16)
.IPs <linear>
如果值是 1, 过滤器将在多相进入处之间线性插值
.IPs <count>
多相进入处数量的 log2
(..., 10->1024, 11->2048, 12->4096, ...)
(默认是: 10->1024)
.IPs <cutoff>
截频 (0.0-1.0), 默认设置取决于过滤器长度
.RE
.PD 1
.
.TP
.B sweep[=speed]
产生正弦 sweep。
.PD 0
.RSs
.IPs <0.0\-1.0>
delta 的正弦, 使用非常低的值听此扫听(sweep)。
.RE
.PD 1
.
.TP
.B sinesuppress[=freq:decay]
删除一个指定频率的正弦。
对去除低品质音频设备上 50/60Hz 的噪音时有用。可能只在单声道输入上可工作。
.PD 0
.RSs
.IPs <freq>
应删除的频率 (以 Hz 为单位) (默认是: 50)
.IPs <decay>
控制适应性 (一个较大的值会使得过滤器适应幅度和相位的变化较迅速, 
而一个较小的值会使得此适应过程较慢) (默认是: 0.0001)。合理的值约为 0.001。
.RE
.PD 1
.
.TP
.B hrtf[=flag]
头部相关的转变功能: 为头戴式耳机转换多声道音频成双声道输出, 
但保留声音的空间感。
.sp 1
.PD 0
.RS
.IPs "Flag  含义"
.IPs "m     后场声道矩阵解码"
.IPs "s     双声道矩阵解码"
.IPs "0     无矩阵解码 (默认)"
.RE
.PD 1
.
.TP
.B equalizer=[g1:g2:g3:...:g10]
10-八度波段图形均衡器, 其实现使用了 10 IIR 带通过滤器。
这意味着不管回放的是何种音频都行。10 波段的中心频率各是:
.sp 1
.PD 0
.RS
.IPs "段号 频率"
.IPs "0    31.25 Hz"
.IPs "1    62.50 Hz"
.IPs "2   125.00 Hz"
.IPs "3   250.00 Hz"
.IPs "4   500.00 Hz"
.IPs "5    1.00 kHz"
.IPs "6    2.00 kHz"
.IPs "7    4.00 kHz"
.IPs "8    8.00 kHz"
.IPs "9   16.00 kHz"
.RE
.PD 1
.sp 1
.RS
如果此声音播放的采样率低于频率波段的中心频率, 此波段就被停用。
此过滤器的一个已知错误是, 最高波段的特性没有完全对称, 如果采样率
接近其波段的中心频率时。此问题可被绕过。办法是 upsampling 其声音: 
在此过滤器之前使用重采样过滤器。
.RE
.PD 0
.RSs
.IPs <g1>:<g2>:<g3>:...:<g10>
浮点数代表各频率波段的增益分贝(dB) (-12\-12)
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af equalizer=11:11:10:5:0:-12:0:5:12:12 media.avi"
放大声音的高端和底端的频率区段, 但几乎完全取消 1kHz 附近的声音。
.RE
.PD 1
.
.TP
.B channels=nch[:nr:from1:to1:from2:to2:from3:to3:...]
能用于添加, 去除, 路由和拷贝音频声道。
如果仅给定 <nch>, 默认是用路由(跳接), 其所做工作如下: 
如果输出声道数大于输入声道数, 插入空的声道 (除了
混音单声道成立体声时, 在两个输出声道中重复此单声道)。
如果输出声道数小于输入声道数, 截掉多余的声道。
.PD 0
.RSs
.IPs <nch>
输出声道数 (1\-6)
.IPs "<nr>\ "
路由数 (1\-6)
.IPs <from1:to1:from2:to2:from3:to3:...>
0 到 5 对定义各声道的路由。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af channels=4:4:0:1:1:0:2:2:3:3 media.avi"
改成 4 声道并设置 4 对路由: 交换声道 0 和声道 1, 保留声道 2 和 3 未动。
会观察到如果回放媒体含有两个声道, 声道 2 和 3 无声, 但声道 0 和 1 仍要交换。
.IPs "mplayer \-af channels=6:4:0:0:0:1:0:2:0:3 media.avi"
改成 6 声道并设置 4 对路由: 拷贝声道 0 到声道 0 至 3。声道 4 和 5 无声。
.RE
.PD 1
.
.TP
.B format[=format] (也请参见 \-format)
在不同的采样格式之间转换。
自动被启用, 当声卡或其他的过滤器需要时。
.PD 0
.RSs
.IPs <format>
设置所需的格式。
一般的形式是 "sbe", 其中 "s" 指示符号 (要么 "s" 指带符号, 
要么 "u" 指不带符号), "b" 指示每个样本的位数 (16, 24 或 32)
而 "e" 指示 endian 格式 ("le" 指 little-endian, "be" 指 big-endian
或者 "ne" 指 MPlayer 运行其上的计算机所用的 endian 格式)。
有效值(尤其)有: "s16le", "u32be" 和 "u24ne"。例外但也有效的指定格式有: u8, 
s8, floatle, floatbe, floatne, mulaw, alaw, mpeg2, ac3 和 imaadpcm。
.RE
.PD 1
.
.TP
.B volume[=v[:sc]]
实现软件的音量控制。
请谨慎使用此过滤器, 因为会降低信号至声音的噪声率。
在大多数情况下设置 PCM 音量至最大是最佳的, 省去过滤器, 
而用混音器的主音量控制来控制输出到音响的水平。
万一你的声卡有数码的 PCM 混音器而不是模拟的, 
且听到失真, 请使用 MASTER(主) 混音器。
如果计算机联有外接扩音器(这几乎总是常有的事), 
调节主音量和扩音器的音量旋钮能减少噪声水平, 直到背景的嘶嘶声消失。
.br
此过滤器有第二个功能: 测量总体的最高声音水平并通过 MPlayer 显示出来。
此估计的音量能用来设置 MEncoder 的音量以使用最大动态范围。
.br
.I 注意:
此过滤器不能重返进入, 所以对每个音频流只能启用一次。
.PD 0
.RSs
.IPs "<v>\ \ "
设置所有声道中流所需的增益分贝(dB) :  范围从 -200dB 至 +60dB, 
其中 -200dB 完全靜音而 +60dB 等于增益 1000 (默认是: 0)。
.IPs "<sc>\ "
打开 (1) 或关闭 (0) 软剪切。
软-剪切 能使得声音更平滑流畅, 如果使用了非常高的音量水平。
启用此选项, 如果扩音器的动态范围非常低。
.br
.I 警告:
此功能产生失真, 是应该最后才考虑使用的手段。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af volume=10.1:0 media.avi"
放大声音 10.1dB, 且声音水平太高时使用 硬-剪切 。
.RE
.PD 1
.
.TP
.B pan=n[:L00:L01:L02:...L10:L11:L12:...Ln0:Ln1:Ln2:...]
武断混音。
基本上是音量和声道过滤器的组合能用于混合许多声道至仅仅几个声道,
如: 立体声到单声道或者改变环绕声系统中心扬声器的 "宽度"。
此过滤器很难用, 且需要一些修补才能获得所要的结果。
此过滤器的选项数取决于输出声道数。如何用此过滤器
把 6-声道文件混音成双声道的实例, 能在示例一节中将近最后的地方找到。
.PD 0
.RSs
.IPs "<n>\ \ "
输出声道数 (1\-6)
.IPs <Lij>
输入声道 i 混音成输出声道 j 的份量 (0\-1)。
所以基本上你先要有 n 个数表示要作用到第一个输入声道, 
然后再有 n 个数要作用到第二个输入声道, 如此以往。
如果你不对某些输入声道指定任何数, 就认为是 0。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af pan=1:0.5:0.5 media.avi"
立体声混音成单声道。
.IPs "mplayer \-af pan=3:1:0:0.5:0:1:0.5 media.avi"
给定 3 声道输出, 保留声道 0 和 1 未动,
但混合声道 0 和 1 成输出声道 2 (被送到比如超低音声道)。
.RE
.PD 1
.
.TP
.B sub[=fc:ch]
添加一个超低音(subwoofer)声道到音频流。
用于创建超低音声道的音频数据声道 0 和声道 1 的平均声音。
四阶 Butterworth(巴特沃斯) 过滤器低通过滤声音的结果是默认截频 60Hz 
且在音频流中添加了一个独立的声道。
.br
.I 警告:
停用此过滤器, 当播放 DVDs 带杜比(Dolby Digital 5.1)声音时, 
否则此过滤器分解声音到超低音声道。
.PD 0
.RSs
.IPs "<fc>\ "
低通过滤器的截频(以 Hz 单位) (20Hz 至 300Hz) (默认是: 60)。
为了最佳结果, 尝试设置截频尽可能低。这能改善立体声或环绕音效的体验。
.IPs "<ch>\ "
决定插入超音声道音频的声道号。
声道号在 0 和 5 之间 (默认是: 5)。
观察到声道数会自动增加到 <ch>, 如果必要的话。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af sub=100:4 \-channels 5 media.avi"
添加超低音声道到输出声道 4 且其中截频为 100Hz。
.RE
.PD 1
.
.TP
.B "center\ "
从前方声道中创建中心声道。
可能目前品质较低, 因为还没有实现用高通过滤器进行适当抽取, 
而是用平均和半折其前方声道替代。
.PD 0
.RSs
.IPs "<ch>\ "
决定插入中心声道的声道号。
声道号在 0 和 5 之间 (默认是: 5)。
观察到声道数会自动增加到 <ch>, 如果必要的话。
.RE
.PD 1
.
.TP
.B surround[=delay]
矩阵编码的环绕音效解码器, 像杜比环绕音效(Dolby Surround)。
许多双声道音频文件事实上含有矩阵编码的环绕音效。需要声卡支持至少 4 声道。
.PD 0
.RSs
.IPs <delay>
后方扬声器的延迟时间(以 ms 为单位) (0 至 1000) (默认是: 20)。
此延迟按如下设置: 如果 d1 是聆听点到前方扬声器的距离, 
d2 是聆听点到后方扬声器的距离, 那么延迟该
设为 15ms 如果 d1 <= d2 或设为 15 + 5*(d1-d2) 如果 d1 > d2。
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af surround=15 \-channels 4 media.avi"
添加环绕音效解码, 后方扬声器声音为 15ms 的延迟。
.RE
.PD 1
.
.TP
.B delay[=ch1:ch2:...]
延迟声音到扬声器, 这样可以让不同声道的声音同时到达聆听点。
这只对多于两个扬声器时有用。
.PD 0
.RSs
.IPs ch1,ch2,...
应该加给每个声道的延迟时间(以 ms 为单位) (0 至 1000 之间的浮点数)。
.RE
.PD 1
.sp 1
.RS
不同声道所需的延迟时间计算如下:
.IP 1. 3
测量不同的扬声器到聆听点的距离(以 meters(米) 为单位), (对于 5.1 的系统) 
得到距离 s1 至 s5。没有补偿超低音的点 (因为你听不出差异)。
.IP 2. 3
取其中最大距离与各个 s1 至 s5 的差, 即 s[i] = max(s) - s[i]; i = 1...5。
.IP 3.
计算所需的各个延迟时间(以 ms 为单位)为 d[i] = 1000*s[i]/342; i = 1...5。
.RE
.PD 0
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af delay=10.5:10.5:0:0:7:0 media.avi"
延迟左前方和右前方声道各 10.5ms, 两个后方声道和超低音声道 0ms, 
而中心声道 7ms。
.RE
.PD 1
.
.TP
.B export[=mmapped_file[:nsamples]]
使用内存映射 (mmap()) 导出进入的信号到其它处理过程。
内存映射的区域含有头部:
.sp 1
.nf
int nch                      /*声道数*/
int size                     /*缓冲大小*/
unsigned long long counter   /*用于保持同步, 更新每次
                               新导出的数据。*/
.fi
.sp 1
其余是 (无间隔方式) 有效载荷的 16-位数据。
.PD 0
.RSs
.IPs <mmapped_file>
映射数据到文件 (默认是: ~/.mplayer/\:mplayer-af_export)
.IPs <nsamples>
每个声道的样本数 (默认是: 512)
.RE
.sp 1
.RS
.I 示例:
.RE
.RSs
.IPs "mplayer \-af export=/tmp/mplayer-af_export:1024 media.avi"
导出每个声道的 1024 样本到 "/tmp/mplayer-af_export"。
.RE
.PD 1
.
.TP
.B extrastereo[=mul]
(线性地)增加左右声道的差异以添加某些 "现场" 回放效果。
.PD 0
.RSs
.IPs <mul>
设置差异系数 (默认是: 2.5)。
0.0 表示单声道 (两个声道的平均值), 1.0 表示声音未改变, 
而 -1.0 表示交换了左右声道。
.RE
.PD 1
.
.TP
.B volnorm[=method:target]
没有失真的最大音量。
.PD 0
.RSs
.IPs <method>
设置被用的方式。
.RSss
1: 使用单样本平滑差异, 通过对旧的样本进行标准加权平均 (默认)。
.br
2: 使用几个样本平滑差异, 通过对旧的样本进行标准加权平均。
.REss
.IPs <target>
为此样本类型设置目标幅度为最大值的分数 (默认是: 0.25)。
.RE
.PD 1
.
.TP
.B ladspa=file:label[:controls...]
装载 LADSPA (Linux Audio Developer's Simple Plugin API) 插件。
此过滤器可重返进入, 所以多个 LADSPA 插件可同时使用。
.PD 0
.RSs
.IPs <file>
指定 LADSPA 插件的库文件。
如果设置了 LADSPA_PATH, 从中搜寻指定的文件。
如果没设置, 你一定要提供一个完整说明的路径名。
.IPs <label>
指定库中的过滤器。
有些库仅含一个过滤器, 但有些含许多。
进入这里的 "help", 会列出指定库中所有可用的过滤器, 
从而消除使用 LADSPA SDK 的 "listplugins"。
.IPs <controls>
控制 0 或多个浮点数值, 其决定装载的插件的行为(例如: 延迟, 阈值和增益)。
在冗赘模式(添加 \-v 到 MPlayer 命令行)下, 所有可用的控制及其有效范围可打印。
从而消除使用 LADSPA SDK 的 "analyseplugin"。
.RE
.PD 1
.
.TP
.B "comp\ \ \ "
压缩/扩张过滤器, 话筒输入有用。
防止人为的非常高的声音和提高非常低的声音的音量。
此过滤器未经测试, 甚至可能不稳定。
.
.TP
.B "gate\ \ \ "
噪声门过滤器类似于 comp(压缩/扩张) 音频过滤器。
此过滤器未经测试, 甚至可能不稳定。
.
.TP
.B karaoke
简单声音去除过滤器利用这样的事实: 
人的声音通常录成单声道, 之后 "中心(center)" 混音进最后的音频流。
小心此过滤器会把信号变成单声道。
对 2-声道音轨工作得很好; 在非 2-声道立体声上别费劲去尝试。
.
.
.
.SH "视频滤镜"
视频滤镜让你修改视频流及其属性。
其句法是：
.
.TP
.B \-vf <滤镜1[=参数1:参数2:...],滤镜2,...>
设置一连串的视频滤镜。
.PP
许多参数是可选的并且如果省略的话则设为默认值。
要明确表示使用默认值，则将参数设为‘-1’。
参数 w:h 表示以像素为单位宽 x 高 h，x:y 表示 从较大的图像的左上角开始数 x:y 的位
置。
.br
.I 注意：
要获取可用视频滤镜列表，参见 \-vf help。
.sp 1
视频滤镜以列表的形式维护。
有一些命令用于维护滤镜列表。
.
.TP
.B \-vf-add <滤镜1[,滤镜2,...]>
在滤镜列表尾部加上参数中所给的滤镜。
.
.TP
.B \-vf-pre <滤镜1[,滤镜2,...]>
在滤镜列表头部加上参数中所给的滤镜。
.
.TP
.B \-vf-del <索引号1[,索引号2,...]>
删除位于指定索引号上的滤镜。
索引号起始为0，负数表示从列表尾部开始寻址（-1表示最后一个）。
.
.TP
.B \-vf-clr
完全清空滤镜列表。
Completely empties the filter list.
.PP
如果滤镜支持，你可以通过参数的名字访问参数。
.
.TP
.B \-vf <滤镜>=help
打印特定滤镜的参数名及参数的取值范围。
.
.TP
.B \-vf <滤镜=已命名参数1=参数值1[:已命名参数2=参数值2:...]>
将一个已命名参数设置为指定参数值。
使用 on 和 off 或 yes 和 no 来设置标志位参数。
.PP
可用插件有:
.
.TP
.B crop[=w:h:x:y]
切割出图像的指定部分并丢弃其余部分。
对去掉宽银幕电影的黑边很有用。
.PD 0
.RSs
.IPs <w>,<h>
切割出来部分的宽和高，默认值为原始的宽度和高度。
.IPs <x>,<y>
切割出来部分的位置，默认值是中央.
.RE
.PD 1
.
.TP
.B cropdetect[=0\-255]
计算必要的切割参数并把推荐值显示在标准输出上。
.PD 0
.RSs
.IPs <limit>
门限值，可设范围为无（0）至所有（255）（默认值：24）
.br
.IPs <round>
指定宽:高值为该值的倍数（默认值：16）。
偏移值将被自动调整以使视频位于屏幕中心。
使用 2 以只得到偶数尺寸（ 4:2:2 的视频需要此选项）。
16 对于大多数编码器的编码来说是很适合的。
.RE
.PD 1
.
.TP
.B rectangle[=w:h:x:y]
该插件响应 input.conf 中的两参数指令‘change_rectangle’。
.PD 0
.RSs
.IPs <w>,<h>
宽度和高度（默认值：-1，在边缘可见的条件下宽度最大的可能值）。
.IPs <x>,<y>
左上角的位置（默认值：-1，屏幕最左上角）
.RE
.PD 1
.
.TP
.B expand[=w:h:x:y:o:a:r]
将影片的分辨率扩展（而不是缩放）至指定的值并将未缩放的原点移至x,y坐标。
可以用于把字幕/\:OSD放置在该滤镜生成的黑边中。
.RSs
.IPs <w>,<h>
扩展后的宽、高（默认值：原始的宽、高）。
w和h的负数值将被视作为相对于原始大小的增量。
.sp 1
.I 示例：
.PD 0
.RSs
.IP expand=0:-50:0:0
在图片的底部添加50像素的边。
.RE
.PD 1
.IPs <x>,<y>
原始图像在扩展后图像中的位置（默认：位于中心）
.IPs "<o>\ \ "
渲染OSD/\:字幕
.RSss
0：禁用（默认值）
.br
1：启用
.REss
.IPs "<a>\ \ "
扩展时适应某个宽高比而不是某个分辨率（默认值：0）。
.sp 1
.I 示例：
.PD 0
.RSs
.IP expand=800:::::4/3
除非源视频有更高的分辨率，否则扩展至800x600，当出现前一种情况时，其将扩展直至填
满一个4/3宽高比的区域。
.RE
.PD 1
.IPs "<r>\ \ "
舍入数值以使宽和高值能被<r>整除（默认值：1）。
.RE
.
.TP
.B flip（另参见\-flip）
翻转图像使其上下颠倒。
.
.TP
.B "mirror\ "
使图像相对于Y轴反转。
.
.TP
.B rotate[=<0\-7>]
以90度为单位旋转图像并有选择地将其翻转。
对于4至7间的值，只有当影片的几何形状为肖像式（译注：宽度比高度小）而不是风景画式
（译注：宽度比高度大）时才执行旋转操作。
.RSs
.IPs 0
顺时针旋转90度并翻转（默认值）。
.IPs 1
顺时针旋转90度。
.IPs 2
逆时针旋转90度。
.IPs 3
逆时针旋转90度并翻转。
.RE
.
.TP
.B scale[=w:h[:ilaced[:chr_drop[:par[:par2[:presize[:noup[:arnd]]]]]]]]
使用软件缩放器（速度慢）缩放图像并执行YUV<\->RGB色彩空间转换（另参见\-sws）。
.RSs
.IPs <w>,<h>
缩放后的宽/\:高值（默认值：原始的宽/\:高值）
.br
.I 注意：
若使用了\-zoom，并且底层的滤镜（包括libvo）无法执行缩放，则其默认设置为
d_宽/\:d_高！
.RSss
 0：  缩放后的d_宽/\:d_高
.br
-1：  原始的宽/\:高
.br
-2：  使用另一个尺寸的值和缩放前的宽高比计算w/h。
.br
-3：  使用另一个尺寸的值和原始的宽高比计算w/h。
.br
-(n+8)：与以上的-n相似，但舍入尺寸值至最接近的16的倍数。
.REss
.IPs <ilaced>
触发隔行扫描视频的缩放方式。
.RSss
0：关闭（默认）
.br
1: 打开
.REss
.IPs <chr_drop>
色度信息的跳过方式
chroma skipping
.RSss
0：使用所有可用输入扫描行上的色度信息。
.br
1: 只使用每隔2个输入扫描行上的色度信息。
.br
2: 只使用每隔4个输入扫描行上的色度信息。
.br
3: 只使用每隔8个输入扫描行上的色度信息。
.REss
.IPs "<par>[:<par2>]（另参见\-sws）"
根据\-sws中所选的缩放器类型设置缩放参数。
.RSss
\-sws 2 （双立方插值）：B（雾化）和C（色斑）
.br
0.00:0.60 默认值
.br
0.00:0.75 VirtualDub中的“精确双立方插值”
.br
0.00:0.50 Catmull-Rom插值
.br
0.33:0.33 Mitchell-Netravali插值
.br
1.00:0.00 立方式B-插值
.br
\-sws 7 （高斯模糊）：锐化度（0（柔和） \- 100 （锐利））
.br
\-sws 9 （LANCZOS迭代）：过滤长度（1\-10）
.REss
.IPs <presize>
缩放至预设尺寸。
.RSss
qntsc：  352x240 （NTSC四分之一大小屏幕）
.br
qpal：   352x288 （PAL四分之一大小屏幕）
.br
ntsc：   720x480 （标准NTSC）
.br
pal：    720x576 （标准PAL）
.br
sntsc：  640x480 （正方形像素NTSC）
.br
spal：   768x576 （正方形像素PAL）
.REss
.IPs <noup>
不允许放大时超出原始尺寸。
.RSss
0：允许放大时超出（默认）。
.br
1: 若有一个尺寸超出其原始值时则不允许。
.br
2: 若有两个尺寸均超出其原始值时则不允许。
.REss
.IPs <arnd>
垂直缩放器使用精确数值舍入，这可能比默认的舍入方式快速或缓慢。
.RSss
0：禁止精确数值舍入（默认）
.br
1：允许精确数值舍入（默认）
.REss
.RE
.
.TP
.B dsize[=aspect|w:h:aspect-method:r]
更改滤镜链上任意位置要使用的显示大小/\:宽高比。
宽高比可以是分数（4/3）或浮点数（1.33）。
或者，你可以指定所希望显示的宽和高的实际大小。
注意这个滤镜自己
.B 不
做任意缩放操作；它只影响到后面的（硬件或软件）缩放器在修正
宽高比时将采取什么样的行为。
.RSs
.IPs <w>,<h>
新显示模式的宽度和高度。
也可以是以下这些特殊值：
.RSss
 0：  原来显示模式的宽度和高度
.br
-1：  原始视频的宽度和高度（默认）
.br
-2：  使用另一个尺寸的值和原来显示模式的宽高比计算w/h。
.br
-3：  使用另一个尺寸的值和原始视频宽高比计算w/h。
.REss
.sp 1
.I 示例：
.PD 0
.RSs
.IP dsize=800:-2
当视频宽高比为4/3时指定显示分辨率为800x600，或当视频宽高比为16/9时指
定为800x450。
.RE
.IPs <aspect-method>
根据原来的宽高比修改宽度和高度。
.RSss
-1：忽略原有的宽高比。（默认）
.br
 0：在<w>和<h>作为最大的分辨率的情况下保持显示模式的宽高比。
.br
 1：在<w>和<h>作为最小的分辨率的情况下保持显示模式的宽高比。
.br
 2: 在<w>和<h>作为最大的分辨率的情况下保持视频的宽高比。
.br
 3: 在<w>和<h>作为最小的分辨率的情况下保持视频的宽高比。
.REss
.sp 1
.I 示例：
.PD 0
.RSs
.IP dsize=800:600:0
指定显示分辨率小于等于800x600，以保持宽高比。
.RE
.PD 1
.IPs "<r>\ \ "
将宽度和高度值舍入至可被<r>整除（默认值：1）。
.RE
.
.TP
.B "yuy2\ \ \ "
强制执行YV12/\:I420/\:422P至YUY2的软件转换。
对于那些对YV12支持较差但对YUY2支持较好的显卡很有用。
.
.TP
.B "yvu9\ \ \ "
强制执行YVU9至YV12色彩空间的软件转换。
不赞成使用，因为使用软件色彩调整器更好。
.
.TP
.B "yuvcsp\ "
将YUV色彩值限制在CCIR 601定义的范围内而不做实际的色彩转换。
.
.TP
.B rgb2bgr[=swap]
RGB 24/32 <\-> BGR 24/32色彩空间转换。
.PD 0
.RSs
.IPs "swap\ "
同样是执行R <-> B转换。
.RE
.PD 1
.
.TP
.B palette
使用palette（调色板）进行RGB/BGR 8 \-> 15/16/24/32bpp色彩空间转换。
.
.TP
.B format[=fourcc]
限制下一个滤镜使用的色彩空间而不做任何转换。
与色彩调整滤镜共同作用完成实际转换。
.br
.I 注意：
要获取可用格式列表参见format=fmt=help。
.PD 0
.RSs
.IPs <fourcc>
格式名称如rgb15、bgr24、yv12（默认值：yuy2）
.RE
.PD 1
.
.TP
.B noformat[=fourcc]
限制下一个滤镜使用的色彩空间而不做任何转换。
与format滤镜不同，这个滤镜能处理任意色彩空间
.B 除了
你自己定义的。
.br
.I 注意：
要获取可用格式列表参见noformat=fmt=help。
.PD 0
.RSs
.IPs <fourcc>
格式名称如rgb15、bgr24、yv12（默认值：yv12）
.RE
.PD 1
.
.TP
.B pp[=filter1[:option1[:option2...]]/[-]filter2...]（另参见\-pphelp）
启用指定序列的后期处理子滤镜。
子滤镜必须用‘/’分隔并且可以通过在其名字前加以‘\-’禁用。
每个子滤镜和一些选项有一个短名和一个长名，两者可以互换使用。例如\& dr/dering
是一样的。
一些共用的选项在所有的子滤镜中使用以决定这些子滤镜的作用范围：
.PD 0
.RSs
.IPs a/autoq
如果CPU太慢则自动关闭子滤镜。
.IPs c/chrom
同时执行色度过滤（默认值）。
.IPs y/nochrom
只执行亮度过滤（不使用色度信息）。
.IPs n/noluma
只执行色度过滤（不使用亮度信息）。
.RE
.PD 1
.sp 1
.RS
.br
.I 注意：
\-pphelp列出了可用子滤镜的列表。
.sp 1
可用的子滤镜有
.RE
.RSs
.IPs hb/hdeblock[:difference[:flatness]]
水平方向上的反块效应（deblocking）滤镜
.RSss
<difference>：差别系数，值越高意味着反块效应效果越强
（默认值：32）。
.br
<flatness>：平坦度阈值，值越低意味着反块效应效果越强
（默认值：39）。
.REss
.IPs vb/vdeblock[:difference[:flatness]]
垂直方向上的反块效应（deblocking)滤镜
.RSss
<difference>：差别系数，值越高意味着反块效应效果越强
（默认值：32）。
.br
<flatness>：平坦度阈值，值越低意味着反块效应效果越强
（默认值：39）。
.REss
.IPs ha/hadeblock[:difference[:flatness]]
精确的水平方向上的反块效应（deblocking）滤镜
.RSss
<difference>：差别系数，值越高意味着反块效应效果越强
（默认值：32）。
.br
<flatness>：平坦度阈值，值越低意味着反块效应效果越强
（默认值：39）。
.REss
.IPs va/vadeblock[:difference[:flatness]]
精确的垂直方向上的反块效应（deblocking）滤镜
.RSss
<difference>：差别系数，值越高意味着反块效应效果越强
（默认值：32）。
.br
<flatness>：平坦度阈值，值越低意味着反块效应效果越强
（默认值：39）。
.REss
.sp 1
水平反块效应滤镜和垂直反块效应滤镜共用同一个差别系数和平
坦度阈值，所以不能在水平和垂直方向上设置不同阈值。
.sp 1
.IPs h1/x1hdeblock
试验性的水平方向上的反块效应（deblocking）滤镜
.IPs v1/x1vdeblock
试验性的垂直方向上的反块效应（deblocking）滤镜
.IPs dr/dering
去色斑（deringing）滤镜
.IPs tn/tmpnoise[:threshold1[:threshold2[:threshold3]]]
瞬时噪声去除器
.RSss
<threshold1>：更大规模->更强的过滤
.br
<threshold2>：更大规模->更强的过滤
.br
<threshold3>：更大规模->更强的过滤
.REss
.IPs al/autolevels[:f/fullyrange]
自动更正亮度/对比度
.RSss
f/fullyrange：增大亮度范围至（0\-255）。
.REss
.IPs lb/linblenddeint
线性混合反隔行扫描滤镜，通过使用（1 2 1）过滤器过滤所有的输入扫描行以
解除所给区块的隔行扫描。
.IPs li/linipoldeint
线性插值反隔行扫描滤镜，通过线性插值算法每隔两个扫描行执行插值以解除
所给区块的隔行扫描。
.IPs ci/cubicipoldeint
立方插值反隔行扫描滤镜，通过立方插值算法每隔两个扫描行执行插值以解除
所给区块的隔行扫描。
.IPs md/mediandeint
中位数反隔行扫描滤镜，通过每隔两个扫描行应用中位数过滤器以解除所给区
块的隔行扫描。
.IPs fd/ffmpegdeint
FFmpeg反隔行扫描滤镜，通过每隔两个扫描行使用（-1 4 2 4 -1）过滤以解除
所给区块的隔行扫描。
.IPs l5/lowpass5
垂直方向上应用的FIR低用反隔行扫描滤镜，通过对所有输入扫描行使用（-1 2 6
 2 -1）过滤器以解除所给区块的隔行扫描。
.IPs fq/forceQuant[:quantizer]
将输入进来的量化表替换为你指定的常数量化表。
.RSss
<quantizer>：所使用的量化表
.REss
.IPs de/default
默认pp过滤器组合（hb:a,vb:a,dr:a）
.IPs fa/fast
快速pp过滤器组合（h1:a,v1:a,dr:a）
.IPs "ac\ \ \ "
高质量pp过滤器组合（ha:a:128:7,va:a,dr:a）
.RE
.RS
.sp 1
.I 示例：
.RE
.PD 0
.RSs
.IPs "\-vf pp=hb/vb/dr/al"
水平和垂直方向上反块效应、去色斑以及自动亮度/\:对比度调整
.IPs "\-vf pp=de/-al"
使用默认的过滤器组合而不使用亮度/\:对比度调整
.IPs "\-vf pp=default/tmpnoise:1:2:3"
启用默认的过滤器组合以及瞬时噪声去除器。
.IPs "\-vf pp=hb:y/vb:a"
水平方向反块效应只针对亮度信息，并且根据可用CPU时间资源打开或关闭垂直方
向的反块效应过滤。
.RE
.PD 1
.
.TP
.B spp[=quality[:qp[:mode]]]
简单后期处理滤镜，它在多次（或者——在质量等级为6时——在所有的）
变换中压缩和解压图像并使结果平均化。
.RSs
.IPs <quality>
0\-6 （默认值：3）
.IPs "<qp>\ "
强制使用的量化参数（默认值：0，使用来自视频的量化参数）。
.IPs <mode>
0：刚性阈值（默认值）
.br
1：柔性阈值（去色斑效果好，但较模糊）
.br
4：与0相似，但同时使用B帧的量化参数（可能导致闪烁）
.br
5：与1相似，但同时使用B帧的量化参数（可能导致闪烁）
.RE
.
.TP
.B uspp[=quality[:qp]]
极简单且缓慢的后期处理滤镜，它在多次（或者——在质量等级为8时——在
所有的）变换中压缩和解压图像并使结果平均化。
其与spp行为的差异在于uspp在所有情况下使用libavcodec Snow编码及解码，
而spp仅使用类似于MJPEG的简化的内部8x8DCT变换。
.RSs
.IPs <quality>
0\-8 （默认值：3）
.IPs "<qp>\ "
强制使用的量化参数（默认值：0，使用来自视频的量化参数）。
.RE
.
.TP
.B fspp[=quality[:qp[:strength[:bframes]]]]
简单后期处理滤镜的一个快速版本
.RSs
.IPs <quality>
4\-5 （与spp中的等价；默认值：4）
.IPs "<qp>\ "
强制使用的量化参数（默认值：0，使用来自视频的量化参数）。
.IPs <-15\-32>
过滤强度，值越低意味着加入更多细节但同时也带来更多损伤，而值越高越使图像
平滑但同时也越模糊（默认值：0 \- PSNR优化）。
.IPs <bframes>
0：不使用B帧的量化参数（默认值）
.br
1：也使用B帧的量化参数（可能导致闪烁）
.RE
.
.TP
.B pp7[=qp[:mode]]
spp滤镜的变种，与使用7顶点DCT的spp=6相似，在这种情况下只有中央的采
样在IDCT后使用。
.RSs
.IPs "<qp>\"
强制使用的量化参数（默认值：0，使用来自视频的量化参数）。
.IPs <mode>
0：刚性阈值
.br
1：柔性阈值（去色斑效果较好，但较模糊）
.br
2：中性阈值（默认值，效果好）
.RE
.
.TP
.B qp=equation
量化参数（QP）变换滤镜
.RSs
.IPs <equation>
诸如“2+2*sin(PI*qp)”之类的方程式
.RE
.
.TP
.B geq=equation
通用方程式变换滤镜
.RSs
.IPs <equation>
某种方程式，例如用以水平翻转图像的‘p(W-X\,Y)’。
你可以使用空白分隔符使方程式更容易读懂。
有一些常量可以在方程式中使用：
.RSss
PI：圆周率派
.br
E：自然常数e
.br
X / Y：当前采样中的坐标
.br
W / H：图像的宽度和高度
.br
SW / SH：当前滤镜处理过后的平面的宽/高度量尺度，例如用于YUV 4:2:0的1,1和
0.5,0.5。
.br
p(x,y)：返回当前平面x/y位置上像素的值。
.REss
.RE
.
.TP
.B "test\ \ \ "
生成各种测试中的测试用图样。
.
.TP
.B rgbtest
生成一个RGB测试图样，适用于对比RGB和BGR的场合。
你会看到由上而下的红、黄、蓝三色条纹。
.
.TP
.B lavc[=quality:fps]
使用libavcodec的YV12至MPEG-1的快速软件转换，用于与DVB/\:DXR3/\:IVTV一同使用。
.RSs
.IPs <quality>
1\-31：固定的量化尺度
.br
32\-：以kbits为单位的固定比特率
.IPs <fps>
强制指定的输出fps值（浮点值）（默认值：0，根据图像高度自动检测）
.RE
.
.TP
.B dvbscale[=aspect]
设置用于DVB卡的优化缩放比例，用硬件度量x轴而用软件计算y轴比率以保持宽高比。
只有当与expand和scale滤镜一同使用时才有用。
.RSs
.IPs <aspect>
控制宽高比例，计算方式为DVB_HEIGHT*ASPECTRATIO（默认值：576*4/3=768
），对于16:9的电视将其设置为576*(16/9)=1024。
.RE
.sp 1
.RS
.I 示例：
.RE
.PD 0
.RSs
.IPs "\-vf dvbscale,scale=-1:0,expand=-1:576:-1:-1:1,lavc"
FIXME：解释一下这个是干什么的。
.RE
.PD 1
.
.TP
.B noise[=luma[u][t|a][h][p]:chroma[u][t|a][h][p]]
添加噪点效果。
.PD 0
.RSs
.IPs <0\-100>
亮度噪点
.IPs <0\-100>
色度噪点
.IPs u
均匀噪点（否则就是高斯分布的）
.IPs t
瞬时噪点（噪点样式在不同帧上是不同的）
.IPs a
平均化瞬时噪点（更平滑，但相较而言渲染得很慢）
.IPs h
高质量（稍显好看，渲染稍慢）
.IPs p
具有（半）规则样式的混合随机噪点
.RE
.PD 1
.
.TP
.B denoise3d[=luma_spatial:chroma_spatial:luma_tmp:chroma_tmp]
该滤镜目标在于消除图像上的噪点，产生平滑的图像，并且使静态图像真正静止（这能提
高可压缩性。）。
.PD 0
.RSs
.IPs <luma_spatial>
空间亮度强度（默认值：4）
.IPs <chroma_spatial>
空间色度强度（默认值：3）
.IPs <luma_tmp>
亮度瞬时强度（默认值：6）
.IPs <chroma_tmp>
色度瞬时强度（默认值：luma_tmp*chroma_spatial/luma_spatial）
.RE
.PD 1
.
.TP
.B hqdn3d[=luma_spatial:chroma_spatial:luma_tmp:chroma_tmp]
denoise3d滤镜的高精确/\:质量版本。
参数与用法与denoise3d相同。
.
.TP
.B eq[=brightness:contrast]（已被淘汰）
就像硬件均衡器一样的可以交互式控制的软件均衡器，用于那些不支持硬件级
亮度和对比度控制的显卡/\:驱动。
可能对于MEncoder很有用，不管是用来修改抓取得不好的影片，还是稍稍降低对
比度以隐藏画质损伤以及在低比特率下保持质量
.PD 0
.RSs
.IPs <-100\-100>
初始亮度
.IPs <-100\-100>
初始对比度
.RE
.PD 1
.
.TP
.B eq2[=gamma:contrast:brightness:saturation:rg:gg:bg:weight]
另一种软件均衡器，其使用对照表（运行缓慢），除了简单的亮度和对比度
调整外还允许伽玛修正。
注意当所有的伽玛值为1.0时，它与\-vf eq使用同样的MMX优化代码。
参数值是以浮点值形式给出的。
.PD 0
.RSs
.IPs <0.1\-10>
初始伽玛值（默认值：1.0）
.IPs <-2\-2>
初始对比度，其中负数值将导致图像呈现负片效果（默认
值：1.0）
.IPs <-1\-1>
初始亮度（默认值：0.0）
.IPs <0\-3>
初始饱和度（默认值：1.0）
.IPs <0.1\-10>
红色成份的伽玛值（默认值：1.0）
.IPs <0.1\-10>
绿色成份的伽玛值（默认值：1.0）
.IPs <0.1\-10>
蓝色成份的伽玛值（默认值：1.0）
.IPs <0\-1>
权值参数可以用来消减速高伽玛值在图像明亮区域的效果，比方说\&防止这些区域过度增
益而变得仅仅是纯白色。
值为0.0则使得在所有情况下执行伽玛值修正，而值为1.0则让伽玛值始终保持其修饰力度
（默认值：1.0）。
.RE
.PD 1
.
.TP
.B hue[=hue:saturation]
就像硬件均衡器一样的可以交互控制的软件均衡器，，用于那些不支持硬件级
色调和饱和度控制的显卡/\:驱动。
.PD 0
.RSs
.IPs <-180\-180>
初始色调（默认值：0.0）
.IPs <-100\-100>
初始饱和度，其中负数值将导致负色度（默认值：1.0）
.RE
.PD 1
.
.TP
.B halfpack[=f]
将按平面存放的YUV 4:2:0格式转换成半高度打包的4:2:2格式，对于亮度值降低质量采样
但保留所有色度采样值。
适用于当硬件收缩图像的质量不高或无法提供该功能时，将信号输出至一个低分辨率显
示设备的场合。
也可以用来作为一种占用CPU低的仅针对亮度信号的基本反隔行扫描滤镜。
.PD 0
.RSs
.IPs "<f>\ \ "
默认情况下，半打包过程在降低质量采样时在每对扫描行间取平均值。
任何不为0或1的值都是指定采用默认的（取平均值的）行为。
.RSss
0：在降低质量采样时只使用偶数扫描行的信息。
.br
0：在降低质量采样时只使用奇数扫描行的信息。
.REss
.RE
.PD 1
.
.TP
.B ilpack[=mode]
当隔行扫描视频以YUV 4:2:0格式存放时，由于色度信道在垂直方向的降低质量
采样的关系，色度信号在隔行扫描中没有恰当地地排列。
该滤镜将按平面存放的4:2:0的数据打包进YUY2（4:2:2）格式时将色度信号恰
当地排列至应处的位置，以便在任何扫描行中，亮度和色度数据来源于同一个
数据域时。
.PD 0
.RSs
.IPs <mode>
选择采样的模式。
.RSss
0：最接近邻居采样模式，快速但不准确
.br
1：线性插值（默认方式）
.REss
.RE
.PD 1
.
.TP
.B harddup
只适用于MEncoder。
如果在编码中使用了hardup，则它将强制使重复的帧编码至输出中。
这将占用稍多的空间，但对于输出至MPEG文件或当你要在编码后分离再合并视频
流时却有必要。
应被放置于滤镜链的最后或接近于最后，除非你有充足的理由不这样做。
.
.TP
.B softskip
只适用于MEncoder。
softskip将编码中跳过（丢弃）帧的步骤从滤镜链之前移至滤镜链中的某个
位置。
这使那些需要读取所有帧的滤镜（反电视图像模式、反瞬时噪点等等）能正
常工作。
应被放置在那些需要读取所有帧的滤镜之后，而在这些滤镜后的任何大量消
耗CPU的滤镜之前。
.
.TP
.B decimate[=max:hi:lo:frac]
丢弃那些与先前的帧差别不大的帧，以降低帧率。
该滤镜的主要用途是为了在极低的比特率下编码（例如\&在拨号接入的调制解
调器线路上传输流媒体），但在理论上它可以用于修复那些不准确地去除电视
模式过的影片）。
.PD 0
.RSs
.IPs <max>
设置最大可以连续丢弃的帧的个数（当该值为正数时），或被丢弃
帧间的最小间隔（当该值为负数时）。
.IPs <hi>,<lo>,<frac>
当没有一个8x8的区域的差别值大于阈值<hi>，并且不超过<frac>个部分（1表示
整幅画面）的差别值大于阈值<lo>时，这个帧就可以被丢弃。
数值<hi>和<lo>表示8x8像素区块中实际存在的不同值的像素个数，于是阈值64
对应于每个像素都有一个不同的值，或这种情形以不同的形式在整个区块中分布
的形式。
.RE
.PD 1
.
.TP
.B dint[=sense:level]
这个丢弃反隔行扫描（dint）滤镜侦测出并丢弃一连串隔行扫描视频的帧中的
第一个帧。
.PD 0
.RSs
.IPs <0.0\-1.0>
相邻像素间的相对差别值（默认值：0.1）
.IPs <0.0\-1.0>
图像中的哪个部分必须被侦测以判定是否为隔行扫描以便丢弃帧（
默认值：0.15）。
.RE
.PD 1
.
.TP
.B lavcdeint（已被淘汰）
FFmpeg中的反隔行扫描滤镜，与\-vf pp=fd相同
.
.TP
.B kerndeint[=thresh[:map[:order[:sharp[:twoway]]]]]
Donald Graft的自适应内核级反隔行扫描滤镜。
当超过配置中的一个阈值时，解除视频中的隔行扫描部分。
.PD 0
.RSs
.IPs <0\-255>
阈值（默认值：10）
.IPs <map>
.RSss
0：忽略超出阈值的像素（默认方式）。
.br
1：将超出阈值的像素输出为白色。
.REss
.IPs <order>
.RSss
0：不对场次序做更改（默认方式）。
.br
1：交换场的次序。
.REss
.IPs <sharp>
.RSss
0：禁用额外的锐化处理（默认方式）。
.br
1：启用额外的锐化处理
.REss
.IPs <twoway>
.RSss
0：禁用双向锐化处理（默认方式）。
.br
1：启用双向锐化处理。
.REss
.RE
.PD 1
.
.TP
.B unsharp[=l|cWxH:amount[:l|cWxH:amount]]
反锐化修饰 / 高斯模糊
.RSs
.IPs "l\ \ \ \ "
将效果应用于亮度部分。
.IPs "c\ \ \ \ "
将效果应用于色度部分。
.IPs <width>x<height>
矩阵的宽度和高度，两者都是奇数尺寸
（最小值 = 3x3，最大值 = 13x11或11x13，通常在3x3至7x7之间）
.IPs amount
图像锐力度/\:模糊度的相对增量（合理的值应为-1.5\-1.5）。
.RSss
<0：模糊
.br
>0：锐力
.REss
.RE
.
.TP
.B "swapuv\ "
交换U和V两个平面的位置。
.
.TP
.B il[=d|i][s][:[d|i][s]]
对扫描行执行（反）交错操作。
该滤镜的目标是提供处理隔行扫描图像的前半个扫描场而不对其进行反隔行扫描操作的
功能。
你可以在不破化隔行扫描结构的情况下过滤你的隔行扫描DVD视频，然后让其在电视上播放。
（在后期处理滤镜的作用下）反隔行扫描（通过柔化、平均化之类的手段）永久性地去
除了隔行扫描结构，而解交错操作将帧分离成2个扫描场（所谓的半幅画面），因此你可以
分别地处理（过滤）这些扫描场然后重新将它们交错起来。
.PD 0
.RSs
.IPs d
反交错操作（将一个扫描场置于另一个上方）
.IPs i
交错操作
.IPs s
交换扫描场的位置（交换奇偶扫描线的位置）
.RE
.PD 1
.
.TP
.B fil[=i|d]
对扫描行执行（反）交错操作。
与il滤镜十分相像，但相较之下运行得很快，其主要的缺点是它不是总能工作。
尤其是当它与其它滤镜一起使用时，它可能随机产生一些渲染错误的图像，所以
如果它能工作则暗自庆幸吧，但如果它在你的滤镜组合中不能工作也不要抱怨。
.PD 0
.RSs
.IPs d
对扫描场执行反交错操作，将它们一个个紧挨着放在一起。
.IPs i
对扫描场再次执行交错操作（产生与fil=d相反的效果）。
.RE
.PD 1
.
.TP
.B field[=n]
使用大跨度计算方式从一幅隔行扫描图像中抽取单个扫描场，以避免浪费CPU
时间。
可选参数n指定抽取的是偶数场还是奇数场（取决于n是偶数还是奇数）。
.
.TP
.B detc[=var1=value1:var2=value2:...]
尝试逆转‘电视图像模式’处理操作以还原一个电影帧率下的纯净、非
隔行扫描的视频流。
这是第一个也是最基本的一个添加到MPlayer/\:MEncoder中的反电视图像模式
滤镜。
其工作方式是锁定电视图像模式中的3:2画面特征，然后尽可能长地跟踪这个特
征。
这使它适合完全电视图像模式化的来源，即使在有一定噪点的情况下亦是如此，
但不适用于复杂的后期电视图像模式的图像的编辑。
这个滤镜的开发已不再继续，因为ivtc、pullup、和filmdint在大多数应用中效
果更好。
以下参数（参见下面的句法解释）可用于控制detc的行为：
.RSs
.IPs "<dr>\ "
设置丢弃帧的模式。
.RSss
0：不丢弃帧以保证输出帧率恒定（默认方式）。
.br
1：当最近5个帧没有丢弃或不是电视图像模式时则一定丢弃一个帧。
.br
2：总保证输入输出帧率比正好为5:4。
.br
.I 注意：
模式1和2用于MEncoder。
.REss
.IPs "<am>\ "
分析模式。
.RSss
0：固定特征，初始帧代号由<fr>中所指定。
.br
1：积极搜寻电视图像模式特征（默认值）
.REss
.IPs "<fr>\ "
设定帧序列中初始帧的代号。
0\-2是三个纯逐行扫描的帧；3和4是两个隔行扫描的帧。
默认值-1表示‘初始帧不在电视图像模式的序列中’。
这里指定的代号是影片开始前假想的那个前一帧的类型。
.IPs "<t0>, <t1>, <t2>, <t3>"
用于某些模式下的阈值。
.RE
.
.TP
.B ivtc[=1]
实验性的‘无状态’逆转电视图像模式滤镜。
ivtc并不像detc滤镜那样尝试锁定一个特征，而是对于每一帧独立地决策。
这对于那些在应用电视图像模式后经历较多编辑的来源相对而言具有很好的效
果，但相应地它相对不能容忍有噪点的输入，比如电视上捕捉来的视频。
可选参数（ivtc=1）对应于detc滤镜的dr=1选项，并且应当用于MEncoder中而不
能用于MPlayer。
与detc一样，你必须在使用MEncoder时指定正确的输出帧率
（\-ofps24000/1001）。
ivtc的进一步开发已停止，因为pullup和filmdint滤镜显得相对精确得多。
.
.TP
.B pullup[=jl:jr:jt:jb:sb:mp]
第三代反pulldown（逆转电视图像模式）滤镜，能够处理混合型硬性电视图像模式的，
24000/1001帧率逐行扫描的，以及30000/1001帧率逐行扫描的内容。
pullup滤镜的设计原则是通过在决策中利用将来的内容环境，以求得比detc或
ivtc更稳定。
与ivtc相似，pullup是无状态的，这源于它不锁定扫描场以识别要匹配的内容然
后重塑逐行扫描的帧。
它仍处于开发之中，但人们相信它是相当精确的。
.RSs
.IPs "jl, jr, jt, and jb"
这些选项用于设置图像的左边、右边、上边和下边各有多少
“垃圾信息”要忽略。
左/\:右两边是以8像素为一个单元，而上/\:下两边是以2个扫描行为一个单元。
默认是每边各取8个像素。
.br
.IPs "sb (strict breaks)"
将该选项设置为1将减小pullup产生偶发性不匹配帧的机率，
但它也可能导致高动态的帧序列中有太多的帧被丢弃。
相反地，将它设置为-1将使pullup能更容易地匹配扫描场。
这能帮助处理那些在扫描场间存在一些模糊特性的视频，但也可能导致输出中
存在隔行扫描的帧。
.br
.IPs "mp (metric plane)"
这个选项可以设置成1或2以使用色度平面而不是亮度平
面来进行pullup的计算。
这能提高处理清晰来源时的精确度，但更可能的是降低精确度，尤其是存在
色度噪点（彩虹效应）或灰度视频的场合。
将mp设置成色度平面的主要目的是降低CPU负荷，并使pullup在慢速机器上可用。
.REss
.RS
.sp 1
.I 注意：
在编码中一定要在pullup后跟上softskip滤镜以保证pullup能读取所有帧。
由于编解码器/\:滤镜层在设计上的局限，不这样做会导致输出不正确，并且往
往程序会崩溃。
.REss
.
.TP
.B filmdint[=options]
逆转电视图像模式滤镜，与上面的pullup滤镜相似。
它被设计成用于处理任意下拉特征，包括混合型软性和硬性的电视图像模式，
以及提供对于那些会慢于或快于其在电视上的原始帧率的影片的有限支持。
只有亮度平面用以寻找帧分开的位置。
如果一个扫描场没有匹配上特征，则就使用简单的线性估计方式解除其
隔行扫描结构。
如果来源是MPEG-2格式，那么这个滤镜必须是第一个滤镜以便能够访问
MPEG-2解码器设置的扫描场标志。
根据来源MPEG的不同，你可能不需采纳这个建议，只要你不看到许多“下半场先
扫描”的警告。
不设选项时，它只是做普通的逆转电视图像模式处理，并且应当与
mencoder \-fps 30000/1001 \-ofps 24000/1001一同使用。
当这个滤镜用于mplayer时，它将导致播放时帧速率不匀衡，但在通常情况下比
使用pp=lb或不进行解除隔行扫描操作要好。
多个选项可以使用/.分隔开指定。
.RSs
.IPs crop=<w>:<h>:<x>:<y>
就像crop滤镜一样，但更快而且能用于混合型硬性和软性电视图像模式的内容，
以及y不用4的倍数的情形。
如果x或y的设置将需要从色度平面中切除部分像素时，切除区域将延伸。
这通常意味着x和y必须是偶数。
.IPs io=<ifps>:<ofps>
对于每ifps个输入帧，滤镜将输出ofps个帧。
ifps/\:ofps的比率应当与\-fps/\-ofps的比率相匹配。
这可以用于过滤那些在电视上以不同原始帧率的帧率播放的影片。
.IPs luma_only=<n>
如果n为非零值，色度平面就原封不动地输出。
这适用于YV12采样的电视，这种方式丢弃其中一个色度扫描场。
.IPs mmx2=<n>
在x86系统上，如果n=1，则使用MMX2优化的函数，如果n=2，则使用3DNow!
优化的函数，否则使用普通的C语句。
如果不指定这个选项，则将自动侦测MMX2和3DNow!，使用这个选项重写自动侦测
的结果。
.IPs fast=<n>
n值较大时能提高滤镜的运行速度但牺牲了精确性。
默认值是n=3。
如果n是奇数，MPEG的REPEAT_FIRST_FIELD标志位已标记的帧后紧跟的一帧将被
认作是逐行扫描的，于是滤镜将不在处理软性电视图像模式的MPEG-2内容上花任
何时间了。
如果MMX2或3DNow!可用，那么这就是该标志位的唯一作用。
在没有MMX2和3DNow!的情况下，如果n=0或1，那么将使用与n=2或3的时候同样的
计算方式。
如果n=2或3，用于寻找帧间断的亮度阶数值就从256降低为128，这使滤镜运行更
快而不损失太多的精确性。
如果n=4或5，将使用一个更快的，但相较之下很不精确的测量标准来寻找帧间
断，这样做会增加将垂直方向上细节很多的图像误测为隔行扫描内容的可能性。
.IPs verbose=<n>
如果n是非零值，则打印出用于每个帧的具体测量标准。
适用于程序除错。
.IPs dint_thres=<n>
解除隔行扫描的阈值。
用于解除未匹配任何特征的帧的隔行扫描结构的过程中。
阈值大意味着较少的帧经过解除隔行扫描处理，要完全关闭解除隔行扫描处理则
使用n=256。
默认值为n=8。
.IPs comb_thres=<n>
比较上半扫描场和下半扫描场的阈值。
默认值为128。
.IPs diff_thres=<n>
用于侦测扫描场的瞬时变化的阈值。
默认值为128。
.IPs sad_thres=<n>
合计绝对差的阈值，默认为64。
.RE
.
.TP
.B softpulldown
这个滤镜只能用于MEncoder并且依赖于用于软性3:2下拉（软性电视图像模式）的
MPEG-2标志位。
如果你想对半软性电视模式的影片使用ivtc或detc滤镜，那么将该滤镜插入到它们之前
能使他们更稳定。
.
.TP
.B divtc[=options]
逆转隔行扫描视频的电视图像模式。
如果3:2下拉电视图像模式的视频丢失了其中的一个扫描场，或在解除隔行扫描时使用了
保留一个扫描场而插值计算另一个的方法，那么输出的是一个晃动的视频，其中的每四
个帧后有一个是重复的帧。
该滤镜目的是找到并丢弃这些重复的帧，并还原原来的影片帧率。
在使用这个滤镜时，你必须设将\-ofps指定为输入视频文件帧率的4/5
并将softskip放在滤镜链中位于其后的地方，以保证divtc能读取所有
的帧。
有两种不同的模式可选：
一阶段模式是默认的模式，并且直接就能使用，但缺点是任何电
视图像模式下相位的变化（丢帧或编辑错误）将导致暂时的画面
抖动直至滤镜重新恢复同步。
二阶段模式通过事先分析整个视频来避免这种问题，所以它能事
先知道相位的变化并能在准确的位置恢复同步。
这两个阶段
.B 不
对应于第一阶段和第二阶段的编码处理过程。
你必须在真正编码而释放出处理后的视频之前，使用divtc的第一
阶段配置运行额外的一个阶段。
使用\-nosound \-ovc raw \-o /dev/null来避免在这一阶段浪费
CPU的运算能力。
你可以在divtc后加上诸如crop=2:2:0:0之类的东西以运行
得更快。
然后使用divtc第二阶段配置以进行真正的编码。
如果你使用多阶段编码器编码，那么在所有阶段均要
使用divtc第二阶段的配置。
相关选项有：
.RSs
.IPs pass=1|2
使用二阶段模式。
.IPs file=<filename>
设置第二阶段使用的日志的文件名（默认值：“framediff.log”）。
.IPs threshold=<value>
设置滤镜认为某个特征是电视图像模式特征时，该特征所必须达到的最小强度（默认
值：0.5）。
这用于避免从视频中很暗或很静止的部分里错误地识别出一些特征。
.IPs window=<numframes>
设置搜寻特征时需要察看多少个最近读到的帧（默认值：30）。
较长的察看范围能增加特征搜寻的可靠性，但较短的察看范围能改善对于电视图
像模式中相位变化的反应时间。
该选项只对一阶段模式有作用。
当前，二阶段模式使用固定的察看范围，该范围包含了过去和将来输入的帧。
.IPs phase=0|1|2|3|4
设置一阶段模式中电视图像模式的初始相位（默认值：0）。
二阶段模式能读取将来输入的帧，所以它能够在一开始就使用正确的相位值，但
一阶段模式只能靠猜测。
当它找到正常的相位时它能跟上这个相位，但该选项能用来开始时可能出现的抖动。
二阶段模式的第一阶段也使用该选项，所以如果你保存第一阶段的输出内容，你就会得
到持续的相位值跟踪结果。
.IPs deghost=<value>
设置去鬼影处理的阈值（0\-255用于一阶段模式，-255\-255用于二阶段模式，默认0）。
如果为非零值，则使用去鬼影模式。
该选项用于那些通过将扫描场混合在一起而不是丢弃其中一个场的方式解除
隔行扫描的视频。
去鬼影处理会增强混合后帧中的压缩损伤，所以该参数值作为一个阈值，用以
将那些在去鬼影过程中与前一帧的相差值小于一个特定值的像素排除在外。
如果使用了二阶段模式，可以用负数值使滤镜在第二阶段开始时分析整个视频，以
确定它是否需要去鬼影处理，然后要么选择一个零值，要么选择该值的绝对值作
为去鬼影的参数。
应将该选项用于第二阶段，这与用于第一阶段没有差别
.RE
.
.TP
.B phase[=t|b|p|a|u|T|B|A|U][:v]
将隔行扫描的视频延迟一个扫描场的时间，以改变扫描场的次序。
其目的是修复那些在录像带传输至电脑视频的捕捉过程中使用了相反的扫描场次
序的PAL影片。
选项有：
.RSs
.IPs t
捕捉时扫描场次序为上半场先输入，传输时为下半场先输入。
滤镜将延迟下半场。
.IPs b
捕捉时扫描场次序为下半场先输入，传输时为上半场先输入。
滤镜将延迟上半场。
.IPs p
捕捉和传输时使用同样的扫描场次序。
该模式只是为了在其它选项的使用说明中引用而存在的，但如果你真的选了它，那么滤
镜会按照您的旨意不做任何事情。;-)
.IPs a
捕捉时的次序将自动通过扫描场的标志位来判断，传输时的与捕捉时的相反。
滤镜根据扫描场的标志位为每一个帧在t和b两个模式中选择一个。
如果没有任何扫描场的信息，那么该模式就与u一样了。
.IPs u
捕捉时的次序未知或不断变化，传输时的与捕捉时的相反。
滤镜通过分析图像并选择能在扫描场间产生最佳匹配的那个候选模式来给每一个帧
在t和b两个模式中选择一个。
.IPs T
捕捉时为上半场先输入，传输时未知或不断变化。
滤镜通过分析图像在t和p模式中选择一个。
.IPs B
捕捉时为下半场先输入，传输时未知或不断变化。
滤镜通过分析图像在b和p模式中选择一个。
.IPs A
捕捉时的次序由扫描场标志位判断，传输时的未知或不断变化。
滤镜通过扫描场标志位和图像分析从t、b和p中选择一个模式。
如果没有任何扫描场信息，则该模式与U一样。
这是默认的模式。
.IPs U
捕捉时和传输时的次序均未知或不断变化。
滤镜只通过图像分析以从t、b和p中选择一个模式。
.IPs v
细节信息处理。
打印每个帧所选用的模式以及在t、b和p三种模式下的扫描场间的均方差值。
.RE
.
.TP
.B telecine[=start]
应用3:2‘电视图像模式’处理以使帧率增加20%。
该选项极可能无法用于MPlayer，但它可以以'mencoder \-fps 30000/1001 \-ofps
 30000/1001 \-vf telecine'形式使用。
其中的两个fps选项都是必需的！
（如果它们不正确，就无法A/V同步。）
可选的start参数告诉滤镜从电视图像模式特征中的哪里开始执行（0\-3）。
.
.TP
.B tinterlace[=mode]
瞬时扫描场隔行扫描化——将一对对帧合并为一个个隔行扫描的帧，使帧率减半。
偶数帧移至上半扫描场，奇数帧移至下半扫描场。
该滤镜可用于充分反转（模式0下）tfields滤镜的效果。
可用模式有：
.PD 0
.RSs
.IPs 0
将奇数帧移至上半场，偶数帧移至下半场，以在半速帧率下产生一个完全高度的帧。
.IPs 1
只输出奇数帧，丢弃偶数帧；帧的高度不变。
.IPs 2
只输出偶数帧，丢弃奇数帧；帧的高度不变。
.IPs 3
将每个帧扩展至完全高度，但每两个扫描行间插入黑色的行；帧速不变。
.IPs 4
将偶数帧的偶数扫描行与奇数帧的奇数扫描行交叉在一起。
帧高度不变，帧速减半。
.RE
.PD 1
.
.TP
.B tfields[=mode[:field_dominance]]
瞬时扫描场分离——将扫描场分离成帧，输出帧率加倍。
就像telecine滤镜，tfields只在MEncoder中能正常工作，并且只在\-fps
和\-ofps设置成所需的（加倍的）帧率的情况下！
.PD 0
.RSs
.IPs <mode>
0：保持扫描场不变（会产生跳帧/\:闪烁）。
.br
1：插值恢复缺少的扫描行。（所用的算法可能不太好。）
.br
2：使用线性插值法以1/4像素精度转换扫描场（不产生跳帧）。
.br
4：使用4tap滤镜以1/4像素精度转换扫描场（较高质量）（默认方式）。
.IPs <field_dominance>\ (不推荐使用）
-1：自动（默认值）
只有当解码器输出适当的信息并且在滤镜链中tfields之前没有其它的滤镜丢
弃这些信息时才能工作，否则该值设回为0（上半扫描场先输入）。
.br
0：上半扫描场先输入
.br
1：下半扫描场先输入
.br
.I 注意：
该选项相当可能在以后的版里中去除。
使用\-field-dominance代替它。
.RE
.PD 1
.
.TP
.B yadif=[mode[:field_dominance]]
又一个解除隔行扫描的滤镜
.PD 0
.RSs
.IPs <mode>
0：每存在一帧输出一帧。
.br
1：每存在一个扫描场输出一帧。
.br
2：与0相似但跳过空间隔行扫描检查。
.br
3：与1相似但跳过空间隔行扫描检查。
.IPs <field_dominance>\ （不推荐使用）
与tfields运行方式相似。
.br
.I 注意：
该选项相当可能在以后的版本中去除。
使用\-field-dominance替代它。
.RE
.PD 1
.
.TP
.B mcdeint=[mode[:parity[:qp]]]
包含运动补偿的解除隔行扫描滤镜。
它要求每帧有一个扫描场作为输入并且必须与tfields=1或yadif=1/3或与之等
价的滤镜一起使用。
.PD 0
.RSs
.IPs <mode>
0：快速
.br
1：中等
.br
2：慢速，迭代式的运动估计
.br
3：更慢，与模式2外加参照多个帧的方式相似
.IPs <parity>
0或1用于选择使用哪个扫描场（注意：目前还不能自动侦测！）。
.IPs "<qp>\ "
较高的值能产生较平滑的运动矢量场，但单个矢量得到优化的
较少。
.RE
.PD 1
.
.TP
.B boxblur=radius:power[:radius:power]
盒状模糊
.PD 0
.RSs
.IPs <radius>
模糊过滤的强度
.IPs <power>
应用过滤的数量
.RE
.PD 1
.
.TP
.B sab=radius:pf:colorDiff[:radius:pf:colorDiff]
自适合形状的模糊
.PD 0
.RSs
.IPs <radius>
模糊过滤的强度（~0.1\-4.0）（值越大越慢）
.IPs "<pf>\ "
预过滤强度（~0.1\-2.0）
.IPs <colorDiff>
像素间会被认同的最大差值（~0.1\-100.0）
.RE
.PD 1
.
.TP
.B smartblur=radius:strength:threshold[:radius:strength:threshold]
智能模糊
.PD 0
.RSs
.IPs <radius>
模糊过滤的强度（~0.1\-5.0）（值越大越慢）
.IPs <strength>
模糊化（0.0\-1.0）或锐利化（-1.0\-0.0）
.IPs <threshold>
过滤全部区域（0），过滤平坦区域（0\-30）或过滤边缘（-30\-0）
.RE
.PD 1
.
.TP
.B perspective=x0:y0:x1:y1:x2:y2:x3:y3:t
修正没有摄制得垂直于屏幕的影片视角。
.PD 0
.RSs
.IPs <x0>,<y0>,...
左上角、右上角、左下角、右下角的坐标
.IPs "<t>\ \ "
线性（0）或立方式（1）重采样
.RE
.PD 1
.
.TP
.B "2xsai\ \ "
使用2x缩放及插值算法缩放并平滑图像。
.
.TP
.B "1bpp\ \ \ "
YUV/\:BGR 8/\:15/\:16/\:32转换中的1bpp映射位图
.
.TP
.B down3dright[=lines]
重设立体图像的位置及大小。
将两个立体扫描场都抽取出来并将其紧靠着摆放，以将它们缩放至保持原有
影片宽高比的大小。
.PD 0
.RSs
.IPs <lines>
要从图像的中间选取的扫描行的数量（默认值：12）
.RE
.PD 1
.
.TP
.B bmovl=hidden:opaque:fifo
这个位图覆盖滤镜从FIFO管道中读取位图并将它们显示在影片的上方，以支持某
些对于图像的变换。
另参见TOOLS/bmovl-test.c以获取一个小型的bmovl测试程序。
.PD 0
.RSs
.IPs <hidden>
设置‘hidden’标志位的默认值（0=可见，1=不可见）。
.IPs <opaque>
设置‘opaque’标志位的默认值（0=透明，1=不透明）。
.IPs <fifo>
FIFO管道（连接‘mplayer \-vf bmovl’和主控程序的命名管道）的路径/\:文件名
.RE
.PD 1
.sp 1
.RS
FIFO管道中使用的命令有：
.RE
.PD 0
.RSs
.IPs "RGBA32 width height xpos ypos alpha clear"
其后出现的是width*height*4字节大小的原始RGBA32数据。
.IPs "ABGR32 width height xpos ypos alpha clear"
其后出现的是width*height*4字节大小的原始ABGR32数据。
.IPs "RGB24 width height xpos ypos alpha clear"
其后出现的是width*height*3字节大小的原始RGB24数据。
.IPs "BGR24 width height xpos ypos alpha clear"
其后出现的是width*height*3字节大小的原始BGR24数据。
.IPs "ALPHA width height xpos ypos alpha"
更改指定区域的阿尔法透明度。
.IPs "CLEAR width height xpos ypos"
清空某个区域。
.IPs OPAQUE
禁用一切阿尔法透明。
要再次启用则发送“ALPHA 0 0 0 0 0”
.IPs "HIDE\ "
隐藏位图。
.IPs "SHOW\ "
显示位图。
.RE
.PD 1
.sp 1
.RS
参数有：
.RE
.PD 0
.RSs
.IPs "<width>, <height>"
图像/区域的大小
.IPs "<xpos>, <ypos>"
从x/y位置开始位图混合
.IPs <alpha>
设置阿尔法差值。
如果你将该值设为-255，你就可以发送一系列的阿尔法命令将该区域设置为-225、-200、
-175等等以得到一个不错的渐渐出现的效果！;)
.RSss
0：   保持原来的值
.br
255： 使所有的位图不透明。
.br
-255：使所有的位图透明。
.REss
.IPs <clear>
在位图混合前清空帧缓冲。
.RSss
0：在原来的图像上进行位图混合，于是你不必每当屏幕中的一小部分更新时就发送1.8MB
的RGB32数据。
.br
1：清空图像
.REss
.RE
.PD 1
.
.TP
.B framestep=I|[i]step
仅仅每隔n个帧或只对每个内部参照帧（关键帧）进行渲染。
.sp 1
如果你使用I（大写）作为参数调用这个滤镜，那么
.B 只有
关键帧才渲染。
对于DVD来说它通常意味着每15/12个帧中才有一帧（IBBPBBPBBPBBPBB），对于
AVI来说它意味着每当场景切换时或每隔keyint值（参见\-lavcopts keyint= value）
所指定数量的帧过后才有一帧。
.sp 1
当找到关键帧时，将打印一个‘I!’字符串以及紧接着的一个换行符，以结束当前
MPlayer/\:MEncoder在屏幕上输出的那一行，因为这段信息中包含了关键帧的时间值
（以秒计）以及帧编号（你可以利用这一信息切分AVI。）。
.sp 1
如果你使用一个数值参数‘step’调用这个滤镜，那么只有每隔‘step’个帧过后
才有一个帧得到渲染。
.sp 1
如果你在数值前加上一个‘i’（小写），那么将输出‘I!’（就像I参数一样）
.sp 1
如果你只给出i，那么不对帧做任何处理，只打印I!。
.
.TP
.B tile=xtiles:ytiles:output:start:delta
将一系列图像拼成单个大图像。
如果你省略了一个参数或使用一个小于0的值，则将使用默认值。
你也可以在你认为满意的情况下停止指定参数（... \-vf tile=10:5 ...）。
将缩放滤镜放在tile之前很可能是个好主意:-)
.sp 1
这些参数有：
.sp 1
.PD 0
.RSs
.IPs <xtiles>
x轴方向拼贴的图像数（默认值：5）
.IPs <ytiles>
y轴方向拼贴的图像数（默认值：5）
.IPs <output>
当‘output’个帧到达时，渲染拼贴的图像，这里‘output’应当是一个小于
xtile * ytile的数。
拼贴图像中缺失的部分保留为空白。
比如，你可以每50帧写入一个8 * 7的拼帖图像，这样就在25fps下每2秒产生一幅
图像。
.IPs <start>
以像素为单位的外边框的厚度（默认值：2）
.IPs <delta>
以像素为单位的内边框的厚度（默认值：4）
.RE
.PD 1
.
.TP
.B delogo[=x:y:w:h:t]
通过根据周围的像素进行简单的插值来去除电视台的台标。
只需设置一个能盖住台标的长方形区域然后看着它消失就行了（有时更难看
的画面会出现——你能得到效果是说不准的）。
.PD 0
.RSs
.IPs <x>,<y>
台标的左上角
.IPs <w>,<h>
被清理的长方形区域的宽度和高度
.IPs <t>
长方形区域的模糊边缘的宽度（增加w和h的大小）。
当设为-1时，屏幕上将绘出一个绿色的长方形以方便寻找合适的x、y、w、
h参数值。
.RE
.PD 1
.
.TP
.B remove-logo=/path/to/logo_bitmap_file_name.pgm
去除电视台台标，使用PGM或PPM图像文件来判断哪些像素组成
了台标。
图像文件的宽度和高度必须与所处理的视频流的宽高相
匹配。
使用过滤图像以及一个循环模糊算法去除台标。
.RSs
.IPs /path/to/logo_bitmap_file_name.pgm
过滤图像的[路径] + 文件名。
.RE
.
.TP
.B zrmjpeg[=options]
与zr2视频输出设备一同使用的软件YV12至MJPEG编码器。
.RSs
.IPs maxheight=<h>|maxwidth=<w>
这些选项zr采集卡能处理的最大宽度和高度（MPlayer的滤镜层当前
还不能查询这些信息）。
.IPs {dc10+,dc10,buz,lml33}-{PAL|NTSC}
使用这些选项将maxwidth和maxheight自动设置为zr卡/\:混合模式所知的值。
比如，有效的选项有：dc10-PAL和buz-NTSC（默认值：dc10+PAL）
.IPs color|bw
选择彩色或黑白的编码。
黑白编码较快。
彩色编码为默认方式。
.IPs hdec={1,2,4}
水平方向抽取采样因数1、2或4。
.IPs vdec={1,2,4}
垂直方向抽取采样因数1、2或4。
.IPs quality=1\-20
设置JPEG压缩的质量[最好] 1 \- 20 [非常差]。
.IPs fd|nofd
默认设置下，只有当Zoran采集卡的硬件支持MJPEG图像放大至其原有大
小时才进行抽取采样。
选项fd命令滤镜总是进行所请求的抽取采样操作（效果很糟）。
.RE
.
.TP
.B screenshot
允许使用可以与按键绑定的被动模式下的命令以获取影片的截屏。
参见被动模式的说明文档以及交互式控制一节以获取详细信息。
命名为‘shotNNNN.png’的文件将保存在工作目录下，所用的编号为第一个
可以用的编号——不会覆盖任何文件。
该滤镜在不用时不占用资源，并且支持任意色彩空间，所以将其添加进
配置文件中很安全。
.RE
.
.TP
.B "ass\ \ \ \ "
将SSA/ASS字幕的渲染移至滤镜链中的任意一个位置。
只适用于有\-ass选项的时候。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-vf ass,screenshot"
将SSA/ASS的渲染移至screenshot滤镜之前。
这样做后的截屏内容将包含字幕。
.RE
.PD 1
.
.TP
.B blackframe[=amount:threshold]
侦测出（几乎）完全黑色的帧。
可适用于侦测影片章节的切换或广告。
输出行由所侦测出帧的编号、黑色程度的百分比、帧的类型和最近遇到的关键帧的
编号组成。
.RSs
.IPs <amount>
数值低于阈值的像素的百分比率（默认值：98）。
.IPs <threshold>
决定像素值低于多少就被认作是黑色的阈值（默认值：32）。
.RE
.
.
.
.SH "通用编码选项（仅用于MENCODER）"
.
.TP
.B \-audio-delay <any floating-point number>
通过在文件头部中设置延迟信息域来延迟音频或视频。（默认值：0.0）。
该选项不在编码过程中延迟音频或视频流，但播放器会读出延迟信息域并做相
应的补偿处理。
正数值延迟音频，而负数值延迟视频。
注意该选项正好与\-delay选项相反。
例如，如果一段视频在\-delay 0.2下正确播放，那么你可以在MEncoder中使用
\-audio-delay -0.2修复视频的不同步问题。
.sp 1
当前，该选项只能用于默认的流合并器（\-of avi）。
如果你使用了另外的流合并器，那么你必须使用\-delay来代替该选项。
.
.TP
.B \-audio-density <1\-50>
每秒钟处理的音频数据块数量（默认值为2，用于0.5s长的音频数据块）。
.br
.I 注意：
只用于CBR，VBR方式忽略该选项，因为它将每个数据包分别放入一个数据块中。
.
.TP
.B \-audio-preload <0.0\-2.0>
设置音频缓冲的时音间隔（默认值：0.5s）。
.
.TP
.B \-fafmttag <format>
可用于改写输出文件中的音频格式标签。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-fafmttag 0x55"
将使输出文件包含0x55（mp3）的信息作为音频格式标签。
.RE
.PD 1
.
.TP
.B \-ffourcc <fourcc>
可用于改写输出文件中的视频fourcc值。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-ffourcc div3"
将使输出文件包含‘div3’的信息作为视频fourcc值。
.RE
.PD 1
.
.TP
.B \-force-avi-aspect <0.2\-3.0>
代替存储在AVI OpenDML vprp头部中的宽高比值。
该选项可用于在使用‘\-ovc copy’时更改宽高比值。
.
.TP
.B \-frameno-file <filename>（不推荐使用）
指定包含有帧序号对应关系表的音频文件的文件名，该对应关系表是在特殊的三阶
段编码模式的第一阶段（只处理音频）中生成的。
.br
.I 注意：
使用该模式很可能会让你得到A-V不同步的结果。
不要使用它。
它只是为了向后兼容而保留的，并且相当可能在以后的版本中去除。
.
.TP
.B \-hr-edl-seek
在跳过处理区域时使用一种更精确但相对很慢的方式。
不是定位标记为需跳过的处理区域，而是解码所有的帧并且只有编码需
要的帧。
该选项使从非关键帧的边界开始编码成为可能。
.br
.I 注意：
不保证能与‘\-ovc copy’一同使用。
.
.TP
.B \-info <option1:option2:...>（只用于AVI）
指定生成的AVI文件的头部信息内容。
.sp 1
可用选项有：
.RSs
.IPs "help\ "
显示本部分描述。
.IPs name=<value>
作品的标题
.IPs artist=<value>
作品的作者
.IPs genre=<value>
原作的类别
.IPs subject=<value>
作品的内容
.IPs copyright=<value>
版权信息
.IPs srcform=<value>
数字化资料的原始格式
.IPs comment=<value>
关于作品的总体性注释
.RE
.
.TP
.B \-noautoexpand
不要自动在MEncoder滤镜链中插入扩展滤镜。
适用于将字幕内嵌入影片时控制在滤镜链中的哪一个点上渲染字幕。
.
.TP
.B \-noencodedups
不要尝试将重复的帧重复地编码；必须以输出零字节帧的方式表明有重复帧。
除非加载了能进行重复帧编码的滤镜或编码器，否则无论如何将写入零字节帧。
当前这样的滤镜只有hardup。
.
.TP
.B \-noodml（仅用于\-of avi的情况下）
对于大于1GB的AVI文件不写入OpenDML索引。
.
.TP
.B \-noskip
不要跳过任何帧。
.
.TP
.B \-o <filename>
输出至所给的文件名。
.br
如果你需要有一个默认的输出文件名，你可以将此选项放在MEncoder的配置文
件中。
.
.TP
.B \-oac <codec name>
使用所给的音频编解码器编码（没有默认值）。
.br
.I 注意：
使用\-oac help来获取可用音频编解码器的列表。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-oac copy"
不编码，直接复制音频流
.IPs "\-oac pcm"
编码为未压缩的PCM格式。
.IPs "\-oac mp3lame"
编码为MP3格式（使用LAME）。
.IPs "\-oac lavc"
使用libavcodec编解码器编码。
.RE
.PD 1
.
.TP
.B \-of <format>（BETA测试版代码！）
编码为指定的容器格式（默认值：AVI）。
.br
.I 注意：
使用\-of help以获取可用的容器格式的列表。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-of avi"
编码为AVI格式。
.IPs "\-of mpeg"
编码为MPEG格式（另参见\-mpegopts）。
.IPs "\-of lavf"
使用libavformat流合并器编码（另参见\-lavfopts）。
.IPs "\-of rawvideo"
原始视频流（不合并——只含一个视频流）
.IPs "\-of rawaudio"
原始音频流（不合并——只含一个音频流）
.RE
.PD 1
.
.TP
.B \-ofps <fps>
为输出文件指定一个每秒帧数（fps）值，该值可以与原来视频中的不
同。
必须为可变fps（ASF、一些MOV）以及逐行扫描（30000/1001 fps电视
图像模式的MPEG）文件设置该值。
.
.TP
.B \-ovc <codec name>
使用给出的视频编解码器编码（没有默认值）。
.br
.I 注意：
使用\-ovc help来获取可用视频编解码器的列表。
.sp 1
.I 示例：
.PD 0
.RSs
.IPs "\-ovc copy"
不编码，直接复制视频流
.IPs "\-ovc raw"
编码为任意的未压缩格式（使用‘\-vf format’选择具体格式）。
.IPs "\-ovc lavc"
使用libavcodec编解码器编码。
.RE
.PD 1
.
.TP
.B \-passlogfile <filename>
在二阶段编码模式中将第一阶段的信息导出至<filename>，而不是默认的divx2pass.log。
.
.TP
.B \-skiplimit <value>
指定编码了一帧之后最多可以跳过的帧的数量（\-noskiplimit表示无限
制）。
.
.TP
.B \-vobsubout <basename>
指定输出的.idx和.sub文件的主文件名。
该选项使字幕不在编码后影片得到渲染，而是将其转而输出至VOBsub的字幕文件。
.
.TP
.B \-vobsuboutid <langid>
为字幕指定双字母的语言代码。
该选项改写了从DVD或.ifo文件中读取的语言代码。
.
.TP
.B \-vobsuboutindex <index>
指定输出文件中字幕的索引号（默认值：0）。
.
.
.
.SH "CODEC SPECIFIC ENCODING OPTIONS 特定编解码器使用的编码选项（仅用于MENCODER）"
您能使用下面的语法指定编解码器的编码参数:
.
.TP
.B \-lameopts <选项1:选项2:...>
如果使用libmp3lame编码为MP3, 你可以由此设置它的参数.
.br
可用选项有:
.
.RSs
.IPs help
获得帮助
.IPs vbr=<0\-4>
可变比特率方式
.RSss
0: cbr
.br
1: mt
.br
2: rh (默认)
.br
3: abr
.br
4: mtrh
.REss
.IPs abr
平均比特率
.IPs cbr
常比特率.
.br
也会在后继ABR预置模式中强制使用CBR模式
.IPs br=<0\-1024>
以kBit为单位设置比特率(仅用于CBR和ABR)
.IPs q=<0\-9>
质量(0-最高, 9-最低) (仅用于VBR)
.IPs aq=<0\-9>
算法质量(0\-最好/\:最慢, 9\-最差/\:最快)
.IPs ratio=<1\-100>
压缩率
.IPs vol=<0\-10>
设置音频输入增益
.IPs mode=<0\-3>
(默认值: 自动)
.RSss
0: 立体声
.br
1: 联合立体声
.br
2: 双声道
.br
3: 单声道
.REss
.IPs padding=<0\-2>
.RSss
0: 无
.br
1: 所有
.br
2: 调整
.REss
.IPs fast
启用更快的后继VBR预置编码模式, 质量稍低而比特率提高.
.IPs preset=<参数>
预设参数
.RSss
medium: VBR编码, 质量好, 150\-180 kbps的比特率范围.
.br
standard: VBR编码, 质量高, 170\-210 kbps的比特率范围.
.br
extreme: VBR编码, 质量非常高, 200\-240 kbps的比特率范围.
.br
insane: CBR编码, 质量最高, 320 的比特率范围.
.br
<8-320>: 将所给参数作为平均比特率的ABR编码.
.br
.REss
.RE

.I 示例:
.PD 0
.RSs
.IPs "\-lameopts fast:preset=standard"
用于大多数人和大多数音乐, 质量已经相当高了.
.IPs "\-lameopts  cbr:preset=192"
用指定的192 kbps常比特率的ABR预置模式编码.
.IPs "\-lameopts      preset=172"
用172 kbps平均比特率的ABR预置模式编码.
.IPs "\-lameopts      preset=extreme"
用于有绝好听力和同样好的配置的人.
.IPs "\-lameopts preset=help"
显示预置设置的附加选项等信息.
.RE
.PD 1
.
.TP
.B \-lavcopts <选项1:选项2:...>
如果使用libavcodec编码, 你可以由此设置它的参数.

.I 示例:
.PD 0
.RSs
\-lavcopts vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
.RE
.PD 1

.RS
可用选项有:
.RE
.
.RSs
.IPs vcodec=<参数>
设置使用的编解码器(没有默认值, 你必须设置它):
.RSss
mjpeg: Motion JPEG
.br
h263: H263
.br
h263p: H263 Plus
.br
mpeg4: DivX 4/\:5
.br
msmpeg4: DivX 3
.br
msmpeg4v2: MS MPEG4v2
.br
wmv1: Windows Media Video 7
.br
wmv2: Windows Media Video 8
.br
rv10: 一个老的RealVideo编解码器
.br
mpeg1video: MPEG1视频:)
.br
huffyuv: HuffYUV
.REss
.IPs vqmin=<1\-31>
最小量化值(pass\ 1/\:2)
.RSss
1: 不推荐(文件大很多, 质量没什么区别而且奇怪的副作用: msmpeg4,
h263质量很低, 拒绝速率控制结果质量更低而且有些解码器不能解码).
.br
2: 推荐用于一般的mpeg4/mpeg1视频编码(默认值).
.br
3: 推荐用于h263(p)/msmpeg4. 选择3而不是2的理由是2会导致溢出,
(对于h263(p)将来可以通过改变每MB的量化值来修正,
msmpeg4没法修正因为它不支持这个)
.REss
.IPs vqscale=<1\-31>
常量化值/\:常质量编码(选择固定量化值模式).
较低值表示更好的质量但更大的文件(默认值: 0(禁用)).
不推荐使用1(细节参见\-vqmin).
.IPs vqmax=<1\-31>
最大量化值(pass\ 1/\:2), 10\-31的范围比较合理(默认值: 31)
.IPs mbqmin=<1\-31>
最小宏块量化值(pass\ 1/\:2)(默认值: 2)
.IPs mbqmax=<1\-31>
最大宏块量化值(pass\ 1/\:2)(默认值: 31)
.IPs vqdiff=<1\-31>
I或P帧的最大量化差值(pass\ 1/\:2)(默认值: 3)
.IPs vmax_b_frames=<0\-4>
非B帧之间的最大B帧数:
.RSss
0: 无B帧(默认值)
.br
0\-2: MPEG4的合理范围
.REss
.IPs vme=<0\-5>
运动判断模式:
.RSss
0: none(非常低的质量)
.br
1: full(很慢)
.br
2: log(低质量)
.br
3: phods(低质量)
.br
4: EPZS(默认)
.br
5: X1(试验)
注意: 0\-3忽略Bits消耗量, 所以质量可能降低.
.REss
.IPs vhq
高质量模式, 把每个宏块用所有模式编码并选择其中最好的.
这很慢但得到的文件质量和文件大小都更好.(默认值: 禁用)
.IPs v4mv
允许没有宏块4个运动矢量(质量略有提高).(默认值: 禁用)
.IPs keyint=<0\-300>
关键帧的最大间距, 以帧为单位. 搜索需要关键帧因为只有关键帧可以被搜索,
但是关键帧比其它帧需要更多空间. 所以较大的参数产生较少的文件,
但搜索不够精确, 0表示没有关键帧.
不推荐大于300的参数因为效果可能不好, 取决于解码器, 编码器和运气.
如果要严格遵循的MPEG1/\:2/\:4这个值应该小于等于132.
(默认值: 250或在25fps的电影中每10秒一个关键帧)
.IPs vb_strategy=<0\-1>
选择I/\:P/\:B帧的策略(pass\ 2):
.RSss
0: 总使用最大数量的B帧(默认值)
.br
1: 在高速运动的场景中避免B帧(将导致比特率误测)
.REss
.IPs vpass=<1\-2>
激活内部2 pass模式, 只有当你希望使用2 pass编码时使用(默认值: 禁用).
.RSss
1: 第一次pass
.br
2: 第二次pass
.REss
.IPs
技巧: 对1 pass尝试使用常量化值模式(vqscale=<量化值>).
.br
huffyuv:
.RSss
pass 1保存统计信息
.br
pass 2使用基于pass 1统计的优化霍夫曼表编码.
.REss
.IPs aspect=<x/y>
内部保存电影长宽比, 像MPEG文件一样.
比重新缩放效果好的多, 因为质量没有损失.
只有MPlayer可以正确播放这些文件, 其它播放器会显示错误的长宽比.
aspect的参数可以以分数或浮点数形式给出.
示例:
.RSss
aspect=16/9, aspect=1.78
.REss
.IPs vbitrate=<参数>
设置比特率(pass\ 1/\:2)以
.RSss
kBit<4\-16000>或者
.br
Bit<16001\-24000000>
.br
(警告: 1kBit = 1000 Bits)
.br
(默认值: 800)
.REss
.IPs vratetol=<参数>
以kBit为单位的可容忍的近似文件大小. 1000\-100000是比较合理的范围.
(警告: 1kBit = 1000 Bits)
(默认值: 8000)
.IPs vrc_maxrate=<参数>
最大比特率, 以kbit/\:sec为单位(pass\ 1/\:2)
.IPs vrc_minrate=<参数>
最小比特率, 以kbit/\:sec为单位(pass\ 1/\:2)
.IPs vrc_buf_size=<参数>
缓冲大小, 以kbit为单位(pass\ 1/\:2).
注意: vratetol在第二次pass的时候不能太大否则使用vrc_(min|max)rate会有问题.
.IPs vb_qfactor=<-31.0\-31.0>
B帧和非B帧之间的量化因子(pass\ 1/\:2)(默认值: 1.25)
.IPs vi_qfactor=<-31.0\-31.0>
(pass\ 1/\:2)(默认值: 0.8)
.IPs vb_qoffset=<-31.0\-31.0>
B帧和非B帧之间的量化偏移(pass\ 1/\:2)(默认值: 1.25)
.IPs vi_qoffset=<-31.0\-31.0>
(pass\ 1/\:2)(默认值: 0.0)
.br
如果v{b|i}_qfactor > 0
.br
I/\:B帧量化值 = P帧量化值 * v{b|i}_qfactor + v{b|i}_qoffset
.br
否则
.br
进行正常的流控制(不固定于下一个P帧的量化值),
设置q= -q * v{b|i}_qfactor + v{b|i}_qoffset
.IPs
技巧: 对I/P和B帧使用不同的量化值的常量化编码可以使用:
vqmin=<ip_quant>:vqmax=<ip_quant>:vb_qfactor=<b_quant/ip_quant>
.IPs vqblur=<0.0\-1.0>
量化模糊(pass\ 1), 值越大量化对时间平均越大(变化缓慢).
.RSss
0.0: 禁用qblur
.br
0.5 (默认值)
.br
1.0: 对所有以前帧量化值平均
.REss
.IPs vqblur=<0.0\-99.0>
量化高斯模糊(pass\ 2), 值越大量化对时间平均越大(变化缓慢)(默认值: 0.5)
.IPs vqcomp=<参数>
量化压缩, 取决于vrc_eq(pass\ 1/\:2)(默认值: 0.5)
.IPs vrc_eq=<方程>
速率控制主方程(pass\ 1/\:2):

1: 常比特率
.br
tex: 常质量
.br
1+(tex/\:avgTex-1)*qComp: 老速率控制的近似方程
code
.br
tex^qComp: 使用qcomp 0.5或类似的东西(默认值)

插入算符: +,-,*,/,^

变量:
.br
tex:             材质复杂度
.br
iTex,pTex:       内部, 非内部的材质复杂度
.br
avgTex:          平均材质复杂度
.br
avgIITex:        I帧的平均内部复制度
.br
avgPITex:        P帧的平均内部复制度
.br
avgPPTex:        P帧的平均非内部复制度
.br
avgBPTex:        B帧的平均非内部复制度
.br
mv:              用于运动矢量的比特值
.br
fCode:           以log2为标度运动矢量的最大长度
.br
iCount:          内部宏块数/\:宏块数
.br
var:             空间复杂度
.br
mcVar:           时间复杂度
.br
qComp:           从命令行读取的qcomp
.br
isI, isP, isB:   如果帧是I/\:P/\:B帧为1, 否则为0
.br
Pi,E:            看你最喜欢的数学书

functions:
.br
max(a,b),min(a,b): 最大值/\:最小值
.br
gt(a,b): 如果a>b为1, 否则为0
.br
lt(a,b): 如果a<b为1, 否则为0
.br
eq(a,b): 如果a==b为1, 否则为0
.br
sin, cos, tan, sinh, cosh, tanh, exp, log, abs
.
.IPs vrc_override=<选项>
设置特定部分的质量(结尾, 致谢, ..)(pass\ 1/\:2).
选项格式为<开始帧>, <结束帧>, <质量>[/\:<开始帧>,
<结束帧>, <质量>[/...]]:
.RSss
quality 2\-31: 量化值
.br
quality \-500\-0: 质量修正百分比
.REss
.IPs vrc_init_cplx=<0\-1000>
初始复杂度(pass\ 1)
.IPs vqsquish=<0,1>
设置如何在qmin和qmax之间保持量化值(pass\ 1/\:2):
.RSss
0: 使用削波
.br
1: 使用精细的可微函数(默认值)
.REss
.IPs vlelim=<-1000\-1000>
亮度的单参数剪除阀值. 负值将同时考虑dc参数(quant=1编码时至少为-4或更低):
.RSss
0: 禁用(默认值)
.br
-4 (JVT推荐)
.REss
.IPs vcelim=<-1000\-1000>
色度的单参数剪除阀值. 负值将同时考虑dc参数(quant=1编码时至少为-4或更低):
.RSss
0 禁用(默认值)
.br
7 (JVT推荐)
.REss
.IPs vstrict=<-1,0,1>
严格遵循标准
.RSss
0: 禁用(默认值)
.br
1: 当你想把输出用于mpeg4推荐的解码器时推荐
.br
-1: 运行非标准的YV12 huffyuv编码(文件减小20%,
但不能被官方的huffyuv编解码器播放)
.REss
.IPs vdpart
数据分区.
每个视频包增加2字节, 改进当通过不可信赖的通道传输时的错误抵御能力,
(比如通过internet的流媒体)
每个视频包将分成3个独立区域编码:
.RSss
1. MVs             (=运动)
.br
2. DC coefficients (=低分辨率图像)
.br
3. AC coefficients (=细节)
.REss
.IPs
MV和DC是最重要的, 放宽他们看起来远比放宽AC效果差,
而1&2分区(MV&DC)远比3分区(AC)小,
所以错误破坏AC分区的机会比破坏MV&DC分区的机会大很多. 因此,
分区的图像比没有分区的图像看起来好的多,
因为不分区时一个错误会把AC/DC/MV都毁掉.
.IPs vpsize=<0\-10000>
视频包大小, 提高错误抵御能力(参考\-vdpart选项):
.RSss
0: 禁用(默认值)
.br
100-1000: 不错的选择
.REss
.IPs gray
只编码灰度图像(更快)(默认值: 禁用)
.IPs vfdct=<0\-10>
dct算法:
.RSss
0: 自动选择最好的(默认值)
.br
1: 快速整数
.br
2: 精确整数
.br
3: mmx
.br
4: mlib
.REss
.IPs idct=<0\-99>
idct算法:
注意: 据我们所了解的最新消息这些IDCT确实通过了IEEE1180
tests.
.RSss
0: 自动选择最好的(默认值)
.br
1: jpeg参考整数
.br
2: 简单
.br
3: 简单mmx
.br
4: libmpeg2mmx (不精确, 不要用于keyint >100的编码)
.br
5: ps2
.br
6: mlib
.br
7: arm
.REss
.IPs lumi_mask=<0.0\-1.0>
亮度掩饰.
警告: 小心, 过大的值会导致破坏图像.
警告2: 较大的值可能在有些显示器上看起来不错但在别的显示器上看着很恐怖:
.RSss
0.0: 禁用(默认值)
.br
0.0\-0.3: 合理范围
.REss
.IPs dark_mask=<0.0\-1.0>
黑暗掩饰.
警告: 小心, 过大的值会导致破坏图像.
警告2: 较大的值可能在有些显示器上看起来不错但在别的显示器/\:电视/\:液晶上看着很恐怖:
.RSss
0.0: 禁用(默认值)
.br
0.0\-0.3: 合理范围
.REss
.IPs tcplx_mask=<0.0\-1.0>
时间复杂度掩饰(默认值: 0.0(禁用))
.IPs scplx_mask=<0.0\-1.0>
空间复杂度掩饰.
如果解码时没有去马赛克滤镜, 较大的值会有帮助.
技巧: 完全切掉所有黑边因为他们降低宏块的质量, (不用scplx_mask也应该这么做).
.RSss
0.0: 禁用(默认值)
.br
0.0\-0.5: 合理范围
.REss
.IPs naq
适应量化正则话(试验).
当使用适应量化(*_mask)时, 平均每MB的量化值跟要求的帧水平的量化值不一致..
Naq尝试调整每MB的量化值来保持适当的平均.
.IPs ildct
使用交错dct
.IPs format=<参数>
.RSss
YV12: 默认值
.br
422P: 用于huffyuv
.REss
.IPs pred
(用于huffyuv)
.RSss
0: 左预测
.br
1: 平面/\:梯度预测
.br
2: 中值预测
.REss
.IPs qpel
使用四分之一像素运动补偿
技巧: 这只有高比特率编码时有用.
.IPs precmp=<0\-2000>
用于每个pass的运动估计比较函数
.IPs cmp=<0\-2000>
全点运动估计的比较函数
.IPs subcmp=<0\-2000>
副点运动估计的比较函数
.RSss
0 (SAD): 绝对差值求和, 很快(默认值)
.br
1 (SSE): 方差和
.br
2 (SATD): hadamard位移绝对值求和
.br
3 (DCT): dct位移绝对值求和
.br
4 (PSNR): 量化方差求和(别用, 低质量)
.br
5 (BIT): 块需要的比特数
.br
6 (RD): 最佳变形率, 很慢
.br
7 (ZERO): 0
.br
+256: 也应用到色度, 目前不能(正确)用于B帧
.REss
.IPs predia=<\-99\-6>
每个pass用于运动估计的菱形的类型和尺寸
.IPs dia=<\-99\-6>
用于运动估计的菱形的类型和尺寸.
注意: 普通菱形和外形检测菱形的大小的意义是不同的
.RSss
\-3: 大小为3的外形检测(快速)菱形
.br
\-2: 大小为2的外形检测(快速)菱形
.br
\-1: 试验
.br
 1: 大小为1的普通菱形(默认值) =EPZS类菱形
.nf
.ne
      0
     000
      0
.fi
.br
 2: 大小为2的普通菱形
.nf
.ne
      0
     000
    00000
     000
      0
.fi
.REss
.IPs trell
Trellis量化.
这种方法对每个8x8的块寻找合适的编码方法.
Trellis量化在PSNR vs 比特率方面是一个相当简单的优化量化方法,
(假设IDCT没有引入舍入错误, 但显然不是这样),
他简单的对每个块寻找最小的error和lambda*bits.
.RSss
lambda: qp倚赖常数
.br
bits: 每个块需要的比特数
.br
error: 量化的方差和
.REss
.IPs last_pred=<0\-99>
基于上一帧的运动预报数
.RSss
0: (默认值)
.br
a: 将使用2a+1 x 2a+1的宏块进行基于上一帧的运动矢量预报
.REss
.IPs preme=<0\-2>
每pass的运动估计
.RSss
0: 禁用
.br
1: 仅在I帧之后(默认值)
.br
2: 始终
.REss
.IPs subq=<1\-8>
副点质量精细化(用于qpel)(默认值: 8).
注意: 这对速度有显著影响.
.IPs psnr
编码后显示整个视频的psnr(信号峰值与噪音的比率),
并把每帧的psnr储存在一个类似'psnr_012345.log'的文件里.
返回值以dB(分贝)为单位, 越高越好.
.IPs mpeg_quant
使用MPEG量化而不是H.263.
(默认值: 禁用)(就是使用H.263量化)
.IPs aic
高级内部预报(仅用于H.263+)
注意: vqmin必须为8或者更大.
.IPs umv
无限MV(仅用于H.263+)
允许编码任意长度的MV.
.IPs ibias=<\-256\-256>
内部量化乖离率 (256 == 1.0)
.br
mpeg量化默认值: 96
.br
h263量化默认值: 0
.br
注意: h263 MMX量化不能处理正的乖离率(设置vfdct=1或2)
      mpeg MMX量化不能处理负的乖离率(设置vfdct=1或2)
.IPs pbias=<\-256\-256>
相互量化乖离率 (256 == 1.0)
.br
mpeg量化默认值: 0
.br
h263量化默认值: -64
.br
注意: h263 MMX量化不能处理正的乖离率(设置vfdct=1或2)
      mpeg MMX量化不能处理负的乖离率(设置vfdct=1或2)
.RE
.
.TP
.B \-xvidencopts <选项1:选项2:...>
如果使用Xvid编码, 你可以由此设置它的参数.
.br
有三种可用模式: 常比特率(CBR), 固定量化和2 pass.
.br
可用选项有:
.
.RSs
.IPs pass=<1|2>
设置2 pass模式中的pass
.IPs bitrate=<参数>
如果<16000以kbits/\:second为单位设置比特率,
或者以bits/\:second为单位如果>16000
(CBR或者2 pass模式, 默认值=687 kbits/s)
.IPs fixed_quant=<1\-31>
切换到固定量化模式并设置使用的量化值
.IPs me_quality=<0\-6>
设置运动检测质量(默认值=6)
IPs interlacing
启用交错内容支持(默认值=off)
.IPs 4mv
每个宏块使用4运动矢量, 可能有更好的压缩率, 代价是更慢的编码速度(默认值=off)
.IPs rc_reaction_delay_factor=<参数>
设置速率反应多快, 参数值越小更快
.IPs rc_averaging_period=<参数>
达到要求平均值的周期
.IPs rc_buffer=<参数>
速率控制缓冲区的大小
.IPs quant_range=<1\-31>\-<1\-31>[/<1\-31>\-<1\-31>]
所有帧的最小和最大的量化值(默认值=2\-31, CBR模式)
.br
I/P帧的最小和最大的量化值(默认值=2\-31/2\-31, 2 pass模式)
.IPs min_key_interval=<参数>
关键帧之间的最小间距(默认值=0, 仅用于2 pass模式)
.IPs max_key_interval=<参数>
关键帧之间的最大间距(默认值=10*帧速率)
.IPs mpeg_quant
使用MPEG量化而不是H.263(默认值=off)
.IPs mod_quant
一帧一帧的决定使用MPEG还是H.263量化.
(默认值=off, 仅用于2 pass模式)
.IPs greyscale
黑白编码(默认值=off)
.IPs debug
在xvid.dbg中保存每一帧的统计值(默认值=off)
.br
这不是2 pass的控制文件
.IPs keyframe_boost=<0\-1000>
(默认值=0, 仅用于2 pass模式)
.IPs kfthreshold=<参数>
(默认值=10, 仅用于2 pass模式)
.IPs kfreduction=<0\-100>
(默认值=30, 仅用于2 pass模式)
.RE

.RSs
下面的选项仅能用于不稳定(cvs -HEAD)版本的Xvid.
这些选项是试验性的并且不一定会想料想的那样工作.
.IPs packed
创建可以即时解码的比特流(默认值=off)
.br
.I 警告:
这会产生一个非法的比特流,
而且不能被除了divx/libavcodec/xvid之外的ISO-MPEG4解码器解码.
.br
.I 警告:
这还会在文件中储存一个假的divx版本号, 所以有些解码器的bug自动检测功能可能会混乱.
.IPs divx5bvop
产生DivX5兼容的B帧 (默认值=on)
.IPs qpel
启用四分之一像素运动估计(默认值=off)
.IPs gmc
启用全角运动补偿, 可以节省一些摇晃场景的大小(默认值=off)
.IPs chroma_me
使用色度信息来估计运动(默认值=off)
.IPs chroma_opt
启用色度优化预滤镜(默认值=off)
.IPs reduced
启用降低帧分辨率的编码方式(默认值=off)
.IPs max_bframes=<0\-4>
I/P帧之间的最大B帧数(默认值=0)
.IPs bquant_ratio=<0\-1000>
B帧和非B帧之间的量化值比, 150=1.50 (默认值=150)
.IPs bquant_offset=<-1000\-1000>
B帧和非B帧之间的量化偏移, 100=1.00 (默认值=100)
.IPs hq_ac
启用更好的AC部分预测, 能减小尺寸但会稍稍降低编码速度(默认值=off)
.IPs vhq=<0\-4>
启用基于DCT的更高质量的ME搜索, 由快到慢:

.br
0 = 关闭(默认值)
.br
1 = 模式决定(相互/内部MB)
.br
2 = 限制搜索
.br
3 = 中度搜索
.br
4 = 大范围搜索
.IPs psnr
编码后显示整个视频的psnr(信号峰值与噪音的比率),
并把每帧的psnr储存在一个类似'psnr_hhmmss.log'的文件里.
返回值以dB(分贝)为单位, 越高越好.
.RE
.
.
.
.\" --------------------------------------------------------------------------
.\" 环境变量
.\" --------------------------------------------------------------------------
.
.SH "环境变量"
.
有环境变量用于控制 MPlayer 和 MEncoder 的行为。
.
.TP
.B MPLAYER_CHARSET (也请参见 \-msgcharset)
转换控制台的消息显示为指定字符集 (默认值是自动检测: autodetect)。
值 "noconv" 表示不要转换。
.
.TP
.B MPLAYER_HOME
MPlayer 寻找设置的目录。
.
.TP
.B MPLAYER_VERBOSE (也请参见 \-v 和 \-msglevel)
对所有的消息模块设置初始冗赘级别 (默认是: 0)。
负的值结果是越少的消息而正的值会越多。
.
.SS libaf:
.
.TP
.B LADSPA_PATH
如果设置了 LADSPA_PATH, 它会寻找指定的文件。
如果没设置, 你就必须提供完整的路径名。
FIXME: 这也在 ladspa 一节有提到.
.
.SS libdvdcss:
.
.TP
.B DVDCSS_CACHE
指定目录以储存标题的钥匙值。
这会加速 DVD 在缓存中的译码过程。
如果 DVDCSS_CACHE 目录不存在就创建它, 
并创建以 DVD 标题或生产日期为名称的子目录。
如果 DVDCSS_CACHE 没设置或是空的, libdvdcss 会使用默认值为 
Unix 的 "${HOME}/.dvdcss/" 或 
Win32 的 "C:\\Documents and Settings\\$USER\\Application Data\\dvdcss\\"。
特殊值 "off" 停用缓存。
.
.TP
.B DVDCSS_METHOD
设置 libdvdcss 用于解读加密盘片的认证和解密方法。
可以是 title(标题), key(钥匙) 或 disc(盘片) 的其中之一。
.PD 0
.RSs
.IPs "key\ \ "
是默认方法。
libdvdcss 会使用一套计算过的播放器密钥,尝试取得盘片的钥匙。
如果驱动器不认识播放器的任何钥匙就会失败。
.IPs "disc\ "
是钥匙方法失败的备用方法。
代之使用播放器钥匙, libdvdcss 会使用蛮横暴力的算法破解盘片钥匙。
此过程需要 CPU 高强度运行和 64 MB 内存以储存临时的数据。
.IPs title
是所有其它方法的备用方法。
它不依靠与 DVD 设备交换钥匙, 而是使用一种密码机(crypto)攻击法来猜测标题钥匙。
此失败的情况极少, 因为盘片上没有足够的加密数据来低档统计攻击法, 
但是另一方面这是仅有的方法来破译储存在硬盘上的 DVD, 
和 RPC2 设备上不同地区码的 DVD。
.RE
.PD 1
.
.TP
.B DVDCSS_RAW_DEVICE
指定使用的原始设备。
确切的用法依赖于你的操作系统, 例如 Linux 工具建立的原始设备是 raw(8)。
请注意在大多数操作系统上, 使用原始设备需要高度对齐的缓冲(aligned buffers): 
Linux 需要 2048 字节(等于 DVD 扇区大小)的对齐。
.
.TP
.B DVDCSS_VERBOSE
设置 libdvdcss 冗赘级别。
.PD 0
.RSs
.IPs 0
一点都不输出消息。
.IPs 1
输出错误消息到 stderr。
.IPs 2
输出错误和调试消息到 stderr。
.RE
.PD 1
.
.TP
.B DVDREAD_NOKEYS
启动时跳过访问所有的钥匙。
目前停用。
.
.TP
.B HOME
FIXME: 待解释。
.
.SS libao2:
.
.TP
.B AO_SUN_DISABLE_SAMPLE_TIMING
FIXME: 待解释。
.
.TP
.B AUDIODEV
FIXME: 待解释。
.
.TP
.B AUDIOSERVER
指定 nas 音频输出驱动应该去连接的和传输的
网络音频系统(Network Audio System)服务器。
如果没设置, 就使用 DISPLAY。
传输可以是 tcp 和 unix 其中之一。
语法是 tcp/<某主机>:<某端口>, <某主机>:<实例号> 或 [unix]:<实例号>。
NAS 基端口是 8000 而 <实例号> 在其之上再增加。
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs AUDIOSERVER=somehost:0
连接到 NAS 服务器, 某主机上使用默认的端口和传输协议。
.IPs AUDIOSERVER=tcp/somehost:8000
连接到 NAS 服务器, 某主机上监听 TCP 端口8000。
.IPs AUDIOSERVER=(unix)?:0
连接到 NAS 服务器, 本地主机上的实例 0 使用 unix 域套接口。
.RE
.PD 1
.
.TP
.B DISPLAY
FIXME: 待解释。
.
.SS vidix:
.
.TP
.B VIDIX_CRT
FIXME: 待解释。
.
.SS osdep:
.
.TP
.B TERM
FIXME: 待解释。
.
.SS libvo:
.
.TP
.B DISPLAY
FIXME: 待解释。
.
.TP
.B FRAMEBUFFER
FIXME: 待解释。
.
.TP
.B HOME
FIXME: 待解释。
.
.SS libmpdemux:
.
.TP
.B HOME
FIXME: 待解释。
.
.TP
.B HOMEPATH
FIXME: 待解释。
.
.TP
.B http_proxy
FIXME: 待解释。
.
.TP
.B LOGNAME
FIXME: 待解释。
.
.TP
.B USERPROFILE
FIXME: 待解释。
.
.SS libmpcodecs:
.
.TP
.B XANIM_MOD_DIR
FIXME: 待解释。
.
.SS GUI:
.
.TP
.B CHARSET
FIXME: 待解释。
.
.TP
.B DISPLAY
FIXME: 待解释。
.
.TP
.B HOME
FIXME: 待解释。
.
.SS libavformat:
.
.TP
.B AUDIO_FLIP_LEFT
FIXME: 待解释。
.
.TP
.B BKTR_DEV
FIXME: 待解释。
.
.TP
.B BKTR_FORMAT
FIXME: 待解释。
.
.TP
.B BKTR_FREQUENCY
FIXME: 待解释。
.
.TP
.B http_proxy
FIXME: 待解释。
.
.TP
.B no_proxy
FIXME: 待解释。
.
.
.
.\" --------------------------------------------------------------------------
.\" 文件
.\" --------------------------------------------------------------------------
.
.SH "相关文件"
.
.TP
/usr/\:local/\:etc/\:mplayer/\:mplayer.conf
MPlayer 范围的设置
.
.TP
/usr/\:local/\:etc/\:mplayer/\:mencoder.conf
MEncoder 范围的设置
.
.TP
~/.mplayer/\:config
MPlayer 用户设置
.
.TP
~/.mplayer/\:mencoder.conf
MEncoder 用户设置
.
.TP
~/.mplayer/\:input.conf
输入绑定 (按键的完整列表请参见 "\-input keylist" 的输出)
.
.TP
~/.mplayer/\:gui.conf
GUI 配置文件
.
.TP
~/.mplayer/\:gui.pl
GUI 播放列表
.
.TP
~/.mplayer/\:font/
字体目录 (里面必须有一个 font.desc 文件和带 .RAW 后缀的文件。)
.
.TP
~/.mplayer/\:DVDkeys/
缓存的 CSS 钥匙
.
.TP
假如播放文件是 /path/\:to/\:movie.avi, MPlayer 按以下顺序搜索字幕文件:
.RS
/path/\:to/\:movie.sub
.br
~/.mplayer/\:sub/\:movie.sub
.RE
.PD 1
.
.
.\" --------------------------------------------------------------------------
.\" 示例
.\" --------------------------------------------------------------------------
.
.SH "MPLAYER的使用范例"
.
.PP
.B 快速上手播放 DVD:
.nf
mplayer dvd://1
.fi
.
.PP
.B 播放日文对话和英文字幕:
.nf
mplayer dvd://1 \-alang ja \-slang en
.fi
.
.PP
.B 只播放第 5, 6, 7 场景:
.nf
mplayer dvd://1 \-chapter 5-7
.fi
.
.PP
.B 只播放第 5, 6, 7 标题:
.nf
mplayer dvd://5-7
.fi
.
.PP
.B 播放多视角 DVD:
.nf
mplayer dvd://1 \-dvdangle 2
.fi
.
.PP
.B 从不同的 DVD 设备播放:
.nf
mplayer dvd://1 \-dvd-device /dev/\:dvd2
.fi
.
.PP
.B 从目录中的 VOB 文件播放 DVD 视频:
.nf
mplayer dvd://1 \-dvd-device /path/\:to/\:directory/
.fi
.
.PP
.B 复制 DVD 标题到硬盘, 保存文件名为 "title1.vob":
.nf
mplayer dvd://1 \-dumpstream \-dumpfile title1.vob
.fi
.
.PP
.B 播放 HTTP 流:
.nf
mplayer http://mplayer.hq/example.avi
.fi
.
.PP
.B 播放 RTSP 流:
.nf
mplayer rtsp://server.example.com/streamName
.fi
.
.PP
.B 转换字幕为 MPsub 格式:
.nf
mplayer dummy.avi \-sub source.sub \-dumpmpsub
.fi
.
.PP
.B 转换字幕为 MPsub 格式但不播放:
.nf
mplayer /dev/\:zero \-rawvideo pal:fps=xx \-demuxer rawvideo \-vc null \-vo null \-noframedrop \-benchmark \-sub source.sub \-dumpmpsub
.fi
.
.PP
.B 从标准的 V4L 输入:
.nf
mplayer tv:// \-tv driver=v4l:width=640:height=480:outfmt=i420 \-vc rawi420 \-vo xv
.fi
.
.PP
.B 回放 Zoran 卡 (旧方法, 废弃):
.nf
mplayer \-vo zr \-vf scale=352:288 file.avi
.fi
.
.PP
.B 回放 Zoran 卡 (新方法):
.nf
mplayer \-vo zr2 \-vf scale=352:288,zrmjpeg file.avi
.fi
.
.PP
.B 只用两个扬声器播放 6-声道 AAC 文件:
.nf
mplayer \-rawaudio format=0xff \-demuxer rawaudio \-af pan=2:.32:.32:.39:.06:.06:.39:.17:-.17:-.17:.17:.33:.33 adts_he-aac160_51.aac
.fi
.br
你可能想用 pan 值播放片断 (例如用放大值) 以增加音量或者避免剪切。
.
.PP
.B 使用geq滤镜产生的颠倒的棋盘：
.nf
mplayer \-vf geq='128+(p(X\,Y)-128)*(0.5-gt(mod(X/SW\,128)\,64))*(0.5-gt(mod(Y/SH\,128)\,64))*4'
.fi
.
.
.SH "MENCODER的使用范例"
.
.PP
.B 编码 DVD 标题 #2 中选择的场景:
.nf
mencoder dvd://2 \-chapter 10-15 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mpeg4
.fi
.
.PP
.B 编码 DVD 标题 #2, 缩放到 640x480:
.nf
mencoder dvd://2 \-vf scale=640:480 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mpeg4
.fi
.
.PP
.B 编码 DVD 标题 #2, 缩放到 512xHHH (保持宽高比):
.nf
mencoder dvd://2 \-vf scale \-zoom \-xy 512 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mpeg4
.fi
.
.PP
.B 同上, 但使用比特率 1800kbit 和优化的 macroblocks:
.nf
mencoder dvd://2 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mpeg4:mbd=1:vbitrate=1800
.fi
.
.PP
.B 同上, 但使用 MJPEG 压缩:
.nf
mencoder dvd://2 \-o title2.avi \-oac copy \-ovc lavc \-lavcopts vcodec=mjpeg:mbd=1:vbitrate=1800
.fi
.
.PP
.B 编码当前目录下的所有 *.jpg 文件:
.nf
mencoder "mf://*.jpg" \-mf fps=25 \-o output.avi \-ovc lavc \-lavcopts vcodec=mpeg4
.fi
.
.PP
.B 从电视调谐器编码 (指定格式用 \-vf format):
.nf
mencoder \-tv driver=v4l:width=640:height=480 tv:// \-o tv.avi \-ovc raw
.fi
.
.PP
.B 从管道编码:
.nf
rar p test-SVCD.rar | mencoder \-ovc lavc \-lavcopts vcodec=mpeg4:vbitrate=800 \-ofps 24 \-
.fi
.
.
.\" --------------------------------------------------------------------------
.\" 错误, 作者, 标准声明
.\" --------------------------------------------------------------------------
.
.SH "程序错误"
不要惊慌。
如果你发现错误, 报告我们, 但请首先确认你已阅读了所有的文档。
也要小心那些表情符号 :)
许多错误是不正确的设置和参数使用引起的。
错误报告的文档一节
(http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:bugreports.html)
解释了如何创建有用的错误报告。
.
.
.
.SH "程序的作者"
MPlayer 最初由 Arpad Gereoffy 制作。
其它许多贡献者的部分清单, 请参见 AUTHORS(作者) 文件。
.PP
MPlayer 是 (C) 2000\-2007 The MPlayer Team (MPlayer 团队) 所有
.PP
本(英文)手册页主要由 Gabucino, Jonas Jermann 和 Diego Biurrun 编写, 
由 Diego Biurrun 维护。
参于翻译本中文手册页的有: Lu Ran <hephooey AT fastmail.fm>, 
Sheldon Jin <jinsh2 AT yahoo.com> 等。
有关本文的联系请发送邮件到 MPlayer-DOCS 邮件列表。
与翻译相关的邮件属于 MPlayer-translations 邮件列表。
.\" end of file
