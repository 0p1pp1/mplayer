.\" Partial sync with en/mplayer.1 r20445
.\" up to line 2123 (.SH "AUDIO OUTPUT OPTIONS")
.\" Reminder of hard terms which need better/final solution later: 
.\"   /capture; palytree in parent list; colorkey; 
.\"   wrapper script ... shellescapes; keyframe;
.\"   encoding audio rate; \&; alphamap; 
.\" 
.\" MPlayer (C) 2000-2006 MPlayer 团队
.\" 本(英文)手册页由 Gabucino, Diego Biurrun, Jonas Jermann 编写
.
.\" --------------------------------------------------------------------------
.\" 宏定义
.\" --------------------------------------------------------------------------
.
.\" 定义子选项缩进
.nr SS 5
.\" 添加新子选项
.de IPs
.IP "\\$1" \n(SS
..
.\" 一级子选项开始, 结束用 .RE
.de RSs
.RS 10
..
.\" 二级子选项开始
.de RSss
.PD 0
.RS \n(SS+3
..
.\" 二级子选项结束
.de REss
.RE
.PD 1
..
.
.\" --------------------------------------------------------------------------
.\" 名称
.\" --------------------------------------------------------------------------
.
.TH MPlayer 1 "2006-10-15" "MPlayer 项目" "电影播放器"
.
.SH NAME
mplayer  \- 电影播放器
.br
mencoder \- 电影编解码器
.
.\" --------------------------------------------------------------------------
.\" 总览
.\" --------------------------------------------------------------------------
.
.SH "SYNOPSIS (总览)"
.na
.nh
.B mplayer
[选项] [文件|URL|播放列表|\-]
.
.br
.B mplayer
[选项] 文件1
[指定选项] [文件2] [指定选项]
.
.br
.B mplayer
[选项]
{文件和选项组}
[组指定选项]
.
.br
.B mplayer
[dvd|dvdnav]://[标题|[开头标题]\-末尾标题]
[选项]
.
.br
.B mplayer
vcd://轨迹[/设备]
.
.br
.B mplayer
tv://[频道]
[选项]
.
.br
.B mplayer
radio://[频道|频率][/capture]
[选项]
.
.br
.B mplayer
pvr://
[选项]
.
.br
.B mplayer
dvb://[卡号@]频道
[选项]
.
.br
.B mplayer
mf://文件掩码
[\-mf 选项] [选项]
.
.br
.B mplayer
[cdda|cddb]://轨迹[-末轨迹][:速度][/设备]
[选项]
.
.br
.B mplayer
cue://文件[:轨迹]
[选项]
.
.br
.B mplayer
[file|mms[t]|http|http_proxy|rt[s]p|ftp|udp|unsv]://
[用户名:密码@]URL[:端口] [选项]
.
.br
.B mplayer
sdp://文件
[选项]
.
.br
.B mplayer
mpst://主机[:端口]/URL
[选项]
.
.br
.B mplayer
tivo://主机/[list|llist|fsid]
[选项]
.
.br
.B gmplayer
[选项]
[\-skin\ 皮肤]
.
.br
.B mencoder
[选项] 文件
[文件|URL|\-] [\-o 文件]
.
.br
.B mencoder
[选项] 文件1
[指定选项] [文件2] [指定选项]
.ad
.hy
.
.\" --------------------------------------------------------------------------
.\" 描述
.\" --------------------------------------------------------------------------
.
.SH "DESCRIPTION (描述)"
.B mplayer
是一个 LINUX 下的电影播放器 (也能运行在许多其它的平台和 CPU 架构, 请参阅文档)。
通过许多原生的和可执行的编解码器的支持, 它能播放绝大部分的 MPEG/\:VOB, AVI, 
ASF/\:WMA/\:WMV, RM, QT/\:MOV/\:MP4, Ogg/\:OGM, MKV, VIVO, FLI, NuppelVideo, 
yuv4mpeg, FILM 和 RoQ 文件。
你还能观看 VCD, SVCD, DVD, 3ivx, DivX 3/4/5, 甚至 WMV 电影。
.PP
MPlayer 广泛地支持音视频输出驱动。
它不仅可以使用 X11, Xv, DGA, OpenGL, SVGAlib, fbdev, AAlib, libcaca, 
DirectFB, Quartz, Mac OS X CoreVideo, 也能使用 GGI, SDL (及它们的所有驱动),
所有 VESA 兼容显卡上的 VESA (甚至不需要 X11), 某些低级的
显卡相关的驱动 (如 Matrox, 3dfx 及 ATI) 和一些硬件 MPEG 解码器卡, 
比如 Siemens DVB, Hauppauge PVR (IVTV), DXR2 和 DXR3/\:Hollywood+。
它们中绝大多数支持软件或硬件缩放, 所以你可以享受全屏电影。
.PP
MPlayer 具有 OSD(屏上显示) 功能显示状态信息, 有
抗锯齿带阴影的漂亮大字幕和键盘控制的可视反馈。
支持的字体包括欧洲语种/\:ISO8859-1,2 (匈牙利语, 英语, 捷克语等等), 
西里尔语和韩语, 可以播放 12 种格式的字幕文件 (MicroDVD, SubRip, OGM,
SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS 
及我们自己的: MPsub) 和 DVD 字幕 (SPU 流, VOBsub 及隐藏式 CC 字幕)。
.PP
.B mencoder
(MPlayer 的电影编解码器) 是一个简单的电影编解码器, 其设计为将
MPlayer 可播放的电影(见上所述)编码成其他的 MPlayer 可播放格式(见下面)。
其编码成的 MPEG-4 (DivX/XviD), 是 libavcodec 编解码器的一种和
使用 1, 2 或 3-passes 的 PCM/\:MP3/\:VBRMP3 音频。
此外还具有流复制的能力, 拥有强大的(过滤器)插件系统(裁剪,
扩展, 反转, 后处理, 旋转, 拉伸, 降噪声, RGB/\:YUV 转换)等。
.PP
.B gmplayer
是具有图形用户界面的 MPlayer。其选项与 MPlayer 相同。
.PP
本手册页最后有用法示例, 能让你迅速上手。
.PP
.B 也请参阅 HTML 文档!
.
.
.\" --------------------------------------------------------------------------
.\" 交互控制
.\" --------------------------------------------------------------------------
.
.SH "INTERACTIVE CONTROL (交互控制)"
MPlayer 有个完全可配置的, 命令驱动的控制层, 
让你通过键盘, 鼠标, 操纵杆或遥控器(需使用 LIRC)来控制 MPlayer。
参见 \-input 选项定制控制层的方法。
.
.TP
.B 键盘控制
.PD 0
.RS
.IPs "<\- 和 \->"
后退/\:快进 10 秒。
.IPs "up 和 down"
快进/\:后退 1 分。
.IPs "pgup 和 pgdown"
快进/\:后退 10 分。
.IPs "[ 和 ]"
减少/增加当前回放速度 10%。
.IPs "{ 和 }"
减半/加倍当前回放速度。
.IPs "backspace"
重置正常回放速度.
.IPs "< 和 >"
在播放列表中后退/\:快进。
.IPs "ENTER"
在播放列表中快进, 甚至越过末尾。
.IPs "HOME 和 END"
下一个/\:前一个父列表中的播放树项。
.IPs "INS 和 DEL (仅用于 ASX 播放列表)"
下一个/\:前一个供选择的源。
.IPs "p / SPACE"
暂停 (再按取消暂停)。
.IPs ".\ \ \ \ "
步进。
按一下暂停回放, 每按一下就播放一帧(直到按其它键取消步进)。
.IPs "q / ESC"
停止播放和退出。
.IPs "+ 和 -"
调整音频延迟增加/减少 0.1 秒。
.IPs "/ 和 *"
降低/\:提高音量。
.IPs "9 和 0"
降低/\:提高音量。
.IPs "m\ \ \ \ "
静音。
.IPs "# (仅用于 MPEG 和 Matroska)"
循环可用的音轨。
.IPs "f\ \ \ \ "
切换全屏 (也请参见 \-fs)。
.IPs "T\ \ \ \ "
切换顶置 (也请参见 \-ontop)。
.IPs "w 和 e"
降低/\:提高摇移范围。
.IPs "o\ \ \ \ "
循环 OSD 状态: 无 / 搜索条 / 搜索条 + 计时器 / 搜索条 + 计时器 + 总时间。
.IPs "d\ \ \ \ "
循环丢帧状态: 无 / 跳过显示 / 跳过解码。
(请参见 \-framedrop 和 \-hardframedrop)。
.IPs "v\ \ \ \ "
切换显示字幕。
.IPs "b / j"
循环可用的字幕。
.IPs "y 和 g"
在字幕列表中步进/步退。
.IPs "F\ \ \ \ "
切换显示"锁定的字幕"。
.IPs "a\ \ \ \ "
切换对齐字幕: 上 / 中 / 下。
.IPs "x 和 z"
调整字幕延迟增加/减少 0.1 秒。
.IPs "r 和 t"
上/下调整字幕位置。
.IPs "i (仅用于 \-edlout 模式)"
设置 EDL 的开头或末尾并写入指定的文件。
.IPs "s (仅用于 \-vf 截屏)"
截屏。
.IPs "S (仅用于 \-vf 截屏)"
开始/停止截屏。
.IPs "I\ \ \ \ "
用 OSD 显示文件名。
.IPs "! 和 @"
寻到前一章节/后一章节的开始处。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于硬件加速视频输出(xv, (x)vidix, (x)mga, 等), 
软件均衡器(\-vf eq or \-vf eq2), 或者色调过滤器(\-vf hue)。)
.RE
.PP
.PD 0
.RS
.IPs "1 和 2"
调整对比度。
.IPs "3 和 4"
调整亮度。
.IPs "5 和 6"
调整色调。
.IPs "7 和 8"
调整饱和度。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于 quartz or macosx 视频输出驱动。)
.RE
.PP
.PD 0
.RS
.IPs "command + 0"
半尺寸。
.IPs "command + 1"
原始尺寸。
.IPs "command + 2"
双倍尺寸。
.IPs "command + f"
切换全屏 (也请参见 \-fs)。
.IPs "command + [ 和 command + ]"
设置窗口的 alpha。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于 sdl 视频输出驱动。)
.RE
.PP
.PD 0
.RS
.IPs "c\ \ \ \ "
切换可用的全屏模式。
.IPs "n\ \ \ \ "
原始尺寸。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于多媒体键盘。)
.RE
.PP
.PD 0
.RS
.IPs PAUSE
暂停。
.IPs "STOP\ "
停止并退出。
.IPs "PREVIOUS 和 NEXT"
后退/\:快进 1 分。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 GUI 并优先于以前的定义。)
.RE
.PP
.PD 0
.RS
.IPs ENTER
开始播放。
.IPs "ESC\ \ "
停止播放。
.IPs "l\ \ \ \ "
加载文件。
.IPs "t\ \ \ \ "
加载字幕。
.IPs "c\ \ \ \ "
打开皮肤浏览器。
.IPs "p\ \ \ \ "
打开播放列表。
.IPs "r\ \ \ \ "
打开首选项。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 TV 或 DVB 的输入并优先于以前的定义。)
.RE
.PP
.PD 0
.RS
.IPs "h 和 k"
选择上一个/\:下一个频道。
.IPs "n\ \ \ \ "
改变制式。
.IPs "u\ \ \ \ "
改变频道列表。
.RE
.PD 1
.PP
.RS
(以下的按键仅适用于已编译支持 dvdnav: 用于导航菜单)
.RE
.PP
.PD 0
.RS
.IPs "keypad 8"
选择上。
.IPs "keypad 2"
选择下。
.IPs "keypad 4"
选择左。
.IPs "keypad 6"
选择右。
.IPs "keypad 5"
返回主菜单。
.IPs "keypad 7"
返回最近的菜单(先后次序是: 章节->标题->根)。
.IPs "keypad ENTER"
确定。
.RE
.PD 1
.PP
.RS
.
.TP
.B 鼠标控制
.PD 0
.RS
.IPs "button 3 和 button 4"
后退/\:快进 1 分。
.IPs "button 5 和 button 6"
降低/\:提高音量。
.RE
.PD 1
.
.TP
.B 操纵杆
.PD 0
.RS
.IPs "left 和 right"
后退/\:快进 10 秒。
.IPs "up 和 down"
快进/\:后退 1 分。
.IPs "button 1"
暂停。
.IPs "button 2"
循环 OSD 状态: 无 / 搜索条 / 搜索条 + 计时器 / 搜索条 + 计时器 + 总时间。
.IPs "button 3 和 button 4"
降低/\:提高音量。
.RE
.PD 1
.
.
.\" --------------------------------------------------------------------------
.\" 用法
.\" --------------------------------------------------------------------------
.
.SH "USAGE (用法)"
每个 'flag' 选项有个相反的 'noflag' 选项对应, 例如\& 选项\-fs 反的是 \-nofs。
.PP
如果某选项标为: (仅用于 XXX), 就仅适用于与选项 XXX 联合使用或者已编译进 XXX。
.PP
.I 注意:
子选项解析器(例如用于 \-ao pcm 子选项)支持
一种特殊的字符串转义(string-escaping)意欲和外部的 GUI 一起使用。
.br
其格式如下:
.br
%n%string_of_length_n
.br
.I 示例:
.br
mplayer \-ao pcm:file=%10%C:test.wav test.avi
.br
或在脚本中:
.br
mplayer \-ao pcm:file=%`expr length "$NAME"`%"$NAME" test.avi
.PP
.
.\" --------------------------------------------------------------------------
.\" 配置文件
.\" --------------------------------------------------------------------------
.
.SH "CONFIGURATION FILES (配置文件)"
你可以把所有选项放在配置文件中, 每次 MPlayer/MEncoder 运行时都会读取它们。
系统范围的配置文件 'mplayer.conf' 位于你的配置目录
(例如\& /etc/\:mplayer 或者 /usr/\:local/\:etc/\:mplayer)中, 
用户指定的配置文件是 '~/\:.mplayer/\:config'。
MEncoder 的配置文件是 'mencoder.conf' 位于你的配置目录
(例如\& /etc/\:mplayer 或者 /usr/\:local/\:etc/\:mplayer)中, 
用户指定的配置文件是 '~/\:.mplayer/\:mencoder.conf'。
用户指定的选项优先于系统范围的选项, 而命令行选项优先于以上两者。
配置文件的语法是 'option=<值>', 任何 '#' 后面的都认为是注释。
启用没有参数值的选项可以把参数设为 'yes' 或者 '1' 或者 'true', 
而如果要停用就把它们设置为 'no' 或者'0' 或者 'false'。
甚至子选项也可以如此设定选项。
.PP
你也可以为特定文件写配置文件。
如果你希望一个特定文件 'movie.avi' 有个配置文件, 就新建文件, 
名为 'movie.avi.conf', 写上该特定文件的选项并放在目录 ~/.mplayer/ 下。
你也可以把配置文件放在与播放该特定文件时该特定文件相同的目录之下, 
只要你(要么在命令行或者在全局配置文件中)给定 \-use-filedir-conf 选项。
.PP
.I MPLAYER 配置文件示例:
.sp 1
.nf
# 默认使用 Matrox 驱动。
vo=xmga
# 我喜欢在看片子的时候练习倒立。
flip=yes
# 解码/编码多个 PNG 文件,
# 开始于 mf://文件掩码
mf=type=png:fps=25
# 怪异的负片图像好酷。
vf=eq2=1.0:-0.8
.fi
.PP
.I "MENCODER 配置文件示例:"
.sp 1
.nf
# 产生 MEncoder 输出到默认的文件名。
o=encoded.avi
# 下面四行使 mencoder tv:// 立刻开始捕捉。
oac=pcm=yes
ovc=lavc=yes
lavcopts=vcodec=mjpeg
tv=driver=v4l2:input=1:width=768:height=576:device=/dev/video0:audiorate=48000
# 较复杂的默认编码选项设置
lavcopts=vcodec=mpeg4:autoaspect=1
lameopts=aq=2:vbr=4
ovc=lavc=1
oac=lavc=1
passlogfile=pass1stats.log
noautoexpand=1
subfont-autoscale=3
subfont-osd-scale=6
subfont-text-scale=4
subalign=2
subpos=96
spuaa=20
.fi
.
.\" --------------------------------------------------------------------------
.\" 配置轮廓
.\" --------------------------------------------------------------------------
.
.SH "PROFILES (配置轮廓)"
为了方便操作不同的配置文件, 可以在配置文件中定义配置轮廓。
配置轮廓以放在方括号中的名称开始, 如\& '[my-profile]'。
所有跟随的选项成为配置轮廓的一部分。
描述(通过 \-profile help 显示)定义于 profile-desc 选项。
要结束该配置轮廓, 使用别的名称开始即可
或使用配置轮廓名称 'default' 继续正常的选项。
.fi
.PP
.I "MENCODER 配置轮廓示例:"
.sp 1
.nf

[mpeg4]
profile-desc="MPEG4 encoding"
ovc=lacv=yes
lavcopts=vcodec=mpeg4:vbitrate=1200

[mpeg4-hq]
profile-desc="HQ MPEG4 encoding"
profile=mpeg4
lavcopts=mbd=2:trell=yes:v4mv=yes
.fi
.
.\" --------------------------------------------------------------------------
.\" 选项
.\" --------------------------------------------------------------------------
.
.SH "GENERAL OPTIONS (一般选项)"
.
.TP
.B \-codecs-file <文件名> (也请参见 \-afm, \-ac, \-vfm, \-vc)
过载标准的搜索路径并使用指定的文件代替内置的 codecs.conf。
.
.TP
.B \-include <配置文件>
指定配置文件在默认的配置文件后面解析。
.
.TP
.B \-list-options
打印所有可用的选项。
.
.TP
.B \-msgcharset <字符集>
转换控制台消息为指定的字符集(默认是自动侦测: autodetect)。
文字的字符集编码用选项 \-\-charset 指定配置。
设置为 "noconv" 以停用转换 (为了如\& iconv 问题)。
.br
.I 注意:
选项在命令行解析完成后生效。
环境变量 MPLAYER_CHARSET 能帮你去除开头几行混乱的输出。
.
.TP
.B \-msglevel <all=<级别>:<模块>=<级别>:...>
直接对各个模块控制冗赘度。
此 'all' 模块改变所有模块(虽然没有在命令行中显式指定)的冗赘级别。
查看所有模块的列表请参见于 '\-msglevel help'。
.br
.I 注意:
消息是在命令行解析之前打印的, 仅受到能应用于所有模块的
环境变量 MPLAYER_VERBOSE 的控制。
.br
可用级别:
.PD 0
.RSs
.IPs "-1"
完全沉默
.IPs " 0"
仅致命消息
.IPs " 1"
错误消息
.IPs " 2"
警告消息
.IPs " 3"
简短提示
.IPs " 4"
信息消息
.IPs " 5"
状态消息 (隐藏用 \-quiet)
.IPs " 6"
冗赘消息
.IPs " 7"
调试级别 2
.IPs " 8"
调试级别 3
.IPs " 9"
调试级别 4
.RE
.PD 1
.
.TP
.B "\-quiet\ "
使得控制台消息少输出; 特别地, 阻止状态行
(如\& A:   0.7 V:   0.6 A-V:  0.068 ...)的显示。
对慢机器或者不能正确处理回车符(如\& \\r)的旧机器特别有用。
.
.TP
.B \-priority <优先> (仅适用于 Windows)
根据 Windows 下可用的预定义优先级设置 MPlayer 的进程优先级。
可能的 <优先> 值为:
.RSs
idle|belownormal|normal|abovenormal|high|realtime
.RE
.sp 1
.RS
.I 警告:
使用 realtime(实时) 优先级会引起系统锁住。
.RE
.
.TP
.B \-profile <配置轮廓1,配置轮廓2,...>
使用给定的配置轮廓, \-profile help 显示定义的配置轮廓列表。
.
.TP
.B \-really-quiet (也请参见 \-quiet)
显示比 \-quiet 更少的输出和状态信息。
.
.TP
.B \-show-profile <配置轮廓>
显示配置轮廓的描述和内容。
.
.TP
.B \-use-filedir-conf
在文件播放时的相同目录之下寻找该特定文件的配置文件。
.br
.I 警告:
播放未经信任的媒体可能有危险。
.
.TP
.B "\-v\ \ \ \ \ "
提高冗赘级别, 对命令行中发现的各个 \-v 提高一级。
.
.
.
.SH "PLAYER OPTIONS (播放器选项) (仅适用于 MPLAYER)"
.
.TP
.B \-autoq <质量> (和 \-vf [s]pp 一起使用)
依据可用的 CPU 空闲时间动态改变后期处理的级别。
你指定的数字可能是已使用中的最高级别。通常你可以使用有点高的级别数字。
为此你必须使用不带参数的 \-vf [s]pp 选项。
.
.TP
.B \-autosync <因子>
基于音频延迟的检测逐步调整 A/V 同步。
指定 \-autosync 0, 也就是默认值, 将导致帧计时完全基于音频延迟的检测。
指定 \-autosync 1 也是一样, 但会微妙地改变所使用的 A/V 修正算法。
对那些视频帧率不均匀, 但用 \-nosound 可以正常播放的电影, 
设置大于 1 的整数值一般会有所帮助。
这个值越大, 计时方法越接近于 \-nosound。
对于某些音频延迟检测实现不完善的声卡驱动, 试试用 \-autosync\ 30 来平滑此问题。
使用这个值时, 如果出现 A/V 同步大偏移, 只需要 1, 2 秒时间就可以搞定。
对于所有的声卡驱动, 对突然的 A/V 偏移, 在反应时间上有延迟, 
这应该是打开此选项的唯一副作用。
.
.TP
.B \-benchmark
在终端打印一些回放后的 CPU 使用率和丢帧数的统计信息。
与 \-nosound 和 \-vo null 联合使用可用来仅仅评测视频编解码器.
.br
.I 注意:
使用此参数仅仅回放视频时, MPlayer 也将忽略帧持续期(frame duration) 
(你可以认为那是不定帧率)。
.
.TP
.B \-colorkey <号码>
改变 colorkey 为你所选的 RGB 值。
0x000000 是黑色而 0xffffff 是白色。
仅被视频输出驱动 cvidix, fbdev, svga, vesa, winvidix, xmga, xvidix, 
xover, xv (参见 \-vo xv:ck), xvmc (参见 \-vo xv:ck) 和 directx 支持。
.
.TP
.B \-nocolorkey
停用 colorkeying。
仅被视频输出驱动 cvidix, fbdev, svga, vesa, winvidix, xmga, xvidix, 
xover, xv (参见 \-vo xv:ck), xvmc (参见 \-vo xv:ck) 和 directx 支持。
.
.TP
.B \-correct-pts (试验)
切换 mplayer 到试验模式。
视频过滤器决定视频帧的演示时戳而不是视频源。
还不支持大多数过滤器。
.
.TP
.B \-crash-debug (调试代码)
一旦崩溃或 SIGTRAP 自动联上 gdb 调试程序。
此支持必须已编译进配置 \-\-enable-crash-debug。
.
.TP
.B \-edlout <文件名>
新建文件并写入 EDL(编辑决定列表) 记录。
回放时, 用户击 'i' 键标记跳过块的开始结束处。
这提供了用户一个以后能精调 EDL (记录)项的开始点。
详情请参见 http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:edl.html。
.
.TP
.B \-enqueue (仅用于 GUI)
将命令行中给定的文件排入播放列表但不立刻播放。
.
.TP
.B \-fixed-vo
为多个文件锁定一个固定的视频系统 (对所有的文件(反)初始化仅一次)。
这样, 对所有文件只打开一个窗口。
目前 fixed-vo 兼容的驱动有: gl, gl2, mga, svga, x11, xmga, 
xv, xvidix 和 dfbmga。
.
.TP
.B \-framedrop (也请参见 \-hardframedrop)
跳过显示一些帧从而在慢的机器上保持 A/V 同步。
视频滤镜不会应用到这些帧上。对于 B-帧 甚至解码也完全跳过。
.
.TP
.B \-(no)gui
启用或停用 GUI 接口(默认取决于可执行文件名)。
仅能作为命令行第一个参数。不能作为选项写入配置文件。
.
.TP
.B \-h, \-help, \-\-help
显示简短的选项概要。
.
.TP
.B \-hardframedrop
更高强度的丢帧(破坏解码)。导致图像失真!
.
.TP
.B \-identify
是 \-msglevel identify=4 的简式。使用易于分析的格式显示文件参数。
也打印更详细的字幕信息和音轨语言和 ID。
在某些情形下, 你使用 \-msglevel identify=6 能得到更多的信息。
例如, 对于 DVD 能列出每个标题的时长和碟片 ID 号。
wrapper(封套) 脚本 TOOLS/\:midentify 能抑制 MPlayer 的其它输出
并(希望能) shellescapes(脚本转义) 文件名。
.
.TP
.B \-idle (也请参见 \-slave)
当没有文件播放时, 让 MPlayer 空闲等待而不是退出。
一般在 slave 模式时有用, 能通过输入命令控制 MPlayer。
.
.TP
.B \-input <命令>
此选项可以用来配置输入系统的某些部分。路径相对于 ~/.mplayer/。
.br
.I 注意:
自动重复功能目前只有游戏操纵杆支持。
.sp 1
可用的命令有:
.sp 1
.PD 0
.RSs
.IPs conf=<文件名>
指定输入配置文件而不是默认的 ~/\:.mplayer/\:input.conf。
如果没有给出完全路径名, 将假设是 ~/\:.mplayer/\:<文件名>。
.IPs ar-delay
在开始自动重复一个键之前等待多少毫秒 (0 代表停用)。
.IPs ar-rate
自动重复数是每秒重复多少次按键。
.IPs keylist
列出所有可以被绑定于命令的键。
.IPs cmdlist
列出所有可以被绑定于键的命令。
.IPs js-dev
指定使用的操纵杆设备(默认是: /dev/\:input/\:js0)。
.IPs file=<文件名>
从给定文件中读取命令。
一般结合 FIFO 时有用。
.br
.I 注意:
当给定文件是 FIFO 时 MPlayer 打开两个端头, 这样你就可以做
几次 'echo "seek 10" > mp_pipe' 而管道仍保持有效。
.RE
.PD 1
.
.TP
.B \-key-fifo-size <2\-65000>
指定 FIFO 大小供缓冲按键事件(默认: 10)。
n 大小的 FIFO 能容纳 (n-1) 缓冲事件。
如果太小会丢失一些事件
(导致 "stuck mouse buttons (鼠标键卡住)" 或类似效果)。
如果太大, MPlayer 处理缓冲的事件时可能看上去挂住了。
为得到同以前一样的行为效果而引入此选项,
对 Linux 设置为 2 或对 Windows 为 1024。
.
.TP
.B \-lircconf <文件名> (仅适用于 LIRC)
为 LIRC 指定配置文件(默认是: ~/.lircrc)。
.
.TP
.B \-list-properties
打印可用的属性列表。
.
.TP
.B \-loop <数>
重复回放电影 <数> 遍。
0 表示重复不断。
.
.TP
.B \-menu (仅适用于 OSD 菜单)
打开 OSD 菜单支持。.
.
.TP
.B \-menu-cfg <文件名> (仅适用于 OSD 菜单)
使用另外的 menu.conf。
.
.TP
.B \-menu-root <参数值> (仅适用于 OSD 菜单)
指定主菜单。
.
.TP
.B \-menu-startup (仅适用于 OSD 菜单)
在 MPlayer 启动时显示主菜单。
.
.TP
.B \-mouse-movements
允许 MPlayer 接受指针事件来自视频输出驱动(目前仅支持 X11 衍生型)。
必须选择 DVD 菜单中的按钮。
.
.TP
.B \-noconsolecontrols
阻止 MPlayer 读取标准输入的键盘事件。
读取标准输入的数据时有用。命令行中发现 \- 会自动启用。
会遇到不得不手动设置的情形, 比如你
打开 /dev/\:stdin (或者你系统中等价的设备), 在播放列表中使用 stdin 
或者意欲以后通过 slave 命令的 loadfile 或 loadlist 从 stdin 读取。
.
.TP
.B \-nojoystick
关闭支持操纵杆。
.
.TP
.B \-nolirc
关闭支持 LIRC。
.
.TP
.B \-nomouseinput (仅适用于 X11)
停用鼠标键 按/\:放 输入 (mozplayerxp 的上下文菜单依赖此选项)。
.
.TP
.B \-rtc (仅适用 RTC)
打开使用 Linux 的 RTC (实时钟 \- /dev/\:rtc) 作为计时机制。
唤醒过程每 1/1024 秒核查当前时间。
除非现代 Linux 内核配置为桌面应用, 因为当使用正常的定时睡眠时, 
已唤醒相似精度的过程。
.
.TP
.B \-playing-msg <字符串>
开始回放前打印出字符串。
支持以下的扩展:
.RSs
.IPs ${NAME}
扩展为属性 NAME 的值。
.IPs $(NAME:TEXT)
仅当属性 NAME 可用时扩展 TEXT(文字)。
.RE
.
.TP
.B \-playlist <文件名>
根据播放列表播放文件(ASX, Winamp, SMIL, 或者
one-file-per-line(每行一个文件) 格式)。
.br
.I 注意:
此选项作为条目仅应用于播放列表的元素以后, 会找到选项。
.br
FIXME: 需要彻底理清并建立文档。
.
.TP
.B \-rtc-device <设备>
为 RTC 计时使用指定的设备。
.
.TP
.B \-shuffle
以随机顺序播放文件。
.
.TP
.B \-skin <名> (仅用于 GUI)
从默认皮肤目录 
/usr/\:local/\:share/\:mplayer/\:skins/\: 或 ~/.mplayer/\:skins/ 
下的, 作为参数的给定目录中装载皮肤。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-skin fittyfene"
尝试 /usr/\:local/\:share/\:mplayer/\:skins/\:fittyfene
然后是 ~/.mplayer/\:skins/\:fittyfene。
.RE
.PD 1
.
.TP
.B \-slave (也请参见 \-input)
切换到 slave 模式, MPlayer 为其他程序在后台运行。
MPlayer 从标准输入读取以新行 (\\n) 分隔开的命令行, 
而不再截获键盘事件。
.br
.I 注意:
请参见 \-input cmdlist 的命令列表和 DOCS/tech/slave.txt 中的描述。
.
.TP
.B \-softsleep
通过不断核查当前时间来测定帧的时间, 
而不是请求内核在适当的时刻唤醒 MPlayer。
对于内核计时器精度不高且不能使用 RTC 时有用, 代价是较高的 CPU 消耗。
.
.TP
.B \-sstep <数>
每帧后跳过 <数> 秒。
影片的正常帧率仍被保留, 所以回放加速了。
既然 MPlayer 仅能搜寻到下一个 keyframe, 加速过程可能不精准。
.
.
.
.SH "DEMUXER/STREAM OPTIONS (分路器/媒体流选项)"
.
.TP
.B \-a52drc <级别>
选择 AC3 音频流的动态范围压缩(DRC)级别。
<级别> 是 0 到 1 的浮点数, 其中 0 表示无压缩, 
(默认值) 1 表示全压缩 (使得响亮的通路更安静或相反)。
此选项仅当 AC3 流包含所需范围的压缩信息时显示效果。
.
.TP
.B \-aid <标识> (也请参见 \-alang)
选择音频频道 (MPEG: 0\-31, AVI/\:OGM: 1\-99, ASF/\:RM: 0\-127, 
VOB(AC3): 128\-159, VOB(LPCM): 160\-191, MPEG-TS 17\-8190)。
MPlayer 在 verbose (\-v) 模式下会打印可用的音频标识。
当播放 MPEG-TS 流时, MPlayer/\:MEncoder 用第一个程序
播放已选择的(如果有的话)音频流。
.
.TP
.B \-alang <语言代号[,语言代号,...]> (也请参见 \-aid)
指定音频语言的优先使用列表。
不同的容器格式使用不同的语言代号。DVDs 使用 ISO 639-1 的
两字符语言代号, Matroska 和 NUT 使用 ISO 639-2 的
三字符语言代号, 而 OGM 使用自由格式标识符。
MPlayer 在 verbose (\-v) 模式下会打印可用的语言。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "mplayer dvd://1 \-alang hu,en"
选择 DVD 上的匈牙利语音轨播放而英语在没有匈牙利语时备用。
.IPs "mplayer \-alang jpn example.mkv"
播放日语 Matroska 文件。
.RE
.PD 1
.
.TP
.B \-audio-demuxer <[+]名称> (仅用于 \-audiofile)
锁定用于 \-audiofile 的音频分路器类型。
在名称前使用 '+' 锁定类型, 跳过某些核查!
按照 \-audio-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 libmpdemux/\:demuxer.h 的分路器标识。
\-audio-demuxer audio 或 \-audio-demuxer 17 锁定 MP3。
.
.TP
.B \-audiofile <文件名>
在看电影时播放外部音频文件(WAV, MP3 或 Ogg Vorbis)。
.
.TP
.B \-audiofile-cache <千字节>
对 \-audiofile 的文件流启用缓存, 使用指定大小的内存。
.
.TP
.B \-bandwidth <参数值> (仅适用于网络)
指定网络流的最大带宽(用于服务器可以以不同带宽传送内容的情况)。
当你以慢速连接观看现场流媒体时有用。
对于 Real RTSP 流, 也用来设置最大的传送带宽
以容许较快的缓存填充和流转储。
.
.TP
.B \-cache <千字节>
此选项指定用多少内存(以 kBytes 为单位)作为播放文件或 URL 的预缓冲。
对速度慢的媒体特别有用。
.
.TP
.B \-nocache
关闭缓冲。
.
.TP
.B \-cache-min <百分数>
当缓冲填充到总数的 <百分数> 时开始回放。
.
.TP
.B \-cache-seek-min <百分数>
如果查寻到的位置处于从当前位置算起的缓存大小的 <百分数> 之内, 
MPlayer 等待填充缓存到此位置而不是执行流查寻(默认值是: 50)。
.
.TP
.B \-cdda <选项1:选项2> (仅适用于 CDDA)
此选项用来调整 MPlayer 的 CD 音频读取特性。
.sp 1
可用选项有:
.RSs
.IPs speed=<参数值>
设定 CD 转速。
.IPs paranoia=<0\-2>
设定谨慎级别。
0 以外的值可能会打断除了第一个音轨的任何回放。
.RSss
0: 关闭检测 (默认)
.br
1: 只进行重叠检测
.br
2: 完全数据修正和校检
.REss
.IPs generic-dev=<参数值>
使用指定的通用 SCSI 设备。
.IPs sector-size=<参数值>
单位读取量。
.IPs overlap=<参数值>
锁定校检时的最小重叠搜索为 <参数值> 个扇区。
.IPs toc-bias
假定 TOC 报告中第1音轨的起始偏移量为 LBA 0。
有些东芝光驱需要这样来修正音轨边界。
.IPs toc-offset=<参数值>
报告音轨时在扇区数上再加上 <参数值> 个扇区。可能是负数。
.IPs (no)skip
(不)接受不完整的数据重建。
.RE
.
.TP
.B \-cdrom-device <设备路径>
指定 CD-ROM 设备 (默认是: /dev/\:cdrom)。
.
.TP
.B \-channels <数字> (也请参见 \-af channels)
请求播放的声道数 (默认值是: 2)。
MPlayer 要求解码器把音频解码到指定数量的声道。
然后由解码器来实现这个要求。
此选项通常只有在播放带 AC3 音频(比如 DVD)的视频时才显得重要。
在那时默认使用 liba52 解码并把音频正确地混合到需要的声道数。
为了直接控制输出声道数独立于解码声道数, 使用声道过滤器。
.br
.I 注意:
此选项可以被解码器(仅适用于 AC3), 过滤镜(环绕立体声), 和音频
输出驱动(至少 OSS 可以)接受。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs 2
立体声
.IPs 4
环绕立体声
.IPs 6
5.1 立体声
.RE
.PD 1
.
.TP
.B \-chapter <场景标识>[\-<末尾场景标识>] (仅适用于 dvd:// 和 dvdnav://)
指定从哪个场景开始播放。也可以指定在哪个场景结束播放 (默认值为: 1)。
.
.TP
.B \-cookies (仅适用于网络)
HTTP 请求时发送 cookies。
.
.TP
.B \-cookies-file <文件名> (仅适用于网络)
从 <文件名> 中读取 HTTP cookies (默认值是: ~/.mozilla/ 和 ~/.netscape/)
而跳过从默认位置读取。
假定文件是 Netscape 格式。
.
.TP
.B \-delay <数>
音频延迟数秒 (正或负的浮点数)
.br
.I 注意:
当和 MEncoder 一起用时, 并不保证能与 \-ovc copy 一起工作正常; 
请使用 \-audio-delay。
.
.TP
.B \-ignore-start
忽略 AVI 文件中指定的流开始时间。
对于 MPlayer, 用 \-audio-delay 选项编码的文件废除了流延迟。
在编码时期, 此选项防止 MEncoder 转送原流的开始时间到新的文件; 
但是 \-audio-delay 选项并不受影响。
注意 MEncoder 有时会自动调整流开始时间以补偿预期的解码延迟, 
所以没有测试之前不要使用此选项进行编码。
.
.TP
.B \-demuxer <[+]类型名>
锁定分路器类型。
在名称前使用 '+' 锁定类型, 跳过某些核查!
按照 \-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 libmpdemux/\:demuxer.h 的分路器标识。
\-demuxer audio 或 \-demuxer 17 锁定 MP3。
.
.TP
.B \-dumpaudio (仅用于 MPlayer)
转储原始的音频压缩流到 ./stream.dump (用于 MPEG/\:AC3)。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dumpfile <文件名> (仅用于 MPlayer)
指定 MPlayer 应该转储到的文件。
应该与 \-dumpaudio / \-dumpvideo / \-dumpstream 一起使用。
.
.TP
.B \-dumpstream (仅用于 MPlayer)
转储原始流到 ./stream.dump。
从 DVD 或网络上抓取的时候有用。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dumpvideo (仅用于 MPlayer)
转储原始流到 ./stream.dump (不是十分有用)。
如果你在命令行中指定多于其中 \-dumpaudio, \-dumpvideo, \-dumpstream
的一个, 只有最后一个生效。
.
.TP
.B \-dvbin <选项> (仅用于 DVB)
为了过载默认的值, 把下面的参数传递给 DVB 输入模块:
.sp 1
.PD 0
.RSs
.IPs card=<1\-4>
指定使用卡号 1\-4 (默认是: 1).
.IPs file=<文件名>
指示 MPlayer 从频道中读取 <文件名>。
默认是 ~/.mplayer/\:channels.conf.{sat,ter,cbl,atsc} (基于卡的类型)
或者最后于求助 ~/.mplayer/\:channels.conf。
.IPs timeout=<1\-30>
放弃试图调谐的最大等候秒数(默认值是: 30)。
.RE
.PD 1
.
.TP
.B \-dvd\-device <设备路径> (仅用于 DVD)
指定 DVD 设备(默认是: /dev/\:dvd)。
你也可以指定目录, 其中包含以前直接从 DVD 拷贝(比如用 \& vobcopy)的文件。
首先注意使用 \-dumpstream 通常是更好的拷贝 DVD 的方法(请参见示例)。
.
.TP
.B \-dvdangle <视角标识> (仅用于 DVD)
有些 DVD 碟片中的场景可以从多个视角观看。
这里你可以告诉 MPlayer 使用哪个视角(默认值是: 1)。
.
.TP
.B \-edl <文件名>
回放时启用编辑决定列表(EDL)。
根据给定文件的条目视频被跳过, 而音频或静音或不静音。
如何使用详情请参见 http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:edl.html。
.
.TP
.B \-endpos <[[hh:]mm:]ss[.ms]|size[b|kb|mb]> (也请参见 \-ss 和 \-sb)
停止在给定的时间或字节位置。
.br
.I 注意:
字节位置仅为了 MEncoder 而启用但不精确, 因为它只会停在帧的边缘。
当与 \-ss 选项组合使用时, \-endpos 的时间会向前移动 \-ss 指定的秒数。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-endpos 56"
56 秒后停止。
.IPs "\-endpos 01:10:00"
1 小时 10 分后停止。
.IPs "\-ss 10 \-endpos 56"
1 分 6 秒后停止。
.IPs "\-endpos 100mb"
只编码 100 MB。
.RE
.PD 1
.
.TP
.B \-forceidx
强制索引重建。
对索引损坏的文件(A/V 不同步等等)有用。
这使得不可能搜索的文件启用搜索。
你能使用 MEncoder 永久性地修复索引 (请参见文档)。
.br
.I 注意:
此选项仅对原本支持搜索的媒体有效 (如: 没有标准输入, 管道, 等)。
.
.TP
.B \-fps <浮点数>
过载帧速率。
如果原先的值是错误的或缺少的有用。
.
.TP
.B \-frames <参数值>
只播放/\:转换前<参数值>帧, 然后退出。
.
.TP
.B \-hr-mp3-seek (仅用于 MP3)
高精度 MP3 搜索。
播放外部 MP3 文件时启用, 
因为我们需要搜索到非常精确的位置来保持 A/V 同步。
这种方法在后退搜索时尤其慢, 因为需要绕回到开头来寻找准确的帧位置。
.
.TP
.B \-idx (也请参见 \-forceidx)
在没有找到索引的情况下重建文件的索引, 从而允许搜索。
对于损坏的/\:不完整的下载, 或制作低劣的文件有用。
.br
.I 注意:
此选项仅对原本支持搜索的媒体有效 (如 \& 没有标准输入, 管道, 等)。
.
.TP
.B \-ipv4-only-proxy (仅适用于网络)
对于 IPv6 地址跳过代理服务器。
仍然用于 IPv4 连接。
.
.TP
.B \-loadidx <索引文件>
从 \-saveidx 保存的此文件中, 读取视频索引数据。
索引用于搜索, 过载其它任何包含在 AVI 本身的索引。
MPlayer 不阻止你装载产生于不同 AVI 的索引文件, 
但是的确会导致不利的结果。
.br
.I 注意:
既然 MPlayer 现在支持 OpenDML, 此选项已废弃。
.
.TP
.B \-mc <每帧秒数>
每帧的最大 A-V 同步修正(以秒为单位)。
.
.TP
.B \-mf <选项1:选项2:...>
用来从多个 PNG 或 JPEG 文件中解码。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs w=<参数值>
输入文件的宽度 (默认值是: 自动检测)
.IPs h=<参数值>
输入文件的高度 (默认值是: 自动检测)
.IPs fps=<参数值>
输出的帧率 (默认值是: 25)
.IPs type=<参数值>
输入文件的类型 (可用类型是: jpeg, png, tga, sgi)
.RE
.PD 1
.
.TP
.B \-ni (仅用于 AVI)
锁定使用非交错的 AVI 分析器(修复某些质量差的 AVI 文件的播放)。
.
.TP
.B \-nobps (仅用于 AVI)
不使用平均比特率值来维持 A-V 同步。
对某些文件头损坏的 AVI 文件有帮助。
.
.TP
.B \-noextbased
停用基于后缀名的分路器选择机制。
默认情况下, 当文件类型(分路器)无法可靠检测时
(文件没有头部或者不够可靠), 使用文件后缀名来选择分路器。
基于内容的分路器总是可作为备用的。
.
.TP
.B \-passwd <密码> (也请参见\-user 选项) (仅适用于网络)
设置 http 认证密码.
.
.TP
.B \-prefer-ipv4 (仅适用于网络)
使用 IPv4 网络连接。
IPv6 自动地作为备用。
.
.TP
.B \-prefer-ipv6 (仅适用于 IPv6 网络)
使用 IPv6 网络连接。
IPv4 自动地作为备用。
.
.TP
.B \-pvr <选项1:选项2:...> (仅适用于 PVR)
此选项调谐 PVR 捕捉模块的各种编码属性。
不得不与基于硬件 MPEG 编码器 V4L2 驱动支持的卡一起使用。
Hauppauge WinTV PVR\-150/250/350/500 和所有基于 IVTV 的卡
是众所周知的 PVR 捕捉卡。
小心只有 Linux 2.6.18 及以上的内核能通过 V4L2 层处理 MPEG 流。
对于 MPEG 流硬件捕捉卡并使用 MPlayer/MEncoder 来观看电影的, 
使用 'pvr://' 作为 URL 地址。
.sp 1
可用选项有:
.RSs
.IPs aspect=<0\-3>
指定宽高比:
.RSss
0: 1:1
.br
1: 4:3 (默认)
.br
2: 16:9
.br
3: 2.21:1
.REss
.IPs arate=<32000\-48000>
指定编码音频率(encoding audio rate) (默认是: 48000 Hz, 可用的有: 32000, 
44100 和 48000 Hz)。
.IPs alayer=<1\-3>
指定编码 MPEG 音频层 (默认是: 2)。
.IPs abitrate=<32\-448>
指定音频编码比特率(以 kbps 为单位) (默认是: 384)。
.IPs amode=<参数值>
指定音频编码模式。
可用的预设值是 'stereo', 'joint_stereo', 'dual' 和 'mono' (默认是: stereo)。
.IPs vbitrate=<参数值>
指定平均编码视频比特率(以 Mbps 为单位) (默认是: 6)。
.IPs vmode=<参数值>
指定视频编码模式:
.RSss
vbr: Variable BitRate (可变比特率) (默认)
.br
cbr: Constant BitRate (常量比特率)
.REss
.IPs vpeak=<参数值>
指定编码视频比特率峰值(以 Mbps 为单位) 
(只对 VBR 编码有用, 默认是: 9.6)。
.IPs fmt=<参数值>
选择进行编码的 MPEG 格式:
.RSss
ps:    MPEG-2 Program Stream (MPEG-2 程序流) (默认)
.br
ts:    MPEG-2 Transport Stream (MPEG-2 传输流)
.br
mpeg1: MPEG-1 System Stream (MPEG-1 系统流)
.br
vcd:   Video CD compatible stream (VCD 可兼容流)
.br
svcd:  Super Video CD compatible stream (SVCD 可兼容流)
.br
dvd:   DVD compatible stream (DVD 可兼容流)
.REss
.RE
.PD 1
.
.TP
.B \-rawaudio <选项1:选项2:...>
此选项可让你播放原始音频文件。
你也不得不使用 \-demuxer rawaudio。
也可以用来播放不是 44kHz 16-位 立体声的音频 CD。
播放原始 AC3 流请使用 \-rawaudio format=0x2000 \-demuxer rawaudio。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs channels=<参数值>
声道数
.IPs rate=<参数值>
每秒采样率
.IPs samplesize=<参数值>
样本大小(以字节为单位)
.IPs bitrate=<参数值>
原始音频文件的比特率
.IPs format=<参数值>
16-进制的 fourcc
.RE
.PD 1
.
.TP
.B \-rawvideo <选项1:选项2:...>
此选项可让你播放原始视频文件。
你也不得不使用 \-demuxer rawvideo。
.sp 1
可用选项有:
.sp 1
.PD 0
.RSs
.IPs fps=<参数值>
每秒帧(速)率 (默认值是: 25.0)
.IPs sqcif|qcif|cif|4cif|pal|ntsc
设置标准的图像大小
.IPs w=<参数值>
图像宽(以像素为单位)
.IPs h=<参数值>
图像高(以像素为单位)
.IPs i420|yv12|yuy2|y8
设置色彩空间
.IPs format=<参数值>
16-进制的色彩空间(fourcc)
.IPs size=<参数值>
帧大小(以字节为单位)
.REss
.sp 1
.RS
.I 示例:
.RE
.PD 0
.RSs
.IPs "mplayer foreman.qcif -demuxer rawvideo -rawvideo qcif"
播放著名的 "foreman" 视频样本。
.IPs "mplayer sample-720x576.yuv -demuxer rawvideo -rawvideo w=720:h=576"
播放原始 YUV 样本。
.RE
.PD 1
.
.TP
.B \-rtsp-port
与 "rtsp://" 的 URL 地址一起用来锁定客户端的端口号。
如果你在路由器后面, 想把 RTSP 流从服务器转到指定客户端, 此选项可能有用。
.
.TP
.B \-rtsp-destination
与 "rtsp://" 的 URL 地址一起用来强制目标绑定 IP 地址。
对某些 RTSP 服务器不能把 RTP 包送到正确的接口, 此选项可能有用。
如果连接 RTSP 服务器失败, 使用 \-v 看看 MPlayer 试图绑定到
哪个 IP 地址, 然后试试用它强制分配到你的计算机。
.
.TP
.B \-rtsp-stream-over-tcp (仅适用于 LIVE555)
与 "rtsp://" 的 URL 地址一起用来指定让 RTP 和 RTCP 进入包流过 TCP 
(使用与 RTSP 相同的 TCP 连接)。
如果你的破 internet 连接不传递 UDP 进入包, 此选项可能有用 
(参见 http://www.live555.com/\:mplayer/)。
.
.TP
.B \-saveidx <文件名>
强制重建索引并转储到 <文件名>。
目前只对 AVI 文件有效。
.br
.I 注意:
既然 MPlayer 现在支持 OpenDML, 此选项已废弃。
.
.TP
.B \-sb <比特位置> (也请参见 \-ss)
搜索到比特位置。
回放开始部分是垃圾的 CD-ROM 镜像或 VOB 文件时有用。
.
.TP
.B \-speed <0.01\-100>
根据给定的参数因子, 减慢或加快回放速度。
并不保证能与 \-oac copy 一起工作正常。
.
.TP
.B \-srate <Hz>
选择输出的取样率(当然声卡对此有限制)。
如果选择的样本频率与当前的媒体有差异, 会在音频过滤层中插入
音频过滤器 resample(重取样) 或 lavcresample 来补偿此差异。
重取样的类型由 \-af-adv 选项控制。
默认的是快速重取样, 可能会引起失真。
.
.TP
.B \-ss <时间> (也请参见 \-sb)
搜索到给定的时间位置。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-ss 56"
搜索到 56 秒处。
.IPs "\-ss 01:10:00"
搜索到 1 小时 10 分钟处。
.RE
.PD 1
.
.TP
.B \-tskeepbroken
告诉 MPlayer 不要丢弃流中报告损坏的 TS 包。
有时需要播放窜改了的 MPEG-TS 文件。
.
.TP
.B \-tsprobe <字节位置>
播放 MPEG-TS 流时, 此选项让你指定流中多少字节给 MPlayer 搜索
你所要的音频和视频的标识。
.
.TP
.B \-tsprog <1\-65534>
播放 MPEG-TS 流时, 你可以用此选项指定你想运行的程序(如果知道的话)。
能和 \-vid 及 \-aid 一起使用。
.
.TP
.B \-radio <选项1:选项2:...> (仅用于广播)
这些选项设置广播捕捉模块的各种属性。
为了用 MPlayer 收听广播, (如果没有给定频道, )使用 "radio://<频率>"
 或者(如果给定频道, )使用 "radio://<频道号>" 作为 URL 地址。
要启动抓取子系统, 使用 "radio://<频率或频道>/capture"。
如果 capture 关键词没给, 你只可以用 line-in (线路输入) 电缆收听广播。
由于同步问题, 不推荐用 capture 收听, 此过程不舒服。
.sp 1
可用选项有:
.RSs
.IPs device=<参数值>
使用的广播设备 (默认值是: /dev/radio0)。
.IPs driver=<参数值>
使用的广播驱动 (默认值是: v4l2 如果可用, 否则是 v4l)。
目前, 支持 v4l 和 v4l2 驱动。
.IPs volume=<0..100>
广播设备的音量 (默认 100)
.IPs channels=<频率>\-<名称>,<频率>\-<名称>,...
设置频道列表。
名称中使用 _ 代替空格(或使用引号 ;-))。
OSD 会显示频道名称, slave 命令 radio_step_channel 和 radio_set_channel 
会有用于遥控(参见 LIRC)。
如果有列表, URL 中的号会当作频道列表的频道位置。
.br
.I 示例:
radio://1, radio://104.4, radio_set_channel 1
.IPs adevice=<参数值> (配合启用广播 capture)
从中捕捉声音的设备名称。
没有名称的话就会停用 capture, 哪怕 URL 中出现捕捉关键字。
对于 ALSA 设备使用格式 hw=<卡>.<设备>。
如果设备名称包含一个 '=', 此模块就会使用 ALSA 去捕捉, 否则使用 OSS。
.IPs arate=<参数值> (配合启用广播 capture)
每秒采样率 (默认值是: 44100)。
.br
.I 注意:
使用音频捕捉时也请用相同的采样率设置 \-rawaudio rate=<参数值> 选项。
如果声音速度有(太快)问题, 
试试用不同的速度值(如 48000,44100,32000,...)。
.IPs achannels=<参数值> (配合启用广播 capture)
用于捕捉的音频声道数。
.RE
.
.TP
.B \-tv <选项1:选项2:...> (仅用于 TV/\:PVR)
此选项会调谐 TV 捕捉模块的各种属性。
为了用 MPlayer 收看 TV, 使用 "tv://" 或 "tv://<频道号>"
甚至用 "tv://<频道名>" (参见下面的频道选项) 作为 URL 地址。
.sp 1
可用选项有:
.RSs
.IPs noaudio
没有声音
.IPs driver=<参数值>
可用参数: dummy, v4l, bsdbt848
.IPs device=<参数值>
指定 TV 设备 (默认值是: /dev/\:video0）。
.IPs input=<参数值>
指定输入 (默认值是: 0 (TV), 参见控制台输出的可用输入列表）。
.IPs freq=<参数值>
指定调谐器的频率(例如\& 511.250)。
与频道参数不兼容.
.IPs outfmt=<参数值>
指定调谐器的输出格式, 用 V4L 驱动支持的预设置(yv12, rgb32, rgb24, 
rgb16, rgb15, uyvy, yuy2, i420) 或者一个以 16-进制值给定的武断的格式。
试试用 outfmt=help 察看可用的所有格式的列表。
.IPs width=<参数值>
输出窗口的宽度
.IPs height=<参数值>
输出窗口的高度
.IPs fps=<参数值>
捕捉视频的帧速率(帧每秒)
.IPs buffersize=<参数值>
捕捉缓冲区的最大尺寸(以兆为单位) (默认值: 动态)
.IPs norm=<参数值>
bsdbt848 和 v4l 可用的参数: PAL, SECAM, NTSC。对于 v4l2, 
参见控制台输出的所有可用制式列表, 也请参看下面的 normid 选项。
.IPs "normid=<参数值> (仅用于 v4l2)"
设置 TV 制式 为给定的数字标识。
TV 制式取决于捕捉卡。参见控制台输出的可用 TV 制式列表。
.IPs channel=<参数值>
设置调谐器到 <参数值> 频道.
.IPs chanlist=<参数值>
可用参数: europe-east, europe-west, us-bcast, us-cable, 等等
.IPs channels=<频道>\-<名称>,<频道>\-<名称>,...
设置频道的名称。
名称中使用 _ 代替空格(或使用引号 ;-))。
OSD 会显示频道名称, slave 命令 tv_step_channel, tv_set_channel 及 
tv_last_channel 会有用于遥控(参见 LIRC)。
与频率参数不兼容。
.br
.I 注意:
频道号就将是"频道"列表上从1开始计数的位置。
.br
.I 示例:
tv://1, tv://TV1, tv_set_channel 1, tv_set_channel TV1
.IPs [brightness|contrast|hue|saturation]=<-100\-100>
设置显卡的色彩均衡器。
.IPs audiorate=<参数值>
设置音频捕捉比特率。
.IPs forceaudio
即使 v4l 报告没有音频源也捕捉音频。
.IPs "alsa\ "
从 ALSA 捕捉。
.IPs amode=<0\-3>
选择音频模式:
.RSss
0: 单声道
.br
1: 立体声
.br
2: 语言 1
.br
3: 语言 2
.REss
.IPs forcechan=<1\-2>
默认情况下, 音频声道数计数由电视卡查询音频模式自动决定。
此选项允许锁定立体声/\:单声道记录而不管 amode 选项和 v4l 返回的参数。
在电视卡不能报告正确的当前音频模式的时候可以用此选项解决麻烦。
.IPs adevice=<参数值>
设置音频设备。
<参数值> 必须是 /dev/\:xxx 用于 OSS 而硬件标识用于 ALSA。
硬件标识用于 ALSA 时, 你务必要用 '.' 代替 ':'。
.IPs audioid=<参数值>
选择捕捉卡的音频输出, 如果它有不止一个的话。
.IPs "[volume|bass|treble|balance]=<0\-65535> (v4l1)"
.IPs "[volume|bass|treble|balance]=<0\-100> (v4l2)"
这些选项用来设置视频捕捉卡上的混音器参数。
如果你的卡没有混音器, 它们将没有效果。
对于 v4l2 50 根据驱动器的报告影射到控制器上的默认值。
.IPs immediatemode=<布尔值>
参数值为 0 表示同时捕捉和缓冲音频和视频 (MEncoder 的默认值)。
参数值为 1 (MPlayer 的默认值)表示只捕捉视频
而让音频通过环路电缆由电视卡输入声卡。
.IPs mjpeg
使用硬件 MJPEG 压缩(如果芯片支持的话)。
使用此选项时, 你不需要指定输出窗口的宽和高, 
因为 MPlayer 会根据 decimation 参数(见下面)自动确定。
.IPs decimation=<1|2|4>
选择硬件 MJPEG 压缩的图像尺寸:
.RSss
1: 全尺寸
    704x576    PAL
    704x480    NTSC
.br
2: 中等尺寸
    352x288    PAL
    352x240    NTSC
.br
4: 小尺寸
    176x144    PAL
    176x120    NTSC
.REss
.IPs quality=<0\-100>
选择 JPEG 压缩的质量(全尺寸推荐值 < 60)。
.RE
.
.TP
.B \-user <用户名> (也请参见 \-passwd) (仅用于网络)
指定 HTTP 认证的用户名。
.
.TP
.B \-user-agent <字符串>
使用 <字符串> 作为 HTTP 流的用户代理。
.
.TP
.B \-vid <标识>
选择视频频道 (MPG: 0\-15, ASF: 0\-255, MPEG-TS: 17\-8190)。
当播放 MPEG-TS 流时, MPlayer/\:MEncoder 用第一个程序
播放已选择的(如果有的话)视频流。
.
.TP
.B \-vivo <子选项> (调试代码)
锁定 VIVO 分路器的音频参数(用于调试)。
.
.
.
.SH "OSD/SUBTITLE OPTIONS (OSD/字幕选项)"
.I 注意:
也请参见 \-vf expand。
.
.TP
.B \-ass (仅适用于 FreeType)
打开 SSA/ASS 字幕提供。
通过此选项, libass 将用于 SSA/ASS 外部字幕和 Matroska 轨迹。
你可能也想使用 \-embeddedfonts。
.
.TP
.B \-ass-border-color <参数值>
为文字字幕设置边框 (轮廓) 颜色。
颜色格式是 RRGGBBAA。
.
.TP
.B \-ass-bottom-margin <参数值>
在帧底部添加黑带。
SSA/ASS 提供器能在那里放置字幕 (与 \-ass-use-margins 组合用)。
.
.TP
.B \-ass-color <参数值>
为文字字幕设置颜色。
颜色格式是 RRGGBBAA。
.
.TP
.B \-ass-font-scale <参数值>
为 SSA/ASS 提供器中的字体设置比例系数。
.
.TP
.B \-ass-force-style <[Style.]Param=参数值[,...]>
过载一些风格参数。
.sp
.I 示例:
.PD 0
.RSs
\-ass-force-style FontName=Arial,Default.Bold=1
.RE
.PD 1
.
.TP
.B \-ass-line-spacing <参数值>
为 SSA/ASS 提供器设置行间隔。
.
.TP
.B \-ass-styles <文件名>
装载指定文件中找到的所有 SSA/ASS 风格并在提供文字字幕时使用。
文件的语法完全像是 SSA/ASS 中的一节 [V4 Styles] / [V4+ Styles]。
.
.TP
.B \-ass-top-margin <参数值>
在帧顶部添加黑带。
SSA/ASS 提供器能在那里放置字幕 (与 \-ass-use-margins 组合用)。
.
.TP
.B \-(no)ass-use-margins
启用/停用放置字幕(如果有的话)在黑框中 (默认值是: no)。
.
.TP
.B \-dumpjacosub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 JACOsub 字幕格式。
在当前的目录中创建 dumpsub.js 文件。
.
.TP
.B \-dumpmicrodvdsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为 MicroDVD 字幕格式。
在当前的目录中创建 dumpsub.sub 文件。
.
.TP
.B \-dumpmpsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为 MPlayer 的字幕格式, MPsub。
在当前的目录中创建 dumpsub.mpsub 文件。
.
.TP
.B \-dumpsami (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 SAMI 字幕格式。
在当前的目录中创建 dumpsub.smi 文件。
.
.TP
.B \-dumpsrtsub (仅用于 MPlayer)
转换给定的(由 \-sub 选项指定的)字幕成为基于时间的 SubViewer (SRT) 字幕格式。
在当前的目录中创建 dumpsub.srt 文件。
.br
.I 注意:
有些破硬件播放器对 Unix 行结尾的 SRT 字幕会哽住。
如果你够彩碰到这样的盒子, 把你的字幕文件到 unix2dos 或类似的程序过一过, 
替换 Unix 行结尾为 DOS/Windows 行结尾。
.
.TP
.B \-dumpsub (仅用于 MPlayer) (BETA 代码)
从 VOB 流中转储字幕子流。
也请参见 \-dump*sub 和 \-vobsubout* 选项。
.
.TP
.B \-embeddedfonts (仅用于 FreeType)
启用抽取 Matroska 内嵌字体。
这些字体能用于 SSA/ASS 字幕提供 (\-ass 选项)。
.
.TP
.B \-ffactor <数字> (仅用于 OSD)
对字体的 alphamap 重新采样。
可设为:
.PD 0
.RSs
.IPs 0
普通白色字体
.IPs 0.75
非常细的黑色边框(默认值)
.IPs 1
细的黑色边框
.IPs 10
粗的黑色边框
.RE
.PD 1
.
.TP
.B \-flip-hebrew (仅用于 FriBiDi)
打开使用 FriBiDi 的翻转字幕。
.
.TP
.B \-noflip-hebrew-commas
改变 FriBiDi 中假定的字幕中的逗号位置。
如果字幕中的逗号显示在句首而不是在句尾, 就使用它。
.
.TP
.B \-font <文件 font.desc 的路径> (仅用于 OSD)
在别的目录中寻找 OSD/\:SUB 字体(
默认的普通字体为: ~/\:.mplayer/\:font/\:font.desc, 
默认的 FreeType 字体为: ~/.mplayer/\:subfont.ttf)。
.br
.I 注意:
对于 FreeType, 此选项决定文本字体文件的路径。
对于 fontconfig, 此选项决定 fontconfig 的字体名称。
.sp 1
.I 示例:
.PD 0
.RSs
\-font ~/\:.mplayer/\:arial-14/\:font.desc
.br
\-font ~/\:.mplayer/\:arialuni.ttf
.br
\-font 'Bitstream Vera Sans'
.RE
.PD 1
.
.TP
.B \-fontconfig (仅用于 fontconfig)
启用使用 fontconfig 管理的字体。
.
.TP
.B \-forcedsubsonly
仅显示锁定的字幕, 例如由 \-slang 选择的 DVD 字幕流。
.
.TP
.B \-fribidi-charset <字符集名称> (仅用于 FriBiDi)
当编码非 UTF-8 字幕(默认是: ISO8859-8)时, 指定传递到 FriBiDi 的字符集。
.
.TP
.B \-ifo <VOBsub 的 IFO 文件>
指出用于装载 VOBsub 字幕的调色板和帧尺寸的文件。
.
.TP
.B \-noautosub
关闭自动载入字幕文件。
.
.TP
.B \-osd-duration <时间>
设置 OSD 信息的停留时间(以毫秒 ms 为单位) (默认值是: 1000)。
.
.TP
.B \-osdlevel <0\-3> (仅用于 MPlayer)
指定 OSD 的启始模式。
.PD 0
.RSs
.IPs 0
只有字幕
.IPs 1
音量 + 搜索条 (默认)
.IPs 2
音量 + 搜索条 + 计时器 + 百分比
.IPs 3
音量 + 搜索条 + 计时器 + 百分比 + 总时间
.RE
.PD 1
.
.TP
.B \-overlapsub
虽然当前有字幕显示, 允许同时显示下一行字幕(默认启用只支持特定格式)。
.
.TP
.B \-sid <标识> (也请参见 \-slang, \-vobsubid)
显示由 <标识> (0\-31) 指定的字幕流。
MPlayer 运行在 verbose (\-v) 模式时, 打印可用的字幕标识。
如果你不能选择 DVD 中其中之一的字幕, 也请试试 \-vobsubid。
.
.TP
.B \-slang <语言代号[,语言代号,...]> (也请参见 \-sid)
指定字幕语言的优先使用列表。
不同的容器格式使用不同的语言代号。DVDs 使用 ISO 639-1 的
两字符语言代号, Matroska 使用 uses ISO 639-2 的
三字符语言代号, 而 OGM 使用自由格式标识符。
MPlayer 在 verbose (\-v) 模式下会打印可用的语言。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "mplayer dvd://1 \-slang hu,en"
选择 DVD 上的匈牙利语字幕轨迹而英语在没有匈牙利语时备用。
.IPs "mplayer \-slang jpn example.mkv"
播放日语字幕的 Matroska 文件。
.RE
.PD 1
.
.TP
.B \-spuaa <模式> (仅用于 OSD)
设置 DVD/\:VOBsub 的反锯齿/\:缩放模式。
甚至在原始的与缩放的帧尺寸已匹配时, 还可能在 <模式> 上增加 16 以强制进行缩放, 
比如使用高斯模糊来平滑字幕。
可用模式有:
.PD 0
.RSs
.IPs 0
不缩放(最快, 很丑)
.IPs 1
近似缩放(好像坏了?)
.IPs 2
完全缩放(慢)
.IPs 3
二次线性缩放(默认值, 快速而且效果不坏)
.IPs 4
使用软件缩放的高斯模糊(看起来很好)
.RE
.PD 1
.
.TP
.B \-spualign <-1\-2> (仅用于 OSD)
指定 SPU (DVD/\:VOBsub) 字幕该如何对齐。
.PD 0
.RSs
.IPs "-1"
原始位置。
.IPs " 0"
顶部对齐 (原始行为, 默认)。
.IPs " 1"
中央对齐。
.IPs " 2"
底部对齐。
.RE
.PD 1
.
.TP
.B \-spugauss <0.0\-3.0> (仅用于 OSD)
高斯模糊的可变参数用于 \-spuaa 4。
越高表示越模糊 (默认值是: 1.0)。
.
.TP
.B \-sub <字幕文件1,字幕文件2,...>
使用/\:显示指定的字幕文件。
同时只能显示一个文件。
.
.TP
.B \-sub-bg-alpha <0\-255>
指定字幕和 OSD 背景的 alpha 通道值。
值越大代表越透明。但 0 表示完全透明。
.
.TP
.B \-sub-bg-color <0\-255>
指定字幕和 OSD 背景的颜色值。
目前字幕是灰度图像所以这个值相当于颜色的亮度。
255 代表白色 0 代表黑色。
.
.TP
.B \-sub-demuxer <[+]名称> (仅用于 \-subfile) (BETA 代码)
锁定 \-subfile 的字幕分路器类型。
在名称前使用 '+' 锁定类型, 跳过某些核查!
按照 \-demuxer help 打印出来的指定分路器类型。
为了向后兼容, 也接受定义在 libmpdemux/\:demuxer.h 的分路器标识。
.
.TP
.B \-sub-fuzziness <模式>
搜寻字幕时调整匹配模糊度:
.PD 0
.RSs
.IPs 0
精确匹配
.IPs 1
装载所有包含电影名称的字幕。
.IPs 2
装载当前目录的所有字幕。
.RE
.PD 1
.
.TP
.B \-sub-no-text-pp
停用载入字幕后的任何形式的文字后期处理。
用于调试目的。
.
.TP
.B \-subalign <0\-2> (仅用于 OSD)
根据 \-subpos 给定的高度, 指定该对齐哪个字幕边缘。
.PD 0
.RSs
.IPs 0
顶部对齐 (原始行为)。
.IPs 1
中央对齐。
.IPs 2
底部对齐 (默认)。
.RE
.PD 1
.
.TP
.B "\-subcc \ "
显示 DVD 的隐藏式(CC)字幕。
它们
.B 不
是 VOB 字幕, 它们是为听力有障碍的人准备的特殊的 ASCII 字幕,
编码在大多数 DVD 地区码为 1 的 VOB 用户数据流中。
CC 字幕到目前为止还没有在其它地区码的 DVD 中发现。
.
.TP
.B \-subcp <编码页> (仅用于 iconv)
如果你的系统支持 iconv(3), 你可以用此选项来指定字幕的编码页。
.sp 1
.I 示例:
.PD 0
.RSs
\-subcp latin2
.br
\-subcp cp1250
.RE
.PD 1
.
.TP
.B \-subcp enca:<语言>:<备用编码页> (仅用于 ENCA)
你可以使用两字符语言代号指定语言, 让 ENCA 自动检测编码页。
如果不能确定, 随便输入点什么然后察看 mplayer 的 \-v output 中可用的语言。
备用编码页指定自动检测失败时使用的编码页。
.sp 1
.I 示例:
.PD 0
.RSs
.IPs "\-subcp enca:cs:latin2"
猜测编码页, 假定字幕是捷克语, 如果自动检测失败 latin 2 作备用。
.IPs "\-subcp enca:pl:cp1250"
猜测波兰语的编码页, cp1250 作备用。
.RE
.PD 1
.
.TP
.B \-subdelay <数>
字幕延迟 <数> 秒。可以是负数。
.
.TP
.B \-subfile <文件名> (BETA 代码)
目前没有用。
与 \-audiofile 一样, 但用于字幕流(OggDS?)。
.
.TP
.B \-subfont-autoscale <0\-3> (仅用于 FreeType)
设置自动缩放模式。
.br
.I 注意:
0 表示文字和 OSD 的尺度为字体高度(以点 point 为单位的)。
.sp 1
可用模式有:
.sp 1
.PD 0
.RSs
.IPs 0
不自动缩放
.IPs 1
高度成比例
.IPs 2
宽度成比例
.IPs 3
对角线成比例 (默认值)
.RE
.PD 1
.
.TP
.B \-subfont-blur <0\-8> (仅用于 FreeType)
设置字体模糊半径(默认值是: 2)。
.
.TP
.B \-subfont-encoding <参数值> (仅用于 FreeType)
设置字幕编码。
当设为"unicode"时, 字体文件中的所有字模都会被渲染
并使用 unicode 编码(默认值是: unicode)。
.
.TP
.B \-subfont-osd-scale <0\-100> (仅用于 FreeType)
设置 OSD 元素的自动缩放系数(默认值是: 6)。
.
.TP
.B \-subfont-outline <0\-8> (仅用于 FreeType)
设置字体边框的宽度(默认值是: 2)。
.
.TP
.B \-subfont-text-scale <0\-100> (仅用于 FreeType)
设置字幕文本的自动缩放系数(屏幕尺寸的百分比) (默认值是: 5)。
.
.TP
.B \-subfps <速率>
指定字幕文件的帧率(默认值是: 电影的帧率)。
.br
.I 注意:
仅用于基于帧的字幕文件, 比如 MicroDVD 格式。
.
.TP
.B \-subpos <0\-100> (用于 \-vf expand) (仅用于 OSD)
指定字幕在屏幕上显示的位置。
参数值是以屏幕高度的百分比为单位的字幕垂直位置。
.
.TP
.B \-subwidth <10\-100> (仅用于 OSD)
指定字幕在屏幕上显示的最大宽度。
对于电视输出(TV-out)有用。
参数值是以屏幕宽度的百分比为单位的字幕宽度。
.
.TP
.B \-noterm-osd
当没有可用的视频输出时, 停止在控制台上显示 OSD 信息。
.
.TP
.B \-term-osd-esc <转义序列>
指定, 在控制台上显示 OSD 信息之前, 使用的转义序列。
转义序列应该把指针移到 OSD 的行首然后清理(默认值是: ^[[A\\r^[[K)。
.
.TP
.B \-unicode
告诉 MPlayer 把字幕文件作为 unicode 来处理。
.
.TP
.B "\-utf8 \ \ "
告诉 MPlayer 把字幕文件作为 UTF-8 来处理。
.
.TP
.B \-vobsub <无后缀名的 VOBsub 文件名>
指定用于字幕显示的 VOBsub 文件。
不得不是无后缀名的完整路径名, 例如没有".idx", ".ifo" 及 ".sub"。
.
.TP
.B \-vobsubid <0\-31>
指定 VOBsub 字幕标识。
.
.
.
.SH "AUDIO OUTPUT OPTIONS (音频输出选项) (仅适用于 MPLAYER)"
.\" The below is only synced with r9821
.
.TP
.B \-abs <参数> (已被放弃)
替代音频驱动/\:声卡的缓冲区大小检测, 仅用于\-ao oss
.TP
.B \-af <滤镜1[=选项],滤镜2,...>
激活一个逗号分隔的带参数的音频滤镜列表.
.br
可用滤镜有:
.
.RSs
.IPs resample[=srate[:sloppy][:type]]
将音频流的采样率变为整数值srate(Hz). 它只支持16 bit低位在前格式.
.IPs channels[=nch]
将声道变为nch个输出声道. 如果输出声道数比输入声道数多时,
将插入空声道(但在将单声道混合为立体声时, 会把单声道复制到两个输出声道).
如果输出声道数比输入声道数少, 多余的声道会被去掉.
.IPs format[=bps,f]
选择插件层输出格式为f, 样本比特率为bps.
选项bps是一个整数表示每个样本的字节数. 格式f是下面几个字符串的连接:
.br
alaw, mulaw或imaadpcm
.br
float或int
.br
unsigned或signed
.br
le或be(低位或高位在前)
.br
.IPs "volume[=v:sc]"
选择输出音量级别.这个选项是不可重入的, 所以对每个音频流只能使用一次.
.RSss
v: 对流中所有声道的增益, 以dB为单位.
增益可以从-200dB到+40dB(-200dB完全静音completely而+40dB等于放大1000倍).
.br
sc: 启用软修饰.
.REss
.IPs "pan[=n:l01:l02:..l10:l11:l12:...ln0:ln1:ln2:...]"
任意混合声道, 细节参见DOCS/sound.html.
.RSss
n: 输出声道数(1 - 6).
.br
lij: 输出声道i中混合多少输入声道j的成分.
.REss
.IPs "sub[=fc:ch]"
增加副低音声道.
.RSss
fc: 低通滤波器的剪除频率(20Hz to 300Hz)默认值为60Hz.
.br
ch: 副声道的声道号.
.REss
.IPs "surround[=d]"
矩阵编码的环绕音效解码器, 能用于许多2声道文件.
.RSss
d: 以毫秒为单位的后部扬声器的延迟时间(0ms到1000ms), 默认值为15ms.
.REss
.IPs delay[=ch1:ch2:...]
延迟声音的输出. 以百万分之一秒为单位设置每个声道的延迟(0到1000之间的浮点数).
.RE
.
.TP
.B \-af-adv <force=(0\-3):list=(filters)> (参见\-af选项)
设置高级音频滤镜选项:
.
.RSs
.IPs force=<0-3>
将插入音频滤镜的方式指定为下面之一:
.RSss
0: 完全自动插入滤镜(默认)
.br
1: 速度优化
.br
2: 精度优化
.br
3: 关闭自动插入
.REss
.IPs list=<滤镜>
与\-af相同(参见\-af选项).
.RE
.
.TP
.B \-ao <驱动1[:设备],驱动2,...[,]>
设置可用的音频输出驱动的优先级列表(可以加上设备).
\'设备'也用于SDL, 那里它表示子驱动.

.I 注意:
.br
要获得完整的可用驱动列表, 参考\-ao help.
.br
如果列表结尾有一个',' 它将可以使用没有列出的驱动作为后备.

.I 示例
.PD 0
.RSs
.IPs "\-ao oss:/\:dev/\:dsp2,oss:/\:dev/\:dsp1,"
尝试使用指定声音设备的OSS而把其它设置作为后备
.IPs "\-ao sdl:esd"
设置SDL的子驱动
.RE
.PD 1
.
.TP
.B \-aofile <文件名>
用于\-ao pcm的文件.
.TP
.B \-aop <list=插件1,插件2...:选项1=参数1:选项2=参数2...>
设置音频插件和他们的选项(参见文档).
.br
可用选项有:
.
.RSs
.IPs list=[插件]
逗号分隔的插件列表(resample, surround, format, volume,
extrastereo, volnorm)
.IPs delay=<秒>
插件例子, 没有用
.IPs format=<格式>
输出格式(仅用于format插件)
.IPs fout=<Hz>
输出频率(仅用于resample插件)
.IPs volume=<0\-255>
音量(仅用于volume插件)
.IPs mul=<参数>
立体声系数(默认值: 2.5)(仅用于extrastereo插件)
.IPs softclip
使用'软修饰'压缩功能(仅用于volume插件)
.RE
.
.TP
.B \-delay <秒>
以秒为单位延迟音频(可以是+/\:\-浮点值).
.TP
.B \-format <0\-8192>
选择滤镜层使用的输出格式
(依据libao2/afmt.h中的定义):

.PD 0
.RSs
.IPs 1
Mu-Law
.IPs 2
A-Law
.IPs 4
Ima-ADPCM
.IPs 8
Signed 8-bit
.IPs 16
Unsigned 8-bit
.IPs 32
Unsigned 16-bit (低位优先)
.IPs 64
Unsigned 16-bit (高位优先)
.IPs 128
Signed  16-bit (低位优先)
.IPs 256
Signed 16-bit (高位优先)
.IPs 512
MPEG (2)音频
.IPs 1024
AC3
.IPs 4096
Signed 32-bit (低位优先)
.IPs 8192
Signed 32-bit (高位优先)
.RE
.PD 1
.
.TP
.B \-mixer <设备>
这个选项让MPlayer使用/dev/\:mixer之外的设备进行混音.
.TP
.B \-nowaveheader (仅用于-ao pcm)
不包括wave文件头. 用于原始RAW PCM.


.SH "视频输出选项(仅用于MPLAYER)"
.TP
.B \-aa* (仅用于\-vo aa)
你可以运行
.I mplayer \-aahelp
来获得一份可用选项的解释的列表.
.TP
.B \-bpp <深度>
使用与自动检测结果不同的颜色深度.
不是所有\-vo驱动都支持它(fbdev, dga2, svga, vesa).
.
.TP
.B \-brightness <\-100\-100>
调整视频输出的亮度(默认值为0). 它改变视频信号中RGB组份的亮度, 从黑到白.
.TP
.B \-contrast <\-100\-100>
调整视频输出的对比度(默认值为0).
工作方式与brightness差不多.
.TP
.B \-dfbopts <参数> (仅用于\-vo directfb2)
设置directfb驱动的参数列表.
.TP
.B \-display <name>
设置你希望使用的X server的hostname和display number.

.I 示例:
.PD 0
.RSs
\-display xtest.localdomain:0
.RE
.PD 1
.
.TP
.B \-double
启用双缓冲. 通过在内存里储存两帧来解决闪烁问题, 在显示一帧的同时解码另一帧.
会影响OSD. 需要单一缓冲方式两倍的内存. 所以不能用于显存很少的显卡.
.TP
.B \-dr
打开直接渲染功能(不是所有的编解码器和视频输出都支持)(默认为关闭).
警告: 可能导致OSD/\:字幕损坏!
.TP
.B \-dxr2 <选项1:选项2:...>
这个选项用来控制dxr2驱动. 注意: 现在当你播放非MPEG1/2格式时lavc滤镜会自动插入,
所以现在所有MPlayer支持的格式都可以播放(如果你有实时编码所需要的CPU速度).
dxr2的叠加芯片的质量相当差不过默认设置应该可以用于每一个人.
OSD可能可以通过使用colorkey的绘制方法在叠加(不能用于TV)输出中实现.
使用默认的colorkey设定你可能获得各种效果,
一般情况下你可能看到colorkey环绕在字符周围或者其它可笑的效果.
但只要你适当的调节colorkey的设定你应该可以获得可接受的效果.
.
.RSs
.IPs ar-mode=<参数>
长宽比模式(0 = 普通, 1 = pan scan模式, 2 = letterbox模式(默认))
.IPs iec958\-encoded/\:decoded
iec958输出模式
.IPs mute
声音输出静音
.IPs ucode=<参数>
microcode的路径
.RE
.RS

.I TV Out
.RE
.RSs
.IPs 75ire
启用7.5IRE
.IPs bw
黑白电视输出
.IPs color
彩色电视输出
.IPs interlaced
交错电视输出
.IPs macrovision=<参数>
macrovision模式(0 = 关闭(默认值), 1 = agc, 2 = agc 2 colorstripe,
3 = agc 4 colorstripe)
.IPs norm=<参数>
电视制式(ntsc(默认), pal,pal60,palm,paln,palnc)
.IPs square/\:ccir601\-pixel
电视像素模式
.RE
.RS

.I 叠加
.RE
.RSs
.IPs cr-[left|right|top|bot]=<\-20\-20>
调整叠加裁减
.IPs ck-[rgb]min=<0\-255>
color key参数最小值
.IPs ck-[rgb]max=<0\-255>
color key参数最大值
.IPs ck-[rgb]=<0\-255>
color key参数
.IPs ignore\-cache
不使用VGA缓存
.IPs ol-osd
启用叠加模式的osd hack
.IPs ol[hwxy]\-cor=<参数>
调整叠加尺寸和位置, 如果它跟窗口匹配不够完美
.IPs overlay
启用叠加
.IPs overlay-ratio=<1\-2500>
调整叠加模式(默认值为1000)
.IPs update\-cache
重建VGA缓存
.RE
.
.TP
.B \-fb <设备> (仅用于fbdev或者DirectFB)
设置使用的帧缓冲设备.
默认为/dev/\:fb0.
.
.TP
.B \-fbmode <模式名> (仅用于fbdev)
把视频模式设为/etc/\:fb.modes中标记为<模式名>的模式
.

.I 注意:
.br
VESA帧缓冲不支持改变显示模式.
.TP
.B \-fbmodeconfig <文件名> (仅用于fbdev)
使用这个配置文件取代默认的/etc/\:fb.modes. 只对fbdev驱动有效.
.TP
.B \-forcexv (仅用于SDL)
指定使用XVideo.
.TP
.B \-fs
全屏播放(电影显示在中央, 四周填充黑色条边).
用'f'键触发(不是所有的视频输出都支持它).
参见\-zoom.
.TP
.B \-fsmode-dontuse <0-31> (已放弃) (使用\-fs选项)
如果你还有全屏问题试试这个选项.
.TP
.B \-fstype <type1,type2,...>
设置可用的全屏层设置模式的优先级列表.

默认的次序是"layer,stays_on_top,above,fullscreen".
如果设置的模式不正确或不支持会使用后备项.
.br
如果你遇到全屏窗口被别的窗口覆盖的问题试试设置不同的顺序.

.I 注意:
.br
参考\-fstype help列出的全部可用模式的列表.
.TP
.B \-geometry x[%][:y[%]] or [WxH][+x+y]
调整屏幕输出的初始位置.
x和y代表从屏幕右上角到显示图像右上角的距离, 以像素为单位.
不过如果在参数后有百分号记号它将把参数理解为该方向上的屏幕尺寸比例.
它也支持标准的X \-geometry的标准选项格式. 参数必须为整数.

注意: 这个选项只有一个vo支持: xv.

.I 示例:
.PD 0
.RSs
.IPs 50:40
把窗口放在x=50, y=40处
.IPs 50%:50%
把窗口放在屏幕中央
.IPs 100%
把窗口放在屏幕左上角
.IPs 100%:100%
把窗口放在屏幕左下角
.RE
.PD 1
.
.TP
.B \-guiwid <窗口标识>
这告诉GUI也使用一个X11窗口并把自己粘到视频窗口的下方,
在将一个mini-GUI嵌入到浏览器时(比如mplayer插件)有用.
.TP
.B \-hue <\-100\-100>
调整视频信号的色相(默认: 0).
你可以通过这个选项得到负片效果的图像.
.TP
.B \-icelayer <0\-15> (仅用于icewm)
设置icewm下mplayer的全屏窗口层.

.PD 0
.RSs
.IPs 0
Desktop
.IPs 2
Below
.IPs 4
Normal
.IPs 6
OnTop
.IPs 8
Dock
.IPs 10
AboveDock
.IPs 12
Menu (默认)
.RE
.PD 1
.
.TP
.B \-jpeg <选项1:选项2:...> (仅用于\-vo jpeg)
设置JPEG输出的选项.
.br
可用选项有:

.PD 0
.RSs
.IPs [no]progressive
设置标准的或渐进的JPEG.
.IPs [no]baseline
设置是否使用基线.
.IPs optimize=<参数>
优化因子[0-100]
.IPs smooth=<参数>
平滑因子[0-100]
.IPs quality=<参数>
质量因子[0-100]
.IPs outdir=<参数>
保存JPEG文件的目录
.RE
.PD 1
.
.TP
.B \-monitor-dotclock <dotclock\ (or\ pixelclock) range> (仅用于fbdev和vesa)
察看etc/\:example.conf和DOCS/\:video.html来进一步了解信息.
.TP
.B \-monitor-hfreq <水平频率范围> (仅用于fbdev和vesa)
.TP
.B \-monitor-vfreq <垂直频率范围> (仅用于fbdev和vesa)
.TP
.B \-monitoraspect <长宽比>
设置你的显示器或电视屏幕的长宽比, 参见用于电影长宽比的\-aspect选项.

.I 示例:
.PD 0
.RSs
\-monitoraspect 4:3或者1.3333
.br
\-monitoraspect 16:9或者1.7777
.RE
.PD 1
.
.TP
.B \-nograbpointer
VidMode改变(\-vm)后不截获鼠标焦点, 用于多输出头设置.

.TP
.B \-nokeepaspect
缩放X11窗口时不保持窗口的长宽比(只工作于\-vo x11, xv,
xmga和xvidix而且你的窗口管理器必须理解window aspect hints.).

.TP
.B \-noslices
禁用把视频分隔成16像素高的条/\:带绘制的方式, 而是一次绘制整个帧.
可能更快或更慢, 取决于显卡/\:缓存.
它只对libmpeg2和libavcodec编解码器有效.
.TP
.B \-panscan <0.0\-1.0>
启用Pan & Scan功能, 也就是为了在4:3的显示器上显示16:9,
把电影的边缘切掉来获得4:3的, 与屏幕匹配的图像的方法.
这个功能只能用于xv, xmga, mga和xvidix视频输出驱动.
.br
参数用来控制切掉多少图像.
.TP
.B \-rootwin
在根窗口(桌面背景)中播放电影而不是重新打开一个新窗口.
只能用于x11, xv, xmga和xvidix驱动.
.TP
.B \-saturation <\-100\-100>
调整视频输出的饱和度(默认值: 0).
你可以通过这个选项获得灰度输出.
.TP
.B \-screenw <像素> \-screenh <像素>
如果你使用的输出驱动无法获得屏幕分辨率(fbdev/\:x11和/\:或者 TVout)，
你可以在这里设置水平和垂直分辨率.
.TP
.B \-stop-xscreensaver
在启动是关闭xscreensaver在退出时再打开它.
.TP
.B \-vm
尝试改变到更合适的视频模式. dga, x11/\:xv (XF86VidMode)和sdl输出驱动支持.
.TP
.B \-vo <驱动1[:设备],驱动2,...[,]>
设置可用的视频输出驱动的优先级列表(可以加上设备).
\'设备'也用于SDL和GGI, 那里它表示子驱动.

.I 注意:
.br
要获得完整的可用驱动列表, 参考\-vo help.
.br
如果列表结尾有一个',' 它将可以使用没有列出的驱动作为后备.

.I 示例:
.PD 0
.RSs
.IPs "\-vo xmga,xv,"
先尝试Matrox内核驱动, 然后Xv驱动, 然后其它
.br
.IPs "\-vo sdl:aalib"
设置SDL子驱动
.RE
.PD 1
.
.TP
.B \-vsync
启用vesa的VBI支持.
.TP
.B \-wid <窗口标识>
告诉MPlayer使用一个X11窗口, 在把MPlayer嵌入浏览器是有用(比如plugger扩展).
.TP
.B \-xineramascreen <0\-...>
在Xinerama配置时，(就是一个单一桌面展开在多个显示器上)，
这个选项告诉MPlayer把电影显示在哪个屏幕上.
.TP
.B \-z <0\-9>
设置PNG输出的压缩级别(仅用于\-vo png)

.PD 0
.RSs
.IPs 0
不压缩
.IPs 9
最大压缩
.RE
.PD 1
.
.TP
.B \-zrbw (仅用于\-vo zr)
黑白显示(用于优化性能,
这个选项可以跟属于FFmpeg家族的编解码器的'黑白解码'的选项联合使用).
.TP
.B \-zrcrop <[宽]x[高]+[x偏移]+[y偏移]> (仅用于\-vo zr)
选择显示输入图像的一部分, 使用多个这样的选项就启动了cinerama模式.
在cinerama模式下电影分布在多个电视(或投影仪)来创造一个更大的屏幕.
在第n个\-zrcrop后面的选项应用于第n个MJPEG解码卡,
每一个编码卡至少需要有一个\-zrcrop选项加上一个\-zrdev选项.
察看\-zrhelp的输出和文档的Zr部分可以找到示例.
.TP
.B \-zrdev <设备> (仅用于\-vo zr)
设置你的MJPEG编码卡使用的设备文件名, 默认情况下这个驱动将使用它找到的第一个v4l设备.
.TP
.B \-zrfd (仅用于\-vo zr)
指定使用简化取样: 简化取样由\-zrhdec和\-zrvdec设置,
一般只有在硬件缩放能把图像延展到原始尺寸时才使用. 使用这个选项指定使用简化取样.
.TP
.B \-zrhelp (仅用于\-vo zr)
显示所有\-zr*选项列表, 他们的默认值和使用cinerama模式的例子.
.TP
.B \-zrnorm <制式> (仅用于\-vo zr)
设置制式为PAL/\:NTSC, 默认值为'不改变'
.TP
.B \-zrquality <1\-20> (仅用于\-vo zr)
从1到20的数值代表jpeg编码质量. 1的质量最好而20的质量非常差.
.TP
.B \-zrvdec <1,2,4> \-zrhdec <1,2,4> (仅用于\-vo zr)
垂直/\:水平简化取样:
驱动只会把输入图像的每2或4行/\:点发送到MJPEG编码卡,
而使用MJPEG卡的缩放器把图像回复到原有尺寸.
.TP
.B \-zrxdoff <x显示位移>, \-zrydoff <y显示位移> (仅用于\-vo zr)
如果电影比电视屏幕小, 这些选项控制电影相对于屏幕左上角的显示位置.
默认情况下电影放在中央位置.


.SH "解码/滤镜选项"
.TP
.B \-ac <[-]编解码器1,[-]编解码器2,...[,]>
设置可用编解码器的优先级列表, 按照它们在codecs.conf中的编解码器名称.
在名称前加'-'表示忽略该编解码器.

.I 注意:
.br
全部可用编解码器的完整列表参见\-ac help的输出.
.br
如果列表结尾有一个',' 将可以使用没有列出的编解码器作为后备.

.I 示例:
.PD 0
.RSs
.IPs "\-ac mp3acm"
指定使用l3codeca.acm MP3编解码器
.IPs "\-ac mad,"
先尝试libmad, 其它作为后备
.IPs "\-ac hwac3,a52,"
先尝试硬件AC3输出, 然后是软件AC3编解码器, 最后是其它
.IPs "\-ac -ffmp3,"
尝试除了FFmpeg的MP3解码器之外的所有解码器
.RE
.PD 1
.
.TP
.B \-afm <驱动1,驱动2,...>
设置可用的音频驱动优先级列表, 按照它们在codecs.conf中的驱动名称.
当都不可用是使用默认后备驱动.

.I 注意:
.br
全部可用编解码器的完整列表参见\-afm help的输出.

.I 示例:
.PD 0
.RSs
.IPs "\-afm ffmpeg"
先尝试FFmpeg的libavcodec(mp1/\:2/\:3)编解码器
.IPs "\-afm acm,dshow"
先尝试Win32编解码器
.RE
.PD 1
.
.TP
.B \-aspect <比率>
设置电影的长宽比. MPEG文件会自动检测, 但大多数AVI文件不会.

.I 示例:
.PD 0
.RSs
\-aspect 4:3或\-aspect 1.3333
.br
\-aspect 16:9或\-aspect 1.7777
.RE
.PD 1
.
.TP
.B \-flip
上下翻转图像.
.TP
.B \-lavdopts <选项1:选项2:...> (调试代码)
如果使用libavcodec解码, 你可以在这里设置参数.

.I 示例:
.PD 0
.RSs
\-lavdopts bug=1
.RE
.PD 1

.RS
.I 注意:
.br
只要加上你想要启用的项目的参数即可.
.br
可用选项有:
.RE
.
.RSs
.IPs ec
错误隐藏:
.RSss
1: 对损坏的MB使用强柔化马赛克滤镜
.br
2: MV重复搜索(很慢)
.br
3: 所有(默认)
.REss
.IPs er=<参数>
错误恢复:
.RSss
.br
0: 禁用
.br
1: 小心 (用于损坏的编码器)
.br
2: 正常 (默认) (用于正常的编码器)
.br
3: 扩张性的 (更多检查但可能即使对有效比特流也导致问题)
.br
4: 非常扩张性的
.REss
.IPs bug=<参数>
手工绕过编码器bug:
.RSss
0: 无
.br
1: 自动检测bugs (默认)
.br
2 (msmpeg4v3): 由老式lavc生成的msmpeg4v3文件(不自动检测)
.br
4 (mpeg4): xvid交错bug(如果fourcc==XVIX会自动检测)
.br
8 (mpeg4): UMP4(如果fourcc==UMP4会自动检测)
.br
16 (mpeg4): padding bug(自动检测)
.br
32 (mpeg4): 非法vlc bug(每个fourcc都自动检测)
.br
64 (mpeg4): XVID和DIVX qpel的bug(每个fourcc/版本都自动检测)
.br
128 (mpeg4): 老的标准的qpel(每个fourcc/版本都自动检测)
.br
256 (mpeg4): 另一个qpel的bug(每个fourcc/版本都自动检测)
.br
512 (mpeg4): direct-qpel-blocksize的bug(每个fourcc/版本都自动检测)
.br
1024 (mpeg4): edge padding的bug(每个fourcc/版本都自动检测)
.REss
.IPs idct=<0\-99>
(参见lavcopts)
想要最好的解码质量应该在编码和解码时使用相同的idct算法.
不过这可能会牺牲一些精确性.
.IPs gray
只解码灰度图像(比彩色解码快一点)
.RE
.
.TP
.B \-noaspect
禁用电影长宽比自动尝试.
.TP
.B \-nosound
不播放/\:编码声音.
.TP
.B \-pp <质量> (参见\-vf pp选项!)
设置DLL的后期处理级别.
这个选项不能用于MPlayer的后期处理滤镜,
但可以用于有内部后期处理例程的Win32 DirectShow DLL.

\-pp的参数范围依编解码器不同, 大部分为0\-6,
0=禁用 6=最慢/\:最好.
.TP
.B \-pphelp (参见\-vf pp选项)
列出可用后期处理滤镜和他们的使用方法简介.
.TP
.B \-ssf <mode>
设置SwScaler参数.

.I 示例
.PD 0
.RSs
\-vf scale \-ssf lgb=3.0
.RE
.PD 1

.PD 0
.RSs
.IPs lgb=<0\-100>
高斯模糊滤镜(亮度)
.IPs cgb=<0\-100>
高斯模糊滤镜(色度)
.IPs ls=<0\-100>
锐化滤镜(亮度)
.IPs cs=<0\-100>
锐化滤镜(色度)
.IPs chs=<h>
水平色度偏移
.IPs cvs=<v>
垂直色度偏移
.RE
.PD 1
.
.TP
.B \-stereo <模式>
选择MP2/\:MP3立体声输出模式.

.PD 0
.RSs
.IPs 0
立体声
.IPs 1
左声道
.IPs 2
右声道
.RE
.PD 1
.
.TP
.B \-sws <软件缩放类型> (参见\-vf scale选项)
这个选项用来设置\-zoom选项使用的软件缩放的质量(还有速度, 相对的).
用于x11或其它没有硬件加速的视频输出.
可用选项有:

.I 注意:
.br
对于\-sws\ 2和7, 可以用\-vf scale的缩放参数(p)来设置锐化(0(柔化) \- 100(锐化)),
对于\-sws 9, 这个参数设置滤镜长度参数(1 \- 10).

.PD 0
.RSs
.IPs 0
快速二次线性(默认)
.IPs 1
二次线性
.IPs 2
二次立方(质量很好)
.IPs 3
实验中
.IPs 4
最短距离 (bad quality)
.IPs 5
区域
.IPs 6
亮度二次立方/\:色度二次线性
.IPs 7
高斯
.IPs 8
sincR
.IPs 9
lanczos
.IPs 10
双三次样条曲线
.RE
.PD 1
.
.TP
.B \-vc <[-]编解码器1,[-]编解码器2,...[,]>
设置可用编解码器的优先级列表, 按照它们在codecs.conf中的编解码器名称.
在名称前加'-'表示忽略该编解码器.

.I 注意:
.br
全部可用编解码器的完整列表参见\-vc help的输出.
.br
如果列表结尾有一个',' 将可以使用没有列出的编解码器作为后备.

.I 示例:
.PD 0
.RSs
.IPs "\-vc divx"
指定使用Win32/\:VFW DivX编解码器, 没有后备
.IPs "\-vc divx4,"
先尝试divx4linux编解码器, 然后使用后备
.IPs "\-vc -divxds,-divx,"
尝试除了Win32 DivX编解码器之外的编解码器
.IPs "\-vc ffmpeg12,mpeg12,"
尝试libavcodec的MPEG1/\:2编解码器, 然后尝试libmpeg2, 然后其它
.RE
.PD 1
.
.TP
.B \-vf <...,滤镜3[=选项],滤镜2,滤镜1>
激活一个反序排列的逗号分隔的视频插件和它们的参数的列表.

.I 注意:
.br
参数是可选的, 当被省略时, 有些会设为默认值.
使用'-1'保持默认值.
参数w:h标识宽度x高度, 以点为单位, x:y表示相当图像左上角x;y的位置.
.br
全部可用插件的完整列表参见\-vf help的输出.
.br
可用插件有:
.
.RSs
.IPs crop[=w:h:x:y]
切割图像的指定部分其余丢弃. 用于去掉宽银幕电影的黑边.
.RSss
w,h: 切割部分的宽和高, 默认值为原始的宽度和高度.
.br
x,y: 切割部分的位置, 默认值是中央.
.REss
.IPs cropdetect[=0\-255]
计算必要的切割参数并把推荐值显示在标准输出上.
极限值的设置可以从无(0)到所有(255).(默认值: 24)
.IPs rectangle[=w:h:x:y]
在图像的指定坐标出绘制一个指定宽度和高度的矩形(用来实验crop的参数).
.RSss
w,h: 宽度和高度(默认值: -1, 保证边界仍然可见的最大可能宽度).
.br
x,y: 左上角坐标(默认值: -1, 最左最上)
.REss
.IPs
这个插件会响应input.conf中的'change_rectangle'指令, 需要两个参数.
第一个参数可以是0表示w, 1表示h, 2表示x或者3表示y.
第二个参数标识每次改变目标矩形边界的点数.
.IPs expand[=w:h:x:y:o]
把电影的分辨率扩展(不缩放)到指定的值并把原始图像放在坐标x, y处.
可以用获得的黑带显示字幕/\:OSD.
.RSss
w,h: 扩展后的宽度, 高度(默认值: 原始的宽度, 高度)
.br
x,y: 扩展后的图像中原始图像的位置(默认值: 中央)
.br
o:   OSD/字幕渲染
    0: 禁用(默认值)
    1: 启用
.REss
.IPs
w和h的负参数视为相对原始尺寸的偏移,
例如expand=0:-50:0:0在图像底部增加50个像素的边界.
.IPs flip
上下翻转图像.
参见\-flip选项.
.IPs mirror
沿Y轴镜像图像.
.IPs rotate[=<0-7>]
+/\:\- 90度的旋转并翻转(可选)图像.
参数为4-7之间的旋转只有当电影的形状是纵向而不是横向时.
.IPs scale[=w:h[:c[:p]]]
使用软件缩放(很慢)来缩放图像并进行YUV<\->RGB色彩空间转换(参见\-sws参数).
.RSss
w,h: 缩放后的新宽度/\:高度(默认值: 原始的宽度, 高度)
    注意: 如果使用了\-zoom, 而后继的滤镜(包括libvo)不支持缩放,
    那么它的默认值为d_width/\:d_height!
    -1: 原始的width/\:height
    0:  缩放后的d_width/\:d_height
    -2: 用另外尺度和预放大的长宽比计算w/\:h.
    -3: 用另外尺度和原始的长宽比计算w/\:h.
.br
c:   色度抽样
    0: 使用所有可用的输入行的色度
    1: 使用每2个输入行的色度
    2: 使用每4个输入行的色度
    3: 使用每8个输入行的色度
.br
p:  缩放参数(取决于所用的缩放模式)
    对于-sws 2(二次立方)这表示锐化(0 (柔化) - 100 (锐化))
    对于-sws 7(线性)这表示锐化(0(柔化) - 100(锐化))
    对于-sws 9(lanczos)这表示滤镜长度(1 - 10)
0表示(按长宽比)缩放的目标w/\:h. (默认值: 原始w/\:h, 与\-zoom同时使用表示目标w/\:h),
可选用色度采样(c从0到3)和设置缩放参数. (细节参见\-sws选项)
.REss
.IPs yuy2
指定使用YV12/\:I420或422P到YUY2的软件转换.
用于当显卡/\:驱动显示YV12速度慢而YUY2速度快的情况.
.IPs yvu9
指定使用YVU9到YV12的软件转换.
不管软件缩放的设置.
.IPs rgb2bgr[=swap]
RGB 24/\:32 <\-> BGR 24/\:32色彩空间转换.
.RSss
swap: 同时进行R <\-> B互换.
.REss
.IPs palette
使用调色板进行RGB/\:BGR 8 \-> 15/\:16/\:24/\:32bpp色彩空间转换.
.IPs format[=fourcc]
限制下一个插件使用的色彩空间而不进行任何转换.
与scale插件一起用于一次真实转换.
.RSss
fourcc: 类似rgb15, bgr24, yv12等等的格式(默认值: yuy2)
.REss
.IPs pp[=滤镜1[:选项1[:选项2...]]/[-]滤镜...] (参见\-pphelp)
这个选项开启MPlayer的内部后期处理滤镜的使用,
同时提供一个你可以向有名字的滤镜传送选项的接口.
可用滤镜的列表参见\-pphelp的输出.
.br
注意每一个子滤镜都必须用一个/\:记号分隔.
.br
所有滤镜默认作用于'c'(色度).
.br
\-前缀表示禁用该选项.
.br
在选项后面可以加上一个':'和一个字母表示它的作用范围:
.RSss
a: 如果CPU太慢则自动关闭滤镜.
.br
c: 同时进行色度处理.
.br
y: 不进行色度处理(只进行亮度处理).
.REss

.RS
.I 示例:
.RE
.RSss
.br
\-vf pp=hb/vb/dr/al/lb
.br
\-vf pp=hb/vb/dr/al
.br
使用除了亮度/\:对比度修正之外的默认滤镜:
.br
\-vf pp=de/\-al
.br
使用默认滤镜和时间噪音消除:
.br
\-vf pp=de/tn:1:2:3
.br
仅对亮度柔化马赛克并根据CPU可用时间打开或关闭垂直柔化马赛克:
.br
\-vf pp=hb:y/vb:a \-autoq 6
.REss
.IPs test
产生各种设置样式.
.IPs lavc[=quality:fps]
用于DVB/\:DXR3的通过libavcodec进行YV12到MPEG1的快速转换.
比\-vf=fame速度更快质量更好.
.RSss
quality:
    1 \- 31 固定qscale
    32 \-   固定比特率, 以kBits为单位
.br
fps: 指定输出帧速率(浮点数) (默认值: 0, 基于高度的自动检测)
.REss
.IPs fame
用于DVB/\:DXR3的YV12到MPEG1的快速转换.
.IPs dvbscale[=aspect]
使用DVB卡的最佳缩放, X轴以硬件缩放而Y轴用软件缩放以保持长宽比.
.RSss
aspect: 控制长宽比, 按DVB_HEIGHT*ASPECTRATIO计算(默认值:
576*4/3=768), 对于16:9的电视把它设置为576*(16/9)=1024.
.REss
.IPs
只应该与expand+scale一起使用:
\-vf lavc,expand=-1:576:-1:-1:1,scale=-1:0,dvbscale
.IPs "noise[=亮度[u][t|a][h][p]:色度[u][t|a][h][p]]"
增加噪音.
.RSss
<0\-100>: 亮度噪音
.br
<0\-100>: 色度噪音
.br
u: 均衡噪音 (否则使用高斯算法)
.br
t: 时间噪音 (噪音样式随帧改变)
.br
a: 平均随机噪音 (更平滑, 有点慢)
.br
h: 高质量 (看起来稍为好些, 有点慢)
.br
p: 在一个(半)规则样式中混入随机噪音
.REss
.IPs "denoise3d[=亮度:色度:时间]"
这个滤镜的目标是降低图像噪音生成平滑图像并让静止图像真正静止,
(这有利于压缩).
它可以加0到3个参数. 如果你省略一个参数, 将猜测一个合理的值.
.RSss
亮度:	空间亮度浓度 (默认值 = 4)
.br
chroma:	空间色度浓度 (默认值 = 3)
.br
time:	时间强度 (默认值 = 6)
.REss
.IPs "hqdn3d[=luma:chroma:time]"
高精度/\:质量的denoise3d滤镜. 参数和使用方法相同.
.IPs eq[=亮度:对比度]
像硬件均衡器一样可以交互控制的软件均衡器,
用于不支持硬件亮度对比度控制的显卡/\:驱动.
也可以用于MEncoder, 修复捕捉质量差的电影,
或者略微降低对比度来掩盖加工痕迹或获得较低的比特率.
初始值可以由命令行给出, 范围在-100 \- 100之间.
.IPs eq2[=gamma:对比度:亮度:色相:rg:gg:bg]
另一个使用查表的软件均衡器(非常慢), 在简单的亮度,
对比度和色相调整之外还支持gamma修正.
注意当所有gamma值都为1.0时, 它使用与\-vf eq一样的MMX优化代码.
参数以浮点值给定.
参数rg, gg, bg是红, 绿, 兰组份的独立gamma值.
默认值为1.0, 亮度=0.0.
gamma的取值范围是0.1\-10, 对比度是-2\-2(负数产生负片效果),
亮度是-1\-1而色度为0\-3.
.IPs halfpack[=f]
把4:2:0的planar YUV转换为4:2:2高度减半的packed格式,
降低亮度采样率但保持所有色度样本.
用于输出到硬件缩放质量差或不可用的低分辨率显示设备.
也可以作为一个cpu消耗很低的简单的仅用于亮度的交错/\:逐行扫描转换器.
默认情况下, halfpack在降低采样率的时候去两行的平均值.
可选的参数f可以是0表示只使用偶数行, 或者1表示只使用奇数行.
.IPs dint[=sense:level]
检测并丢弃视频流中的隔行扫描的帧.
参数取值范围从0.0到1.0 - 第一个(默认值 0.1)表示相邻点的相对差别,
第二个(默认值 0.15)表示检测图像的哪一部分来决定是否把帧作为隔行扫描丢弃.
.IPs lavcdeint
使用libavcodec的隔行/\:逐行扫描转换滤镜.
.IPs "unsharp=l|cWxH:amount[:l|cWxH:amount]"
反锐化掩饰/\:高斯模糊.
.RSss
l: 应用到亮度组份.
.br
c: 应用到色度组份.
.br
WxH: 矩阵的宽度和高度, 两个方向都必须是奇数
(最小 = 3x3, 最大 = 13x11或者11x13, 一般在3x3到7x7之间)
.br
amount: 加到图像上的锐化/\:模糊的相对量
(正常范围应该是-1.5 \- 1.5).
    <0: 模糊
    >0: 锐化
.REss
.IPs swapuv
交换U & V平面.
.IPs "il=[d|i][s][:[d|i][s]]"
交错/\:逐行转换.
这个滤镜的目标是分区处理交错图像而不进行逐行转换.
你可以用它处理你的交错图像的DVD, 不必交错图像就可以在电视上播放它.
当逐行处理(用后期处理滤镜)会永久破坏交错图像(用平滑, 平均等等),
逐行处理会把帧分成两块(成为半图像),
所以你需要分别进行(处理)他们然后把它们重新交错.
.RSss
d: 逐行
.br
i: 隔行
.br
s: 交换域(交换偶数&奇数行)
.REss
.IPs "field[=n]"
使用步进算法解压交错图像中的单独域从而避免浪费CPU时间.
可选参数n设置解压偶数域还是奇数域(取决于n是偶数还是奇数).
.IPs "detc[=变量1=参数1:变量2=参数2:...]"
尝试反转"telecine"过程生成一个电影帧速率的干净的非交错的视频流.
这个滤镜还在试验阶段但似乎可用.
你必须明白如果你看电影的时候没有交错现象, 这个滤镜绝对没有用.
下面的参数(参考上面的语法)可以用来控制它的行为:
.RSss
dr: 设置掉帧模式. 0(默认)表示不掉帧以保持固定的输出帧速率.
1表示总是如果前5帧没有掉帧或telecine合并就掉1帧.
2表示总是保持准确的5:4的输入输出帧比率. (注意: MEncoder使用1!)
.br
am: 分析模式. 可用参数有0(使用fr=#设置的初始帧数的固定样式),
和1(扩张性搜索telecine样式).默认值为1.
.br
fr: 设置初始帧数序列. 0-2是三个干净的渐进帧;
3和4是两个交错帧. 默认值, -1, 表示"不在telecine序列中".
这里设置的数字是假想的电影开始前的帧数.
.br
tr0, tr1, tr2, tr3: 特定模式的初始值.
.REss
.IPs "telecine[=开始]"
使用3:2的"telecine"过程增加帧速率20%.
mplayer的这个功能应该不能正常工作,
不过它可以用于'mencoder -fps 29.97 -ofps 29.97 -vf telecine'.
两个fps选项都是必需的!
(如果错误将导致A/V不同步). 可选的开始参数告诉滤镜telecine格式从哪里开始(0-3).
.IPs "tfields[=模式]"
临时域分离 -- 把域分成帧, 输出帧速率加倍.
0模式时, 滤镜保持域不变, 输出结果高度减半.
1模式时, 图像的交错部分将被改写重新构成完整高度的帧.
跟telecine滤镜一样, "tfields"只有用mencoder,
并且只有-fps和-ofps都设置成需要的(加倍)的帧速率时才能正常工作!
.IPs "boxblur=半径:强度[:半径:强度]"
盒子模糊
.RSss
半径: 滤镜大小
.br
强度: 滤镜应用的强度
.REss
.IPs "sab=半径:强度:色差[:半径:强度:色差]"
外形识别模糊
.RSss
半径: 模糊滤镜强度(~0.1\-4.0)(越大越慢)
.br
强度: 预过滤强度(~0.1\-2.0)
.br
色差: 可以容忍的像素差别.(~0.1-100.0)
.REss
.IPs "smartblur=半径:强度:阀值[:半径:强度:阀值]"
只能模糊
.RSss
半径: 模糊滤镜强度(~0.1\-5.0)(越大越慢)
.br
强度: 模糊(0.0\-1.0)或锐化(-1.0\-0.0)
.br
阀值: 过滤全部(0), 过滤单调区域(0\-30)或过滤边界(-30\-0)
.REss
.IPs "perspective=x0:y0:x1:y1:x2:y2:x3:y3:t"
形状修正
.RSss
x0,y0,...: 左上, 右上, 左下, 右下坐标
.br
t: 线性(0)或立方(1)重新采样
.REss
.IPs 2xsai
使用双倍放大插入算符放大并平滑图像.
.IPs 1bpp
1bpp位图到YUV/BGR 8/15/16/32转换
.IPs down3dright[=行数]
重新配置缩放立体图像.
解压两个立体域并把它们放在一起, 重新缩放以维持原始电影长宽比.
.RSss
行数: 从图像中部选择的行数(默认值: 12)
.REss
.IPs "bmovl=隐藏:不透明:<命名管道>"
从一个命名管道读取位图并把它们显示在窗口中.
.
.RSss
隐藏: 设置'隐藏'标记的默认值(布尔值)
.br
不透明: 切换alphablended(透明)和不透明(快速)模式标记
.br
命名管道: 命名管道的路径/文件名(连接mplayer -vf bmovl和控制程序的命名管道)
.REss

.RS
命名管道命令有:
.RE
.RSss
RGBA32 width height xpos ypos alpha clear
.br
接受width*height*4字节的原始RGBA32数据

ABGR32 width height xpos ypos alpha clear
.br
接受width*height*4字节的原始ABGR32 data.

RGB24 width height xpos ypos alpha clear
.br
接受width*height*3字节的原始RGB32 data.

BGR24 width height xpos ypos alpha clear
.br
接受width*height*3字节的原始BGR32 data.

ALPHA width height xpos ypos alpha
.br
改变区域的alpha值

CLEAR width height xpos ypos
.br
清除数据

OPAQUE
.br
禁用所有alpha透明
发送"ALPHA 0 0 0 0 0"可以重新打开它.

HIDE
.br
隐藏位图

SHOW
.br
显示位图
.REss

.RS
参数有:
.RE
.RSss
width, height: 图像/\:区域尺寸
.br
xpos, ypos: 位图传送的X/Y位置
.br
alpha: 设置alpha差别.
0标识原始值, 255使所有都不透明, -255使所有都透明.
如果你把它设为-255, 你可以随后发送一个ALPHA命令序列吧区域设置为-225,
-200, -175等等来获得一个漂亮的淡入效果! ;)
.br
clear: 传送前清楚帧缓冲.
1表示清除, 如果是0, 图像会被传送到老图像上,
所以你不需要每次为屏幕小部分的变化都发送1,8MB的RGBA32数据.
.REss
.RE
.
.TP
.B \-vfm <驱动1,驱动2,...>
设置可用的视频驱动优先级列表, 按照它们在codecs.conf中的驱动名称.
当都不可用是使用默认后备驱动.

.I 注意:
.br
如果编译了libdivxdecore支持,则odivx和divx4会包含同一个DivX4编解码器,
但用不同的API调用它. 他们的区别和什么情况下应该使用哪一个,
参考文档的DivX4部分.
.br
全部可用编解码器的完整列表参见\-vfm help的输出.

.I 示例:
.PD 0
.RSs
.IPs "\-vfm ffmpeg,dshow,vfw"
先尝试libavcodec, 然后是Directshow, 然后是VFW,
如果都不行就使用其它后备编解码器.
.IPs "\-vfm xanim"
先尝试XAnim编解码器
.RE
.PD 1
.
.TP
.B \-x <x> (仅用于MPLAYER)
把图像缩放到宽度x(如果软件/\:硬件缩放可用).
禁用长宽比计算.
.TP
.B \-xvidopts <选项1:选项2:...>
设置使用XviD解码时的附加参数.

.PD 0
.RSs
.IPs dr2
激活直接渲染模式2.
.IPs nodr2
关闭直接渲染模式2.
.RE
.PD 1
.
.TP
.B \-xy <x>
.PD 0
.RSs
.IPs "x<=8"
按因子<x>缩放图像.
.IPs "x>8\ "
把图像宽度设为<x>并计算图像高度以保持长宽比.
.RE
.PD 1
.
.TP
.B \-y <y> (仅用于MPLAYER)
把图像缩放到高度y(如果软件/\:硬件缩放可用).
禁用长宽比计算
.
.TP
.B \-zoom
在可能的情况下使用软件缩放.
可以用来指定\-vf scale进行缩放.

.I 注意:
.br
如果没有\-zoom选项\-vf scale将忽略\-x / \-y / \-xy / \-fs / \-aspect等选项.


.SH "编码选项 (仅用于MENCODER)"
.TP
.B \-audio-density <1\-50>
每秒的音频块数(默认是两个0.5秒的长音频块).

.I 注意:
.br
仅用于CBR, VBR将忽略它因为它把每个包放在一个新块中.
.TP
.B \-audio-delay <0.0\-...>
设置文件头中的音频延迟域. 默认值为0.0, 负数不能正常工作.
这不是在编码的时候延迟音频, 而是播放器会把它作为默认的音频延迟,
你可以不必用\-delay选项.
.TP
.B \-audio-preload <0.0\-2.0>
设置音频缓冲间隔(默认值: 0.5秒).
.TP
.B \-divx4opts <选项1:选项2:...>
当用DivX4编码时, 你可以由此设置参数.
.br
可用选项有:
.
.RSs
.IPs help
获得帮助
.IPs br=<参数>
设置比特率以
.RSss
kbit<4\-16000>或者
.br
bit<16001\-24000000>为单位
.REss
.IPs key=<参数>
最大关键帧间隔(以帧为单位)
.IPs deinterlace
启用逐行扫描(别用它, DivX4很buggy)
.IPs q=<1\-5>
质量(1\-最快, 5\-最好)
.IPs min_quant=<1\-31>
最小量化值
.IPs max_quant=<1\-31>
最大量化值
.IPs rc_period=<参数>
速率控制周期
.IPs rc_reaction_period=<参数>
速率控制反应周期
.IPs rc_reaction_ratio=<参数>
速率控制反应率
.IPs crispness=<0\-100>
设置生硬/\:平滑
.IPs pass=<1\-2>
用这个选项你可以编码2 pass的DivX4文件.
先用pass=1编码, 然后以同样的参数, 用pass=2编码.
.IPs vbrpass=<0\-2>
代替pass参数并使用XviD VBR代替DivX4 VBR.
可用选项有:
.
.RSss
0: 1 pass编码编码(相当于命令行中间没有pass的情况)
.br
1: 分析2 pass编码的(第一次)pass. 产生的AVI文件可以导入到/dev/null.
.br
2: 2 pass编码的最终(第二次)pass.
.REss
.RE
.
.TP
.B \-endpos <[[时:]分:]秒[.毫秒]|大小[b|kb|mb]> (参见\-ss和\-sb选项)
在给定时间或者字节位置结束编码.
可以用很多方式设置:

.I NOTE:
.br
字节位置是不精确的, 因为它只能停在一个帧上.

.I 示例:
.PD 0
.RSs
.IPs "\-endpos 56"
在56秒时结束
.IPs "\-endpos 01:10:00"
只编码1小时10分钟
.IPs "\-endpos 100mb"
只编码100MBytes
.RE
.PD 1
.
.TP
.B \-ffourcc <fourcc>
可以用来替代输出文件的视频fourcc.

.I 示例:
.PD 0
.RSs
.IPs "-ffourcc div3"
将输出文件的视频fourcc设置为'div3'.
.RE
.PD 1
.
.TP
.B \-include <配置文件>
设置默认配置文件之外的附加设置文件.
.TP
.B \-info <选项1:选项2:...> (仅用于AVI)
设置输出AVI文件的文件信息头.
.br
可用选项有:
.
.RSs
.IPs help
显示以下信息
.IPs name=<参数>
设置文件内容的标题
.IPs artist=<参数>
文件原始内容的作者或艺术家
.IPs genre=<参数>
原始作品分类
.IPs subject=<参数>
文件内容
.IPs copyright=<参数>
文件版权信息
.IPs srcform=<参数>
被数字化的素材的原始形式
.IPs comment=<参数>
对于文件或文件内容的评论
.RE
.
.TP
.B \-lameopts <选项1:选项2:...>
如果使用libmp3lame编码为MP3, 你可以由此设置它的参数.
.br
可用选项有:
.
.RSs
.IPs help
获得帮助
.IPs vbr=<0\-4>
可变比特率方式
.RSss
0: cbr
.br
1: mt
.br
2: rh (默认)
.br
3: abr
.br
4: mtrh
.REss
.IPs abr
平均比特率
.IPs cbr
常比特率.
.br
也会在后继ABR预置模式中强制使用CBR模式
.IPs br=<0\-1024>
以kBit为单位设置比特率(仅用于CBR和ABR)
.IPs q=<0\-9>
质量(0-最高, 9-最低) (仅用于VBR)
.IPs aq=<0\-9>
算法质量(0\-最好/\:最慢, 9\-最差/\:最快)
.IPs ratio=<1\-100>
压缩率
.IPs vol=<0\-10>
设置音频输入增益
.IPs mode=<0\-3>
(默认值: 自动)
.RSss
0: 立体声
.br
1: 联合立体声
.br
2: 双声道
.br
3: 单声道
.REss
.IPs padding=<0\-2>
.RSss
0: 无
.br
1: 所有
.br
2: 调整
.REss
.IPs fast
启用更快的后继VBR预置编码模式, 质量稍低而比特率提高.
.IPs preset=<参数>
预设参数
.RSss
medium: VBR编码, 质量好, 150\-180 kbps的比特率范围.
.br
standard: VBR编码, 质量高, 170\-210 kbps的比特率范围.
.br
extreme: VBR编码, 质量非常高, 200\-240 kbps的比特率范围.
.br
insane: CBR编码, 质量最高, 320 的比特率范围.
.br
<8-320>: 将所给参数作为平均比特率的ABR编码.
.br
.REss
.RE

.I 示例:
.PD 0
.RSs
.IPs "\-lameopts fast:preset=standard"
用于大多数人和大多数音乐, 质量已经相当高了.
.IPs "\-lameopts  cbr:preset=192"
用指定的192 kbps常比特率的ABR预置模式编码.
.IPs "\-lameopts      preset=172"
用172 kbps平均比特率的ABR预置模式编码.
.IPs "\-lameopts      preset=extreme"
用于有绝好听力和同样好的配置的人.
.IPs "\-lameopts preset=help"
显示预置设置的附加选项等信息.
.RE
.PD 1
.
.TP
.B \-lavcopts <选项1:选项2:...>
如果使用libavcodec编码, 你可以由此设置它的参数.

.I 示例:
.PD 0
.RSs
\-lavcopts vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
.RE
.PD 1

.RS
可用选项有:
.RE
.
.RSs
.IPs vcodec=<参数>
设置使用的编解码器(没有默认值, 你必须设置它):
.RSss
mjpeg: Motion JPEG
.br
h263: H263
.br
h263p: H263 Plus
.br
mpeg4: DivX 4/\:5
.br
msmpeg4: DivX 3
.br
msmpeg4v2: MS MPEG4v2
.br
wmv1: Windows Media Video 7
.br
wmv2: Windows Media Video 8
.br
rv10: 一个老的RealVideo编解码器
.br
mpeg1video: MPEG1视频:)
.br
huffyuv: HuffYUV
.REss
.IPs vqmin=<1\-31>
最小量化值(pass\ 1/\:2)
.RSss
1: 不推荐(文件大很多, 质量没什么区别而且奇怪的副作用: msmpeg4,
h263质量很低, 拒绝速率控制结果质量更低而且有些解码器不能解码).
.br
2: 推荐用于一般的mpeg4/mpeg1视频编码(默认值).
.br
3: 推荐用于h263(p)/msmpeg4. 选择3而不是2的理由是2会导致溢出,
(对于h263(p)将来可以通过改变每MB的量化值来修正,
msmpeg4没法修正因为它不支持这个)
.REss
.IPs vqscale=<1\-31>
常量化值/\:常质量编码(选择固定量化值模式).
较低值表示更好的质量但更大的文件(默认值: 0(禁用)).
不推荐使用1(细节参见\-vqmin).
.IPs vqmax=<1\-31>
最大量化值(pass\ 1/\:2), 10\-31的范围比较合理(默认值: 31)
.IPs mbqmin=<1\-31>
最小宏块量化值(pass\ 1/\:2)(默认值: 2)
.IPs mbqmax=<1\-31>
最大宏块量化值(pass\ 1/\:2)(默认值: 31)
.IPs vqdiff=<1\-31>
I或P帧的最大量化差值(pass\ 1/\:2)(默认值: 3)
.IPs vmax_b_frames=<0\-4>
非B帧之间的最大B帧数:
.RSss
0: 无B帧(默认值)
.br
0\-2: MPEG4的合理范围
.REss
.IPs vme=<0\-5>
运动判断模式:
.RSss
0: none(非常低的质量)
.br
1: full(很慢)
.br
2: log(低质量)
.br
3: phods(低质量)
.br
4: EPZS(默认)
.br
5: X1(试验)
注意: 0\-3忽略Bits消耗量, 所以质量可能降低.
.REss
.IPs vhq
高质量模式, 把每个宏块用所有模式编码并选择其中最好的.
这很慢但得到的文件质量和文件大小都更好.(默认值: 禁用)
.IPs v4mv
允许没有宏块4个运动矢量(质量略有提高).(默认值: 禁用)
.IPs keyint=<0\-300>
关键帧的最大间距, 以帧为单位. 搜索需要关键帧因为只有关键帧可以被搜索,
但是关键帧比其它帧需要更多空间. 所以较大的参数产生较少的文件,
但搜索不够精确, 0表示没有关键帧.
不推荐大于300的参数因为效果可能不好, 取决于解码器, 编码器和运气.
如果要严格遵循的MPEG1/\:2/\:4这个值应该小于等于132.
(默认值: 250或在25fps的电影中每10秒一个关键帧)
.IPs vb_strategy=<0\-1>
选择I/\:P/\:B帧的策略(pass\ 2):
.RSss
0: 总使用最大数量的B帧(默认值)
.br
1: 在高速运动的场景中避免B帧(将导致比特率误测)
.REss
.IPs vpass=<1\-2>
激活内部2 pass模式, 只有当你希望使用2 pass编码时使用(默认值: 禁用).
.RSss
1: 第一次pass
.br
2: 第二次pass
.REss
.IPs
技巧: 对1 pass尝试使用常量化值模式(vqscale=<量化值>).
.br
huffyuv:
.RSss
pass 1保存统计信息
.br
pass 2使用基于pass 1统计的优化霍夫曼表编码.
.REss
.IPs aspect=<x/y>
内部保存电影长宽比, 像MPEG文件一样.
比重新缩放效果好的多, 因为质量没有损失.
只有MPlayer可以正确播放这些文件, 其它播放器会显示错误的长宽比.
aspect的参数可以以分数或浮点数形式给出.
示例:
.RSss
aspect=16/9, aspect=1.78
.REss
.IPs vbitrate=<参数>
设置比特率(pass\ 1/\:2)以
.RSss
kBit<4\-16000>或者
.br
Bit<16001\-24000000>
.br
(警告: 1kBit = 1000 Bits)
.br
(默认值: 800)
.REss
.IPs vratetol=<参数>
以kBit为单位的可容忍的近似文件大小. 1000\-100000是比较合理的范围.
(警告: 1kBit = 1000 Bits)
(默认值: 8000)
.IPs vrc_maxrate=<参数>
最大比特率, 以kbit/\:sec为单位(pass\ 1/\:2)
.IPs vrc_minrate=<参数>
最小比特率, 以kbit/\:sec为单位(pass\ 1/\:2)
.IPs vrc_buf_size=<参数>
缓冲大小, 以kbit为单位(pass\ 1/\:2).
注意: vratetol在第二次pass的时候不能太大否则使用vrc_(min|max)rate会有问题.
.IPs vb_qfactor=<-31.0\-31.0>
B帧和非B帧之间的量化因子(pass\ 1/\:2)(默认值: 1.25)
.IPs vi_qfactor=<-31.0\-31.0>
(pass\ 1/\:2)(默认值: 0.8)
.IPs vb_qoffset=<-31.0\-31.0>
B帧和非B帧之间的量化偏移(pass\ 1/\:2)(默认值: 1.25)
.IPs vi_qoffset=<-31.0\-31.0>
(pass\ 1/\:2)(默认值: 0.0)
.br
如果v{b|i}_qfactor > 0
.br
I/\:B帧量化值 = P帧量化值 * v{b|i}_qfactor + v{b|i}_qoffset
.br
否则
.br
进行正常的流控制(不固定于下一个P帧的量化值),
设置q= -q * v{b|i}_qfactor + v{b|i}_qoffset
.IPs
技巧: 对I/P和B帧使用不同的量化值的常量化编码可以使用:
vqmin=<ip_quant>:vqmax=<ip_quant>:vb_qfactor=<b_quant/ip_quant>
.IPs vqblur=<0.0\-1.0>
量化模糊(pass\ 1), 值越大量化对时间平均越大(变化缓慢).
.RSss
0.0: 禁用qblur
.br
0.5 (默认值)
.br
1.0: 对所有以前帧量化值平均
.REss
.IPs vqblur=<0.0\-99.0>
量化高斯模糊(pass\ 2), 值越大量化对时间平均越大(变化缓慢)(默认值: 0.5)
.IPs vqcomp=<参数>
量化压缩, 取决于vrc_eq(pass\ 1/\:2)(默认值: 0.5)
.IPs vrc_eq=<方程>
速率控制主方程(pass\ 1/\:2):

1: 常比特率
.br
tex: 常质量
.br
1+(tex/\:avgTex-1)*qComp: 老速率控制的近似方程
code
.br
tex^qComp: 使用qcomp 0.5或类似的东西(默认值)

插入算符: +,-,*,/,^

变量:
.br
tex:             材质复杂度
.br
iTex,pTex:       内部, 非内部的材质复杂度
.br
avgTex:          平均材质复杂度
.br
avgIITex:        I帧的平均内部复制度
.br
avgPITex:        P帧的平均内部复制度
.br
avgPPTex:        P帧的平均非内部复制度
.br
avgBPTex:        B帧的平均非内部复制度
.br
mv:              用于运动矢量的比特值
.br
fCode:           以log2为标度运动矢量的最大长度
.br
iCount:          内部宏块数/\:宏块数
.br
var:             空间复杂度
.br
mcVar:           时间复杂度
.br
qComp:           从命令行读取的qcomp
.br
isI, isP, isB:   如果帧是I/\:P/\:B帧为1, 否则为0
.br
Pi,E:            看你最喜欢的数学书

functions:
.br
max(a,b),min(a,b): 最大值/\:最小值
.br
gt(a,b): 如果a>b为1, 否则为0
.br
lt(a,b): 如果a<b为1, 否则为0
.br
eq(a,b): 如果a==b为1, 否则为0
.br
sin, cos, tan, sinh, cosh, tanh, exp, log, abs
.
.IPs vrc_override=<选项>
设置特定部分的质量(结尾, 致谢, ..)(pass\ 1/\:2).
选项格式为<开始帧>, <结束帧>, <质量>[/\:<开始帧>,
<结束帧>, <质量>[/...]]:
.RSss
quality 2\-31: 量化值
.br
quality \-500\-0: 质量修正百分比
.REss
.IPs vrc_init_cplx=<0\-1000>
初始复杂度(pass\ 1)
.IPs vqsquish=<0,1>
设置如何在qmin和qmax之间保持量化值(pass\ 1/\:2):
.RSss
0: 使用削波
.br
1: 使用精细的可微函数(默认值)
.REss
.IPs vlelim=<-1000\-1000>
亮度的单参数剪除阀值. 负值将同时考虑dc参数(quant=1编码时至少为-4或更低):
.RSss
0: 禁用(默认值)
.br
-4 (JVT推荐)
.REss
.IPs vcelim=<-1000\-1000>
色度的单参数剪除阀值. 负值将同时考虑dc参数(quant=1编码时至少为-4或更低):
.RSss
0 禁用(默认值)
.br
7 (JVT推荐)
.REss
.IPs vstrict=<-1,0,1>
严格遵循标准
.RSss
0: 禁用(默认值)
.br
1: 当你想把输出用于mpeg4推荐的解码器时推荐
.br
-1: 运行非标准的YV12 huffyuv编码(文件减小20%,
但不能被官方的huffyuv编解码器播放)
.REss
.IPs vdpart
数据分区.
每个视频包增加2字节, 改进当通过不可信赖的通道传输时的错误抵御能力,
(比如通过internet的流媒体)
每个视频包将分成3个独立区域编码:
.RSss
1. MVs             (=运动)
.br
2. DC coefficients (=低分辨率图像)
.br
3. AC coefficients (=细节)
.REss
.IPs
MV和DC是最重要的, 放宽他们看起来远比放宽AC效果差,
而1&2分区(MV&DC)远比3分区(AC)小,
所以错误破坏AC分区的机会比破坏MV&DC分区的机会大很多. 因此,
分区的图像比没有分区的图像看起来好的多,
因为不分区时一个错误会把AC/DC/MV都毁掉.
.IPs vpsize=<0\-10000>
视频包大小, 提高错误抵御能力(参考\-vdpart选项):
.RSss
0: 禁用(默认值)
.br
100-1000: 不错的选择
.REss
.IPs gray
只编码灰度图像(更快)(默认值: 禁用)
.IPs vfdct=<0\-10>
dct算法:
.RSss
0: 自动选择最好的(默认值)
.br
1: 快速整数
.br
2: 精确整数
.br
3: mmx
.br
4: mlib
.REss
.IPs idct=<0\-99>
idct算法:
注意: 据我们所了解的最新消息这些IDCT确实通过了IEEE1180
tests.
.RSss
0: 自动选择最好的(默认值)
.br
1: jpeg参考整数
.br
2: 简单
.br
3: 简单mmx
.br
4: libmpeg2mmx (不精确, 不要用于keyint >100的编码)
.br
5: ps2
.br
6: mlib
.br
7: arm
.REss
.IPs lumi_mask=<0.0\-1.0>
亮度掩饰.
警告: 小心, 过大的值会导致破坏图像.
警告2: 较大的值可能在有些显示器上看起来不错但在别的显示器上看着很恐怖:
.RSss
0.0: 禁用(默认值)
.br
0.0\-0.3: 合理范围
.REss
.IPs dark_mask=<0.0\-1.0>
黑暗掩饰.
警告: 小心, 过大的值会导致破坏图像.
警告2: 较大的值可能在有些显示器上看起来不错但在别的显示器/\:电视/\:液晶上看着很恐怖:
.RSss
0.0: 禁用(默认值)
.br
0.0\-0.3: 合理范围
.REss
.IPs tcplx_mask=<0.0\-1.0>
时间复杂度掩饰(默认值: 0.0(禁用))
.IPs scplx_mask=<0.0\-1.0>
空间复杂度掩饰.
如果解码时没有去马赛克滤镜, 较大的值会有帮助.
技巧: 完全切掉所有黑边因为他们降低宏块的质量, (不用scplx_mask也应该这么做).
.RSss
0.0: 禁用(默认值)
.br
0.0\-0.5: 合理范围
.REss
.IPs naq
适应量化正则话(试验).
当使用适应量化(*_mask)时, 平均每MB的量化值跟要求的帧水平的量化值不一致..
Naq尝试调整每MB的量化值来保持适当的平均.
.IPs ildct
使用交错dct
.IPs format=<参数>
.RSss
YV12: 默认值
.br
422P: 用于huffyuv
.REss
.IPs pred
(用于huffyuv)
.RSss
0: 左预测
.br
1: 平面/\:梯度预测
.br
2: 中值预测
.REss
.IPs qpel
使用四分之一像素运动补偿
技巧: 这只有高比特率编码时有用.
.IPs precmp=<0\-2000>
用于每个pass的运动估计比较函数
.IPs cmp=<0\-2000>
全点运动估计的比较函数
.IPs subcmp=<0\-2000>
副点运动估计的比较函数
.RSss
0 (SAD): 绝对差值求和, 很快(默认值)
.br
1 (SSE): 方差和
.br
2 (SATD): hadamard位移绝对值求和
.br
3 (DCT): dct位移绝对值求和
.br
4 (PSNR): 量化方差求和(别用, 低质量)
.br
5 (BIT): 块需要的比特数
.br
6 (RD): 最佳变形率, 很慢
.br
7 (ZERO): 0
.br
+256: 也应用到色度, 目前不能(正确)用于B帧
.REss
.IPs predia=<\-99\-6>
每个pass用于运动估计的菱形的类型和尺寸
.IPs dia=<\-99\-6>
用于运动估计的菱形的类型和尺寸.
注意: 普通菱形和外形检测菱形的大小的意义是不同的
.RSss
\-3: 大小为3的外形检测(快速)菱形
.br
\-2: 大小为2的外形检测(快速)菱形
.br
\-1: 试验
.br
 1: 大小为1的普通菱形(默认值) =EPZS类菱形
.nf
.ne
      0
     000
      0
.fi
.br
 2: 大小为2的普通菱形
.nf
.ne
      0
     000
    00000
     000
      0
.fi
.REss
.IPs trell
Trellis量化.
这种方法对每个8x8的块寻找合适的编码方法.
Trellis量化在PSNR vs 比特率方面是一个相当简单的优化量化方法,
(假设IDCT没有引入舍入错误, 但显然不是这样),
他简单的对每个块寻找最小的error和lambda*bits.
.RSss
lambda: qp倚赖常数
.br
bits: 每个块需要的比特数
.br
error: 量化的方差和
.REss
.IPs last_pred=<0\-99>
基于上一帧的运动预报数
.RSss
0: (默认值)
.br
a: 将使用2a+1 x 2a+1的宏块进行基于上一帧的运动矢量预报
.REss
.IPs preme=<0\-2>
每pass的运动估计
.RSss
0: 禁用
.br
1: 仅在I帧之后(默认值)
.br
2: 始终
.REss
.IPs subq=<1\-8>
副点质量精细化(用于qpel)(默认值: 8).
注意: 这对速度有显著影响.
.IPs psnr
编码后显示整个视频的psnr(信号峰值与噪音的比率),
并把每帧的psnr储存在一个类似'psnr_012345.log'的文件里.
返回值以dB(分贝)为单位, 越高越好.
.IPs mpeg_quant
使用MPEG量化而不是H.263.
(默认值: 禁用)(就是使用H.263量化)
.IPs aic
高级内部预报(仅用于H.263+)
注意: vqmin必须为8或者更大.
.IPs umv
无限MV(仅用于H.263+)
允许编码任意长度的MV.
.IPs ibias=<\-256\-256>
内部量化乖离率 (256 == 1.0)
.br
mpeg量化默认值: 96
.br
h263量化默认值: 0
.br
注意: h263 MMX量化不能处理正的乖离率(设置vfdct=1或2)
      mpeg MMX量化不能处理负的乖离率(设置vfdct=1或2)
.IPs pbias=<\-256\-256>
相互量化乖离率 (256 == 1.0)
.br
mpeg量化默认值: 0
.br
h263量化默认值: -64
.br
注意: h263 MMX量化不能处理正的乖离率(设置vfdct=1或2)
      mpeg MMX量化不能处理负的乖离率(设置vfdct=1或2)
.RE
.
.TP
.B \-noskip
不跳帧.
.TP
.B \-o <文件名>
输出为给定文件名, 而不是默认的'test.avi'.
.TP
.B \-oac <编解码器名>
使用给定的音频编解码器编码.
可用编解码器的列表参见\-oac help的输出.
(没有默认设置)

.I 示例:
.PD 0
.RSs
.IPs "-oac copy"
不编码, 只进行流复制
.IPs "-oac pcm"
编码为未压缩的PCM
.IPs "-oac mp3lame"
编码为MP3(使用Lame)
.RE
.PD 1
.
.TP
.B \-of <格式> (BETA代码!)
编码到设置的格式.
可用格式的列表参见\-of help的输出.

.I 示例:
.PD 0
.RSs
.IPs "-of avi"
编码为avi(默认值)
.IPs "-of mpeg"
编码为mpeg
.RE
.PD 1
.
.TP
.B \-ofps <帧速率>
输出文件将使用跟源不同的帧速率. 对于可变帧速率(asf,
有些mov)或渐进(29.97fps的telecined mpeg)的文件必须设置帧速率.
.TP
.B \-ovc <编解码器>
使用给定的视频编解码器编码.
可用编解码器的列表参见\-ovc help的输出.
(没有默认设置)

.I 示例:
.PD 0
.RSs
.IPs "\-ovc copy"
不编码, 只进行流复制
.IPs "\-ovc divx4"
编码为DivX4/\:DivX5
.IPs "\-ovc rawrgb"
编码为未压缩的RGB24
.IPs "\-ovc lavc"
使用一个libavcodec编解码器编码
.RE
.PD 1
.
.TP
.B \-passlogfile <文件名>
用2 pass模式编码时,
MEncoder把第一次pass的信息复制到指定文件中而不是默认的divx2pass.log.
.TP
.B \-skiplimit <参数>
在一个帧后可跳的最大帧数(用\-noskiplimit设置不限数).
.TP
.B \-v, \-\-verbose
增加冗余级别(\-v越多标识冗余越多).

.PD 0
.RSs
.IPs 0
只有一些信息输出(默认值)
.IPs 1
一些基本的调试信息, avi文件头, 函数值(初始化调试)
.IPs 2
显示avi索引, 块输入, 更多调试信息(播放器调试)
.IPs 3
显示输入分析器的所有信息(分析器调试)
.RE
.PD 1
.
.TP
.B \-vobsubout <基本名>
设置输出的.idx和.sub文件的基本名.
这会关闭编码电影的字幕渲染而把它导入到Vobsub字幕文件中.
.TP
.B \-vobsuboutindex <索引>
设置输出文件中字幕的索引号. (默认值: 0)
.TP
.B \-vobsuboutid <语言标识>
设置字幕的两字母语言标识. 这可以替代DVD或.ifo文件中读取的值.
.TP
.B \-xvidencopts <选项1:选项2:...>
如果使用XviD编码, 你可以由此设置它的参数.
.br
有三种可用模式: 常比特率(CBR), 固定量化和2 pass.
.br
可用选项有:
.
.RSs
.IPs pass=<1|2>
设置2 pass模式中的pass
.IPs bitrate=<参数>
如果<16000以kbits/\:second为单位设置比特率,
或者以bits/\:second为单位如果>16000
(CBR或者2 pass模式, 默认值=687 kbits/s)
.IPs fixed_quant=<1\-31>
切换到固定量化模式并设置使用的量化值
.IPs me_quality=<0\-6>
设置运动检测质量(默认值=6)
IPs interlacing
启用交错内容支持(默认值=off)
.IPs 4mv
每个宏块使用4运动矢量, 可能有更好的压缩率, 代价是更慢的编码速度(默认值=off)
.IPs rc_reaction_delay_factor=<参数>
设置速率反应多快, 参数值越小更快
.IPs rc_averaging_period=<参数>
达到要求平均值的周期
.IPs rc_buffer=<参数>
速率控制缓冲区的大小
.IPs quant_range=<1\-31>\-<1\-31>[/<1\-31>\-<1\-31>]
所有帧的最小和最大的量化值(默认值=2\-31, CBR模式)
.br
I/P帧的最小和最大的量化值(默认值=2\-31/2\-31, 2 pass模式)
.IPs min_key_interval=<参数>
关键帧之间的最小间距(默认值=0, 仅用于2 pass模式)
.IPs max_key_interval=<参数>
关键帧之间的最大间距(默认值=10*帧速率)
.IPs mpeg_quant
使用MPEG量化而不是H.263(默认值=off)
.IPs mod_quant
一帧一帧的决定使用MPEG还是H.263量化.
(默认值=off, 仅用于2 pass模式)
.IPs greyscale
黑白编码(默认值=off)
.IPs debug
在xvid.dbg中保存每一帧的统计值(默认值=off)
.br
这不是2 pass的控制文件
.IPs keyframe_boost=<0\-1000>
(默认值=0, 仅用于2 pass模式)
.IPs kfthreshold=<参数>
(默认值=10, 仅用于2 pass模式)
.IPs kfreduction=<0\-100>
(默认值=30, 仅用于2 pass模式)
.RE

.RSs
下面的选项仅能用于不稳定(cvs -HEAD)版本的XviD.
这些选项是试验性的并且不一定会想料想的那样工作.
.IPs packed
创建可以即时解码的比特流(默认值=off)
.br
.I 警告:
这会产生一个非法的比特流,
而且不能被除了divx/libavcodec/xvid之外的ISO-MPEG4解码器解码.
.br
.I 警告:
这还会在文件中储存一个假的divx版本号, 所以有些解码器的bug自动检测功能可能会混乱.
.IPs divx5bvop
产生DivX5兼容的B帧 (默认值=on)
.IPs qpel
启用四分之一像素运动估计(默认值=off)
.IPs gmc
启用全角运动补偿, 可以节省一些摇晃场景的大小(默认值=off)
.IPs chroma_me
使用色度信息来估计运动(默认值=off)
.IPs chroma_opt
启用色度优化预滤镜(默认值=off)
.IPs reduced
启用降低帧分辨率的编码方式(默认值=off)
.IPs max_bframes=<0\-4>
I/P帧之间的最大B帧数(默认值=0)
.IPs bquant_ratio=<0\-1000>
B帧和非B帧之间的量化值比, 150=1.50 (默认值=150)
.IPs bquant_offset=<-1000\-1000>
B帧和非B帧之间的量化偏移, 100=1.00 (默认值=100)
.IPs hq_ac
启用更好的AC部分预测, 能减小尺寸但会稍稍降低编码速度(默认值=off)
.IPs vhq=<0\-4>
启用基于DCT的更高质量的ME搜索, 由快到慢:

.br
0 = 关闭(默认值)
.br
1 = 模式决定(相互/内部MB)
.br
2 = 限制搜索
.br
3 = 中度搜索
.br
4 = 大范围搜索
.IPs psnr
编码后显示整个视频的psnr(信号峰值与噪音的比率),
并把每帧的psnr储存在一个类似'psnr_hhmmss.log'的文件里.
返回值以dB(分贝)为单位, 越高越好.
.RE


.\" --------------------------------------------------------------------------
.\" Keyboard control
.\" --------------------------------------------------------------------------
.
.SH "键盘控制"
.I 注意:
.br
MPlayer有一个完全可配置的，命令驱动的控制层使你可以键盘,
鼠标，游戏杆或遥控器(使用LIRC)控制MPlayer.
.br
输入系统的默认配置文件是~/.mplayer/\:input.conf,
但可以用\-input conf选项来替代.
.br
这些键可能(不)工作, 取决于你的视频输出驱动.
.TP
.B 一般控制
.PD 0
.RSs
.IPs "<\- 和 \->"
后退/\:前进10秒
.IPs "up 和 down"
后退/\:前进1分钟
.IPs "pgup和pgdown"
后退/\:前进10分钟
.IPs "< 和 >"
在播放列表中前进/\:后退
.IPs "HOME 和 END"
跳转到上级播放列表中的下一个/\:上一个播放项
.IPs "INS 和 DEL"
跳转到下一个/\:上一个供选择的源(仅用于asx播放列表)
.IPs "p / SPACE"
暂停电影(按任意键继续)
.IPs "q / ESC"
停止播放并退出
.IPs "+ 和 \-"
调整音频延迟+/\:\- 0.1秒
.IPs "/ 和 *"
降低/\:升高音量
.IPs "9 and 0"
降低/\:升高音量
.IPs m
静音
.IPs f
触发全屏
.IPs "w 和 e"
降低/\:升高panscan范围
.IPs o
触发不同OSD状态: 无/\:搜索/\:搜索+计时器
.IPs d
触发掉帧
.IPs v
触发字幕是否可见
.IPs j
切换字幕语言
.IPs a
切换字幕对齐: 上/中/下
.IPs "z 和 x"
调整字幕延迟+/\:\- 0.1秒
.IPs "r 和 t"
调整字幕位置
.IPs "i"
设置EDL标记

.PP
(下列键只对\-vo xv或者\-vo [vesa|fbdev]:vidix或者\-vo xvidix
(下列键只能用于使用硬件加速的视频输出(xv, (x)vidix, (x)mga等等),
或者软件均衡滤镜(-vf eq或者-vf eq2)).
.IPs "1 and 2"
调整对比度
.IPs "3 and 4"
调整亮度
.IPs "5 and 6"
调整色相
.IPs "7 and 8"
调整饱和度
.RE
.PD 1
.
.TP
.B GUI键盘控制
.PD 0
.RSs
.IPs "ENTER"
开始播放
.IPs s
停止播放
.IPs l
加载文件
.IPs c
skin浏览器
.IPs p
触发播放列表
.RE
.PD 1
.
.TP
.B 电视输入控制
.PD 0
.RSs
.IPs "h 和 k"
选择上一个/\:下一个频道
.IPs n
改变制式
.IPs u
改变频道列表
.RE
.PD 1
.
.TP
.B DVDNAV输入控制
.PD 0
.RSs
.IPs "K,J,H,L"
上/\:下/\:左/\:右
.IPs M
跳转到主菜单
.IPs S
选择
.RE
.PD 1


.\" --------------------------------------------------------------------------
.\" Slave mode protocol
.\" --------------------------------------------------------------------------
.
.SH "SLAVE模式协议"
如果有\-slave选项, 播放由一个基于行输入的协议控制.
每一行都必须包含一个命令或者下列符号之一:
.TP
.B 命令
.RSs
.IPs "seek <参数> [type=<0/\:1/\:2>]"
搜索到电影的某个位置.
Type 0表示相对搜索+/\:-<参数>秒.
Type 1表示搜索到电影的<参数>%处.
Type 2表示搜索到<参数>秒的绝对位置.
.IPs "audio_delay <参数>"
调整音频延迟<参数>秒
.IPs quit
退出MPlayer
.IPs pause
暂停/\:继续播放
.IPs grap_frames
有人知道吗?
.IPs "pt_step <参数> [force=<参数>]"
跳转到播放列表的下一个/\:上一个输入.
.IPs "pt_up_step <参数> [force=<参数>]"
类似pt_step但它跳转到上一级列表的下一个/上一个输入.
.IPs "alt_src_step <参数>"
当有多个源可用是选择下一个/\:上一个(只支持asx播放列表).
.IPs "sub_delay <参数> [abs=<参数>]"
调整字幕字幕延迟+/\:-<参数>秒或者当abs不等于0时设置为<参数>秒.
.IPs "osd [level=<参数>]"
触发osd模式或者当level > 0时设置把它设为level.
.IPs "volume <dir>"
升高/\:降低音量.
.IPs "[contrast|brightness|hue|saturation] <\-100\-100> [abs=<参数>]"
设置/\:调整视频参数.
.IPs "frame_drop [type=<参数>]"
触发/\:设置掉帧模式.
.IPs "sub_visibility"
触发字幕是否可见.
.IPs "sub_pos <参数>"
调整字幕位置.
.IPs vo_fullscreen
切换到全屏模式.
.IPs "tv_step_channel <dir>"
选择下一个/\:上一个电视频道.
.IPs "tv_step_norm"
改变电视制式.
.IPs "tv_step_chanlist"
改变频道列表.
.IPs "gui_[loadsubtitle|about|play|stop]"
GUI动作.
.RE


.\" --------------------------------------------------------------------------
.\" Files
.\" --------------------------------------------------------------------------
.
.SH 文件
.TP
/etc/\:mplayer/\:mplayer.conf
系统范围的设置
.TP
~/.mplayer/\:config
用户设置
.TP
~/.mplayer/\:input.conf
输入绑定(完整按键列表参见'\-input keylist'的输出)
.TP
~/.mplayer/\:gui.conf
GUI配置文件
.TP
~/.mplayer/\:gui.pl
GUI播放列表
.TP
~/.mplayer/\:font/
字体目录(里面必须有一个font.desc文件和.RAW后缀的文件)
.TP
~/.mplayer/\:DVDkeys/
破解的CSS密钥
.PD 0
.TP
字幕文件按以下顺序搜索(比如播放/mnt/\:movie/\:movie.avi文件):
.RSs
/mnt/\:cdrom/\:movie.sub
.br
~/.mplayer/\:sub/\:movie.sub
.br
~/.mplayer/\:default.sub
.RE
.PD 1


.\" --------------------------------------------------------------------------
.\" Examples
.\" --------------------------------------------------------------------------
.
.SH 示例
.TP
.B 快速DVD播放
mplayer \dvd://1
.TP
.B 播放日文对话和英文字幕
mplayer \dvd://1 \-alang ja \-slang en
.TP
.B 只播放5, 6, 7场景
mplayer \dvd://1 \-chapter 5\-7
.TP
.B 多视角DVD播放
mplayer \dvd://1 \-dvdangle 2
.TP
.B 从其它DVD设备播放
mplayer \dvd://1 \-dvd\-device /dev/\:dvd2
.TP
.B 老师DVD(VOB)播放
mplayer \-dvdauth /dev/\:dvd /mnt/\:dvd/\:VIDEO_TS/\:VTS_02_4.VOB
.TP
.B HTTP流
mplayer http://mplayer.hq/\:example.avi
.TP
.B RTSP流
mplayer rtsp://server.example.com/\:streamName
.TP
.B 把字幕转换为MPsub(转换到./\:dump.mpsub)
mplayer dummy.avi \-sub source.sub \-dumpmpsub
.TP
.B 从标准的V4L输入
mplayer \-tv on:driver=v4l:width=640:height=480:outfmt=i420 \-vc rawi420
\-vo xv
.TP
.B 编码DVD节目#2中选择的场景
mencoder \dvd://2 \-chapter 10-15 \-o title2.avi \-oac copy \-ovc divx4
.TP
.B 编码DVD节目#2, 缩放到640x480
mencoder \dvd://2 \-vf scale=640:480 \-o title2.avi \-oac copy \-ovc divx4
.TP
.B 编码DVD节目#2, 缩放到512xHHH(保持长宽比)
mencoder \dvd://2 \-vf scale \-zoom \-xy 512 \-o title2.avi \-oac copy
\-ovc divx4
.TP
.B 同上, 但使用libavcodec族, MPEG4(Divx5)压缩
mencoder \dvd://2 \-o title2.avi \-ovc lavc
\-lavcopts vcodec=mpeg4:vhq:vbitrate=1800 \-oac copy
.TP
.B 同上, 但使用libavcodec族, MJPEG压缩
mencoder \dvd://2 \-o titel2.avi \-ovc lavc
\-lavcopts vcodec=mjpeg:vhq:vbitrate=1800 \-oac copy
.TP
.B 编码当前目录下的所有*.jpg文件
mencoder \\*.jpg \-mf on:fps=25 \-o output.avi \-ovc divx4
.TP
.B 从电视调谐器编码
mencoder \-tv on:driver=v4l:width=640:height=480 \-o tv.avi \-ovc rawrgb
.TP
.B 从管道编码
rar p test-SVCD.rar | mencoder \-ovc divx4 \-divx4opts br=800 \-ofps 24
\-\- \-
.TP
.B 编码多个*.vob文件
cat *.vob | mencoder <选项> \-


.\" --------------------------------------------------------------------------
.\" 错误, 作者, 标准声明
.\" --------------------------------------------------------------------------
.
.SH "BUGS (错误)"
不要惊慌。
如果你发现错误, 报告我们, 但请首先确认你已阅读了所有的文档。
也要小心那些表情符号 :)
许多错误是不正确的设置和参数使用引起的。
错误报告的文档一节
(http://www.mplayerhq.hu/\:DOCS/\:HTML/\:en/\:bugreports.html)
解释了如何创建有用的错误报告。
.
.
.
.SH "AUTHORS (作者)"
MPlayer 由 Arpad Gereoffy 起稿。
其它许多贡献者的部分清单, 请参见 AUTHORS(作者) 文件。
.PP
MPlayer 是 (C) 2000\-2006 The MPlayer Team (MPlayer 团队)所有
.PP
本(英文)手册页主要由 Gabucino, Jonas Jermann 和 Diego Biurrun 编写, 
由 Diego Biurrun 维护。
有关本文的联系请发送邮件到 MPlayer-DOCS 邮件列表。
与翻译相关的邮件属于 MPlayer-translations 邮件列表。
.\" end of file
