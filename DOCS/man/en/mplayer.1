.\" $Revision$
.\" MPlayer (C) 2000-2004 MPlayer Team
.\" This man page was/is done by Gabucino, Diego Biurrun, Jonas Jermann
.
.\" --------------------------------------------------------------------------
.\" Macro definitions
.\" --------------------------------------------------------------------------
.
.\" default indentation is 7, don't change!
.nr IN 7
.\" define indentation for suboptions
.nr SS 5
.\" add new suboption
.de IPs
.IP "\\$1" \n(SS
..
.\" begin of first level suboptions, end with .RE
.de RSs
.RS \n(IN+3
..
.\" begin of 2nd level suboptions
.de RSss
.PD 0
.RS \n(SS+3
..
.\" end of 2nd level suboptions
.de REss
.RE
.PD 1
..
.
.\" --------------------------------------------------------------------------
.\" Title
.\" --------------------------------------------------------------------------
.
.TH MPlayer 1 "2004-01-16" "The MPlayer Project" "The Movie Player For Linux"
.
.SH NAME
mplayer  \- Movie Player for Linux
.br
mencoder \- Movie Encoder for Linux
.
.\" --------------------------------------------------------------------------
.\" Synopsis
.\" --------------------------------------------------------------------------
.
.SH SYNOPSIS
.na
.nh
.B mplayer
.RI [options]\ [ \ file\  | \ URL\  | \ playlist\  | \ \-\  ]
.br
.B mplayer
'in +\n[.k]u
[global options]
.I file1
[specific options] [file2] [specific options]
.br
.in
.B mplayer
'in +\n[.k]u
[global options]
.RI { "group of files and options" }
[group specific options]
.br
.in
.B mplayer
'in +\n[.k]u
.RI [ mms[t] | http | http_proxy | rt[s]p | ftp ] ://
[user:passwd@]\fIURL\fP[:port] [options]
.br
.in
.B mplayer
'in +\n[.k]u
.I dvd://title
[options]
.br
.in
.B mplayer
'in +\n[.k]u
.I vcd://track[/device]
[options]
.br
.in
.B mplayer
'in +\n[.k]u
.I tv://[channel]
[options]
.br
.in
.B mplayer
'in +\n[.k]u
.I mf://filemask
[options]
.br
.in
.B mplayer
'in +\n[.k]u
.I [cdda|cddb]://track[:speed][/device]
[options]
.br
.in
.B mplayer
'in +\n[.k]u
.I cue://file[:track]
[options]
.br
.in
.B mplayer
'in +\n[.k]u
.I sdp://file
[options]
.br
.in
.B mplayer
'in +\n[.k]u
.I mpst://host[:port]/URL
[options]
.br
.in
.B mplayer
'in +\n[.k]u
.I dvb://channel
[options]
.br
.in
.B mencoder
[options]
.RI [ \ file\  | \ URL\  | \ \-\  ]
[\-o\ file]
.br
.B gmplayer
[options]
[\-skin\ skin]
.ad
.hy
.
.\" --------------------------------------------------------------------------
.\" Description
.\" --------------------------------------------------------------------------
.
.SH DESCRIPTION
.B mplayer
is a movie player for LINUX (runs on many other Unices and non\-x86 CPUs, see
the documentation).
It plays most MPEG/\:VOB, AVI, ASF/\:WMA/\:WMV, RM, QT/\:MOV/\:MP4, OGG/\:OGM,
VIVO, FLI, NuppelVideo, yuv4mpeg, FILM and RoQ files, supported by many
native, XAnim, and Win32 DLL codecs.
You can watch VideoCD, SVCD, DVD, 3ivx, DivX\ 3/\:4/\:5 and even WMV movies,
too (without using the avifile library).
.PP
Another great feature of MPlayer is the wide range of supported output
drivers.
It works with X11, XV, DGA, OpenGL, SVGAlib, fbdev, AAlib, DirectFB, but you
can also use GGI, SDL (and this way all their drivers), VESA (on every VESA
compatible card, even without X11), some low level card-specific drivers (for
Matrox, 3Dfx and ATI) and some hardware MPEG decoder boards, such as the
Siemens DVB, DXR2 and DXR3/\:Hollywood+.
Most of them support software or hardware scaling, so you can enjoy movies in
fullscreen.
.PP
MPlayer has an onscreen display (OSD) for status information, nice big
antialiased shaded subtitles and visual feedback for keyboard controls.
European/\:ISO 8859-1,2 (Hungarian, English, Czech, etc), Cyrillic and Korean
fonts are supported along with 11 subtitle formats (MicroDVD, SubRip,
SubViewer, Sami, VPlayer, RT, SSA, AQTitle, JACOsub, PJS and our own: MPsub) and
DVD subtitles (SPU streams, VobSub and Closed Captions).
.PP
.B mencoder
(MPlayer's Movie Encoder) is a simple movie encoder, designed to encode
MPlayer-playable movies (see above) to other MPlayer-playable formats (see
below).
It encodes to DivX4, XviD, one of the libavcodec codecs and PCM/\:MP3/\:VBRMP3
audio in 1, 2 or 3\ passes.
Furthermore it has stream copying abilities, a powerful plugin system (crop,
expand, flip, postprocess, rotate, scale, noise, rgb/\:yuv conversion) and
more.
.PP
.B gmplayer
is MPlayer with a graphical user interface.
It has the same options as MPlayer.
.
.
.\" --------------------------------------------------------------------------
.\" Options
.\" --------------------------------------------------------------------------
.
.SH "GENERAL NOTES"
.B Also see the HTML documentation!
.PP
Every 'flag' option has a 'noflag' counterpart, e.g.\& the opposite of the
\-fs option is \-nofs.
.PP
You can put all of the options in a configuration file which will be read
every time MPlayer is run.
The system-wide configuration file 'mplayer.conf' is in your configuration
directory (e.g.\& /etc/\:mplayer or /usr/\:local/\:etc/\:mplayer), the user
specific one is '~/\:.mplayer/\:config'.
User specific options override system-wide options and options given on the
command line override either.
The syntax of the configuration files is 'option=<value>', everything after
a '#' is considered a comment.
Options that work without values can be enabled by setting them to 'yes'
or '1' and disabled by setting them to 'no' or '0'.
Even suboptions can be specified in this way.
.PP
.I EXAMPLE:
.br
# Use Matrox driver by default.
.br
vo=xmga
.br
# I love practicing handstands while watching videos.
.br
flip=yes
.br
# Decode/\:encode multiple files from png,
.br
# start with mf://filemask
.br
mf=type=png:fps=25
.br
# Eerie negative images are cool.
.br
vf=eq2=1.0:-0.8
.PP
You can also write file-specific configuration files.
If you wish to have a configuration file for a file called 'movie.avi', create a file
named 'movie.avi.conf' with the file-specific options in it and put it in
~/.mplayer or in the same directory as the file.
.
.
.\" --------------------------------------------------------------------------
.\" Keyboard control
.\" --------------------------------------------------------------------------
.
.SH "KEYBOARD CONTROL"
.I NOTE:
.br
MPlayer has a fully configurable, command driven, control layer
which allow you to control MPlayer using keyboard, mouse, joystick
or remote control (using lirc).
.br
The default configuration file for the input system is
~/.mplayer/\:input.conf but it can be overriden
using the \-input conf option.
.br
These keys may/\:may not work, depending on your video output driver.
.TP
.B general control
.PD 0
.RSs
.IPs "<\- and \->"
seek backward/\:forward 10 seconds
.IPs "up and down"
seek backward/\:forward  1 minute
.IPs "pgup and pgdown"
seek backward/\:forward 10 minutes
.IPs "< and >"
backward/\:forward in playlist
.IPs "HOME and END"
go to next/\:previous playtree entry in the parent list
.IPs "INS and DEL"
go to next/\:previous alternative source (asx playlist only)
.IPs "p / SPACE"
pause movie (any key unpauses)
.IPs "q / ESC"
stop playing and quit
.IPs "+ and -"
adjust audio delay by +/\:- 0.1 second
.IPs "/ and *"
decrease/\:increase volume
.IPs "9 and 0"
decrease/\:increase volume
.IPs m\ \ \ \ 
mute sound
.IPs f\ \ \ \ 
toggle fullscreen
.IPs T\ \ \ \ 
toggle stay-on-top.
Supported by drivers which use X11, except SDL, as well as directx and gl2 under Windows.
.IPs "w and e"
decrease/\:increase panscan range
.IPs o\ \ \ \ 
toggle between OSD states: none / seek / seek+timer
.IPs d\ \ \ \ 
toggle frame dropping
.IPs v\ \ \ \ 
toggle subtitle visibility
.IPs j\ \ \ \ 
switch subtitle language
.IP F\ \ \ \ 
toggle display of "forced subtitles"
.IPs a\ \ \ \ 
toggle subtitle aligment: top/middle/bottom
.IPs "z and x"
adjust subtitle delay by +/\:- 0.1 second
.IPs "r and t"
adjust subtitle position
.IPs i\ \ \ \ 
set EDL mark
.RE
.PD 1
.PP
(The following keys are valid only when using a hardware accelerated video
output (xv, (x)vidix, (x)mga, etc), or the software equalizer filter
(\-vf eq or \-vf eq2).
.PP
.PD 0
.RSs
.IPs "1 and 2"
adjust contrast
.IPs "3 and 4"
adjust brightness
.IPs "5 and 6"
adjust hue
.IPs "7 and 8"
adjust saturation
.RE
.PD 1
.
.TP
.B GUI keyboard control
.PD 0
.RSs
.IPs ENTER
start playing
.IPs s\ \ \ \ 
stop playing
.IPs l\ \ \ \ 
load file
.IPs c\ \ \ \ 
skin browser
.IPs p\ \ \ \ 
toggle playlist
.RE
.PD 1
.
.TP
.B TV input control
.PD 0
.RSs
.IPs "h and k"
select previous/\:next channel
.IPs n\ \ \ \ 
change norm
.IPs u\ \ \ \ 
change channel list
.RE
.PD 1
.
.
.SH "PLAYER OPTIONS (MPLAYER ONLY)"
.TP
.B \-autoq <quality> (use with \-vf [s]pp)
Dynamically changes the level of postprocessing depending on available spare
CPU time.
The number you specify will be the maximum level used.
Usually you can use some big number.
You have to use \-vf [s]pp without parameters in order to use this.
.TP
.B \-autosync <factor>
Gradually adjusts the A/\:V sync based on audio delay measurements.
Specifying \-autosync\ 0, the default, will cause frame timing to be based
entirely on audio delay measurements.
Specifying \-autosync\ 1 will do the same, but will subtly change the A/\:V
correction algorithm used.
An uneven video frame rate in a movie which plays fine with \-nosound can
often be helped by setting this to an integer value greater than 1.
The higher the value, the closer the timing will be to \-nosound.
Try \-autosync\ 30 to smooth out problems with sound drivers which do
not implement a perfect audio delay measurement.
With this value, if large A/\:V sync offsets occur, they will only take about
1 or 2\ seconds to settle out.
This delay in reaction time to sudden A/\:V offsets should be the only
side-effect of turning this option on, for all sound drivers.
.TP
.B \-benchmark
Prints some statistics on CPU usage and dropped frames at the end.
Use in combination with \-nosound and \-vo null for benchmarking only the
video codec.
.br
.I NOTE:
With this option MPlayer will also ignore frame duration when playing
only video (you can think of that as infinite fps).
.TP
.B \-colorkey <number>
Changes the colorkey to an RGB value of your choice.
0x000000 is black and 0xffffff is white.
Only supported by the cvidix, fbdev, svga, vesa, winvidix, xmga, xvidix and
xover video out drivers.
.TP
.B \-nocolorkey
Disables colorkeying.
Only supported by the cvidix, fbdev, svga, vesa, winvidix, xmga, xvidix and
xover video out drivers.
.TP
.B \-edl <filename>
Enables edit decision list (EDL) actions during playback.
Video will be skipped over and audio will be muted and unmuted according to
the entries in the given file.
See DOCS/HTML/en/edl.html for details on how to use this.
.TP
.B \-edlout <filename>
Creates a new file and writes edit decision list (EDL) records to that file.
During playback, when the user hits 'i', an entry to skip over the last two
seconds of playback will be written to the file.
This provides a starting point from which the user can fine-tune EDL entries
later.
See DOCS/HTML/en/edl.html for details.
.TP
.B \-enqueue (GUI only)
Enqueue files given on the command line in the playlist instead of playing them
immediately.
.TP
.B \-fixed-vo (BETA CODE!)
Enforces a fixed video system for multiple files (one (un)initialisation for
all files).
Therefore only one window will be opened for all files.
Currently the following drivers are fixed-vo compliant: gl2, mga, svga, x11,
xmga, xv and xvidix.
.TP
.B \-framedrop (also see \-hardframedrop)
Skip displaying some frames to maintain A/\:V sync on slow systems.
Video filters are not applied to such frames.
For B frames even decoding is skipped completely.
.TP
.B \-h, \-help, \-\-help
Show short summary of options.
.TP
.B \-hardframedrop
More intense frame dropping (breaks decoding).
Leads to image distortion!
.TP
.B \-identify
Show file parameters in easy parsable format.
The wrapper script TOOLS/midentify suppresses the other MPlayer output and
(hopefully) shellescapes the filenames.
.TP
.B \-input <commands>
This option can be used to configure certain parts of the input system.
Paths are relative to ~/\:.mplayer/.
.br
.I NOTE:
Autorepeat is currently only supported by joysticks.

Available commands are:

.PD 0
.RSs
.IPs conf=<file>
Read alternative input.conf.
If given without pathname, ~/\:.mplayer is assumed.
.IPs ar-delay
Delay in msec before we start to autorepeat a key (0 to disable).
.IPs ar-rate
How many key presses per second when we autorepeat.
.IPs keylist
Prints all keys that can be bound.
.IPs cmdlist
Prints all commands that can be bound.
.IPs js-dev
Specifies the joystick device to use (default is /dev/\:input/\:js0).
.IPs file\ 
Read commands from the given file.
Mostly useful with a fifo.
.br
.I NOTE:
When the given file is a fifo MPlayer opens both ends so you can do
several 'echo "seek 10" > mp_pipe' and the pipe will stay valid.
.RE
.PD 1
.
.TP
.B \-lircconf <file>
Specifies a configuration file for LIRC (Linux Infrared Remote Control, see
http://www.lirc.org) if you don't like the default ~/\:.lircrc.
.TP
.B \-list-options
Prints out all the available options.
.TP
.B \-loop <number>
Loops movie playback <number> times.
0 means forever.
.TP
.B \-menu (BETA CODE)
Turn on OSD menu support.
.TP
.B \-menu-cfg <file> (BETA CODE)
Use an alternative menu.conf.
.TP
.B \-menu-root <value> (BETA CODE)
Specify the main menu.
.TP
.B \-nojoystick
Turns off joystick support.
Default is on, if compiled in.
.TP
.B \-nolirc
Turns off LIRC support.
.TP
.B \-nomouseinput
Disable mouse button press/release input (mozplayerxp's context menu relies
on this option).
.TP
.B \-nortc \ \ 
Turns off usage of the Linux RTC (real-time clock \- /dev/\:rtc) as timing
mechanism.
.TP
.B \-playlist <file>
Play files according to a playlist (1 file per row or Winamp or ASX format).
.br
.I NOTE:
This option is considered an entry so options found after it will apply
only to the elements of this playlist.
.TP
.B \-quiet \ \ 
With this option the status line (i.e. A:   0.7 V:   0.6 A-V:  0.068 ...)
will not be displayed.
Particularly useful on slow terminals or broken ones that do not properly
handle carriage return (i.e. \\r).
.TP
.B \-really-quiet
Display even less output and status messages.
.TP
.B \-shuffle
Play files in random order.
.TP
.B \-skin <skin\ directory> (GUI only)
Load skin from the given directory (WITHOUT path name).

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-skin fittyfene"
tries Skin/fittyfene.
It first checks
/usr/local/share/mplayer/
and afterwards ~/.mplayer/.
.RE
.PD 1
.
.TP
.B \-slave \ \ 
This option switches on slave mode.
This is intended for use of MPlayer as a backend to other programs.
Instead of intercepting keyboard events, MPlayer will read simplistic command
lines from its stdin.
.TP
.B \-softsleep
Uses high quality software timers.
As precise as the RTC without requiring special privileges.
Comes at the price of higher CPU consumption.
.TP
.B \-speed <0.01\-100>
Set playback speed rate.
.TP
.B \-sstep <sec>
Specifies seconds between displayed frames.
Useful for slideshows.
.TP
.B \-use-stdin
The standard input (aka. stdin) will be used to read data instead of key
events.  If you open /dev/stdin (or the equivalent on your system), use stdin
in a playlist or intend to read from stdin later on via the openfile or
openlist commands you
.B need
this option.
.
.
.SH "DEMUXER/STREAM OPTIONS"
.TP
.B \-aid <id> (also see \-alang option)
Select audio channel [MPEG: 0\-31 AVI/\:OGM: 1\-99 ASF/\:RM: 0\-127
VOB(AC3): 128\-159 VOB(LPCM): 160\-191 MPEG-TS 17\-8190].
MPlayer prints the available IDs when running in verbose (\-v) mode.
When playing an MPEG-TS stream, MPlayer/Mencoder will use the first program 
(if present) with the chosen audio stream.
.TP
.B \-alang <two letter\ country\ code> (also see \-aid option)
Works only for DVD playback.
It selects the DVD audio language and always tries to play audio streams whose
language matches the given code.
For the list of available languages, use with the \-v option and look at the
output.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-alang hu,en"
Plays Hungarian and falls back to English if Hungarian is not available.
.RE
.PD 1
.
.TP
.B \-audio-demuxer <number> (\-audiofile only)
Force audio demuxer type for \-audiofile.
Give the demuxer ID as defined in demuxers.h.
Use \-audio-demuxer 17 to force .mp3 detection.
.TP
.B \-audiofile <filename>
Play audio from an external file (WAV, MP3 or Ogg Vorbis) while viewing a
movie.
.TP
.B \-audiofile-cache <kBytes>
Enables caching for the stream used by \-audiofile, using the specified
amount of memory.
.TP
.B \-bandwidth <value>
Specify the maximum bandwidth for network streaming (for servers that are
able to send content in different bitrates).
Useful if you want to watch live streamed media behind a slow connection.
.TP
.B \-cdrom-device <path\ to\ device>
Override default CDROM drive name /dev/\:cdrom.
.TP
.B \-cache <kBytes>
This option specifies how much memory (in kBytes) to use when precaching a
file/\:URL.
Especially useful on slow media (default is \-nocache).
.TP
.B \-cdda <option1:option2>
This option can be used to tune the CD Audio reading feature of MPlayer.

Available options are:
.
.RSs
.IPs speed=<value>
set CD spin speed
.IPs paranoia=<0\-2>
set paranoia level
.RSss
0: disable checking
.br
1: overlap checking only (default)
.br
2: full data correction and verification
.REss
.IPs generic-dev=<value>
use specified generic SCSI device
.IPs sector-size=<value>
atomic read size
.IPs overlap=<value>
force minimum overlap search during verification to <value> sectors.
.IPs toc-bias
Assume that the beginning offset of track 1 as reported in the TOC will be
addressed as LBA\ 0.
Some Toshiba drives need this for getting track boundaries correct.
.IPs toc-offset=<value>
Add <value> sectors to the values reported when addressing tracks.
May be negative.
.IPs (no)skip
(never) accept imperfect data reconstruction.
.RE
.
.TP
.B \-channels <number>
Change the number of playback channels, defaults to '2' if not specified.
If the number of output channels is bigger than the number of input channels
empty channels are inserted (unless mixing from mono to stereo, then the mono
channel is repeated in both output channels).
If the number of output channels is smaller than the number of input channels,
results depend on the audio decoder (\-afm).
MPlayer asks the decoder to decode the audio into as many channels as
specified.
Now it's up to the decoder to fulfill the requirement.
If the decoder outputs more channels than requested, the exceeding channels
are truncated.
This is usually only important when playing videos with AC3 audio (like DVDs).
In that case liba52 does the decoding by default and correctly downmixes the
audio into the requested number of channels.
.br
.I NOTE:
This option is honored by codecs (AC3 only) filters (surround) and ao drivers
(OSS at least).

Available options are:

.PD 0
.RSs
.IPs 2
stereo
.IPs 4
surround
.IPs 6
full 5.1
.RE
.PD 1
.
.TP
.B \-chapter <chapter\ id>[\-<end\ chapter\ id>]
Specify which chapter to start playing at.
Optionally specify which chapter to end playing at (default: 1).
Examples can be found below.
.TP
.B \-cookies
Send cookies when making HTTP requests.
.TP
.B \-cookies-file <filename>
Read HTTP cookies from this file.
The file is assumed to be in Netscape format.
If you use this option, MPlayer will not look for cookies in ~/.netscape/
and ~/.mozilla/.
.TP
.B \-demuxer <number>
Force demuxer type.
Give the demuxer ID as defined in demuxers.h.
Use \-demuxer 17 to force .mp3 detection.
.TP
.B \-dumpaudio (MPLAYER only)
Dumps raw compressed audio stream to ./\:stream.dump (useful with mpeg/\:ac3).
.TP
.B \-dumpfile <filename> (MPLAYER only)
Specify which file MPlayer should dump to.
Should be used together with \-dumpaudio / \-dumpvideo / \-dumpstream.
.TP
.B \-dumpstream (MPLAYER only)
Dumps the raw stream to ./\:stream.dump.
Useful when ripping from DVD or network.
.TP
.B \-dumpvideo (MPLAYER only)
Dump raw compressed video stream to ./\:stream.dump (not very usable).
.TP
.B \-dvbin <options>
Pass the following parameters to the DVB input module, in order to override
the default ones:

.PD 0
.RSs
.IPs card=<1\-4>
Specifies using card number 1\-4 (default: 1).
.IPs file=<file>
Instructs MPlayer to read the channels list from <file>.
.IPs type=<SAT|TER|CBL>
Specifies that the card type is SATellite, TERrestrial or CaBLe. If not specified
the type will be autodetected.
.RE
.PD 1
.
.TP
.B \-dvd-device <path\ to\ device>
Override default DVD device name /dev/\:dvd.
.TP
.B \-dvdangle <angle\ id>
Some DVD discs contain scenes that can be viewed from multiple angles.
Here you can tell MPlayer which angles to use (default: 1).
Examples can be found below.
.TP
.B \-forceidx
Force rebuilding of INDEX.
Useful for files with broken index (desyncs, etc).
Seeking will be possible.
You can fix the index permanently with MEncoder (see the documentation).
.br
.I NOTE:
You can only use this option if the underlying media supports seeking
(i.e.\& not with stdin, pipe, etc).
.TP
.B \-fps <value>
Override video framerate (if value is wrong/\:missing in the header) (float
number).
.TP
.B \-frames <number>
Play/\:convert only first <number> frames, then quit.
.TP
.B \-hr-mp3-seek (MP3 only)
Hi-res mp3 seeking.
Default is: enabled when playing from external MP3 file, as we need to seek
to the very exact position to keep A/\:V sync.
It can be slow especially when seeking backwards \- it has to rewind to the
beginning to find the exact frame.
.TP
.B \-idx (also see \-forceidx)
Rebuilds INDEX of the AVI if no INDEX was found,
thus allowing seeking.
Useful with broken/\:incomplete downloads, or badly created AVIs.
.br
.I NOTE:
You can only use this option if the underlying media supports seeking
(i.e.\& not with stdin, pipe, etc).
.TP
.B \-ipv4-only-proxy
Skip the proxy for IPv6 addresses.
It will still be used for IPv4 connections.
.TP
.B \-loadidx <filename>
The file name from which to read the video INDEX data, as saved by \-saveidx.
MPlayer will read the index from filename and use this data for seeking.
This data will override any index data contained in the AVI itself.
Further, MPlayer won't prevent you from loading an index file generated
from a different AVI, but this is sure to cause unfavorable results.
.br
.I NOTE:
This option will be obsoleted once AVI gets ODML support!
.TP
.B \-mc <seconds/frame>
Maximum A-V sync correction per frame (in seconds).
.TP
.B \-mf <option1:option2:...>
Used when decoding from multiple PNG or JPEG files.

Available options are:

.PD 0
.RSs
.IPs w=<value>
width of the output (autodetect)
.IPs h=<value>
height of the output (autodetect)
.IPs fps=<value>
fps of the output (default: 25)
.IPs type=<value>
type of input files (available types: jpeg, png, tga, sgi)
.RE
.PD 1
.
.TP
.B \-ni (AVI only)
Force usage of non-interleaved AVI parser (fixes playing
of some bad AVI files).
.TP
.B \-nobps (AVI only)
Do not use average byte/\:sec value for A-V sync (AVI).
Helps with some AVI files with broken header.
.TP
.B \-noextbased
Disables filename-extension based demuxer selection.
By default, when file type (demuxer) cannot be detected reliably
(the file has no header or it is not reliable enough), the filename
extension is used to select demuxer.  It always falls back to content-based
demuxer selection.
.TP
.B \-passwd <password> (see \-user option too)
Specify password for http authentication.
.TP
.B \-prefer-ipv4
Use IPv4 on network connections.
Falls back to IPv6 automatically.
.TP
.B \-prefer-ipv6
Use IPv6 on network connections.
Falls back to IPv4 automatically.
.TP
.B \-rawaudio <option1:option2:...>
This option lets you play raw audio files.
It may also be used to play audio CDs which are not 44KHz 16Bit stereo.

Available options are:

.PD 0
.RSs
.IPs on\ \ \ 
use raw audio demuxer
.IPs channels=<value>
number of channels
.IPs rate=<value>
rate in samples per second
.IPs samplesize=<value>
sample size in byte
.IPs format=<value>
fourcc in hex
.RE
.PD 1
.
.TP
.B \-rawvideo <option1:option2:...>
This option lets you play raw video files.

Available options are:

.PD 0
.RSs
.IPs on\ \ \ 
use raw video demuxer
.IPs fps=<value>
rate in frames per second, default 25.0
.IPs sqcif|qcif|cif|4cif|pal|ntsc
set standard image size
.IPs w=<value>
image width in pixels
.IPs h=<value>
image height in pixels
.IPs y420|yv12|yuy2|y8
set colorspace
.IPs format=<value>
colorspace (fourcc) in hex
.IPs size=<value>
frame size in Bytes
.RE
.PD 1
.
.TP
.B \-rtsp-stream-over-tcp
Used with 'rtsp://' URLs to specify that the resulting incoming RTP and RTCP
packets be streamed over TCP (using the same TCP connection as RTSP).
This option may be useful if you have a broken Internet connection that does
not pass incoming UDP packets (see http://www.live.com/mplayer/).
.TP
.B \-saveidx <filename>
Force rebuilding of INDEX and output to a separate file specified by the
argument filename.
Currently this only works with AVI files.
Although you can use MEncoder to fix files without indexes, the AVI
container format is limited to indexing files up to 2GB in size.
It is however possible to store the index in a separate file and use it later
with \-loadidx, which is faster than rebuilding the index (with \-idx or
\-forceidx) each time the movie is opened.
(This is a limitation of the AVI format, and although there exists an
extension to index beyond 2GB, MPlayer doesn't yet support this extension.)
After the index file is created, MPlayer will begin to play the video.
If you want to automate index file generation (after encoding a large file
off a TV capture card, for example), you can specify \-frames 0 to
prevent MPlayer from playing the video after generating the index.
.br
.I NOTE:
This option will be obsoleted once AVI gets ODML support!
.TP
.B \-sb <byte\ position> (see \-ss option too)
Seek to byte position.
Useful for playback from CDROM images / .VOB files with junk at the beginning.
.TP
.B \-srate <Hz>
Selects the given output sampling rate, resampling if necessary.
MEncoder passes this value to lame for resampling.
.TP
.B \-ss <time> (see \-sb option too)
Seek to given time position.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-ss 56"
seeks to 56 seconds
.IPs "\-ss 01:10:00"
seeks to 1\ hour 10\ min
.RE
.PD 1
.
.TP
.B \-tskeepbroken 
Tells MPlayer not to discard TS packets reported as broken in the stream.
Sometimes needed to play corrupted MPEG-TS files.
.
.TP
.B \-tsprog <1\-65534>
When playing an MPEG-TS stream, you can specify with this option which  
program (if present) you want to play. Can be used with \-vid and \-aid.
.
.TP
.B \-tsprobe <byte\ position>
When playing an MPEG-TS stream, this option lets you specify how many 
bytes in the stream you want MPlayer to search for the desired
audio and video pids.
.
.TP
.B \-tv <option1:option2:...>
This option tunes various properties of the TV capture module.
For watching TV with MPlayer, use 'tv://' or 'tv://<channel_number>' 
or even 'tv://<channel_name> (see option channels for channel_name below)
as a movie URL.
.br
.I NOTE:
MPlayer doesn't accept colons so type dots instead in the device ID
(e.g.\& hw.0,0 instead of hw:0,0).
.br
Be advised that although you can select any samplerate when using ALSA,
the LAME audio codec is able to encode only the 'standard' samplerates.
You'll get an .avi file with no sound when you choose an odd
samplerate and use this codec.

Available options are:
.
.RSs
.IPs noaudio
no sound
.IPs driver=<value>
available: dummy, v4l, v4l2, bsdbt848
.IPs device=<value>
Specify other device than the default /dev/\:video0.
.IPs input=<value>
Specify other input than the default 0 (Television) (see output for a list)
.IPs freq=<value>
Specify the frequency to set the tuner to (e.g.\& 511.250).
Not compatible with channels parameter.
.IPs outfmt=<value>
Specify the output format of the tuner with a preset value supported by the
V4L driver (yv12, rgb32, rgb24, rgb16, rgb15, uyvy, yuy2, i420) or an
arbitrary format given as hex value.
Try outfmt=help for a list of all available formats.
.IPs width=<value>
width of the output window
.IPs height=<value>
height of the output window
.IPs fps=<value>
framerate at which to capture video (frames per second)
.IPs buffersize=<value>
maximum size of the capture buffer in megabytes (default: dynamical)
.IPs norm=<value>
available: PAL, SECAM, NTSC. For v4l2 use the normid option below.
.IPs normid=<value>
v4l2 only. See MPlayer output for a list of available TV norms.
.IPs channel=<value>
Set tuner to <value> channel.
.IPs chanlist=<value>
available: europe-east, europe-west, us-bcast, us-cable, etc
.IPs channels=<channel>\-<name>,<channel>\-<name>,...
Set names for channels.
Use _ for spaces in names (or play with quoting ;-).
The channel names will then be written using OSD, and the commands tv_step_channel,
tv_set_channel and tv_last_channel will then be usable using a remote (see lirc).
Not compatible with frequency parameter.
Warning: The channel number will then be the position in the 'channels' list,
beginning with 1.
Example: use tv://1, tv://2, tv://TV1, tv_set_channel 1, tv_set_channel 2, tv_set_channel TV1, etc.
.IPs [brightness|contrast|hue|saturation]=<-100\-100>
set the color equalizer on the card
.IPs audiorate=<value>
set audio capture bitrate
.IPs forceaudio
capture audio even if there are no audio sources reported by v4l
.IPs alsa\ 
capture from ALSA
.IPs amode=<0\-3>
choose an audio mode:
.RSss
0: mono
.br
1: stereo
.br
2: language 1
.br
3: language 2
.REss
.IPs forcechan=<1\-2>
By default, the count of recorded audio channels is determined automatically
by querying the audio mode from the tv card.
This option allows to force stereo/\:mono recording regardless of the amode
option and the values returned by v4l.
This can be used for troubleshooting when the tv card is unable to report the
current audio mode.
.IPs adevice=<value>
set an audio device
.RSss
/dev/\:...\& for OSS
.br
hardware ID for ALSA
.REss
.IPs audioid=<value>
choose an audio output of the capture card, if it has more of them
.IPs [volume|bass|treble|balance]=<0\-65535>
.IPs [volume|bass|treble|balance]=<0\-100>
These options set parameters of the mixer on the video capture card.
They will have no effect, if your card doesn't have one.
For v4l1, 0\-65535 is a valid range.
For v4l2, the valid range is 0 to 100, and 50 maps to the default value of the
control, as reported by the driver.
.IPs immediatemode=<bool>
A value of 0 means capture and buffer audio and video together
(default for MEncoder).
A value of 1 (default for MPlayer) means to do video capture only and let the
audio go through a loopback cable from the TV card to the soundcard.
.IPs mjpeg
Use hardware mjpeg compression (if the card supports it). 
When using this option, you do not need to specify the width and height
of the output window, because MPlayer will determine it automatically 
from the decimation value (see below).
.IPs decimation=<1,2,4>
choose the size of the picture that will be compressed by hardware
mjpeg compression:
.RSss
1: full size
    704x576    PAL
    704x480    NTSC
.br
2: medium size
    352x288    PAL
    352x240    NTSC
.br
4: small size
    176x144    PAL
    176x120    NTSC
.REss
.IPs quality=<0\-100>
choose the quality of the jpeg compression
.br
(quality < 60 recommended for full size)
.RE
.
.TP
.B \-user <user name> (see \-passwd option too)
Specify user name for http authentication.
.TP
.B \-user-agent <string>
Use string as User-Agent for HTTP streaming.
.TP
.B \-vid <id>
Select video channel [MPG: 0\-15 ASF: 0\-255 MPEG-TS: 17\-8190].
When playing an MPEG-TS stream, MPlayer/Mencoder will use the first program 
(if present) with the chosen video stream.
.TP
.B \-vivo <sub-options> (DEBUG CODE)
Force audio parameters for the .vivo demuxer (for debugging purposes).
.
.
.SH "OSD/SUB OPTIONS"
.I NOTE:
See \-vf expand too.
.TP
.B \-dumpjacosub (MPLAYER only)
Convert the given subtitle (specified with the \-sub option) to the time-based
JACOsub subtitle format.
Creates a dumpsub.js file in the current directory.
.TP
.B \-dumpmicrodvdsub (MPLAYER only)
Convert the given subtitle (specified with the \-sub option) to the
MicroDVD subtitle format.
Creates a dumpsub.sub file in the current directory.
.TP
.B \-dumpmpsub (MPLAYER only)
Convert the given subtitle (specified with the \-sub option) to MPlayer's
subtitle format, MPsub.
Creates a dump.mpsub file in the current directory.
.TP
.B \-dumpsami (MPLAYER only)
Convert the given subtitle (specified with the \-sub option) to the time-based
SAMI subtitle format.
Creates a dumpsub.smi file in the current directory.
.TP
.B \-dumpsrtsub (MPLAYER only)
Convert the given subtitle (specified with the \-sub option) to the time-based
SubViewer (SRT) subtitle format.
Creates a dumpsub.srt file in the current directory.
.TP
.B \-dumpsub (MPLAYER only) (BETA CODE)
Dumps the subtitle substream from VOB streams.
See \-dump*sub and \-vobsubout* options too.
.TP
.B \-ffactor <number>
Resample alphamap of the font.
Can be:
.
.PD 0
.RSs
.IPs 0
plain white fonts
.IPs 0.75
very narrow black outline (default)
.IPs 1
narrow black outline
.IPs 10
bold black outline
.RE
.PD 1
.
.TP
.B \-flip-hebrew
Turns on flipping subtitles using FriBiDi.
.TP
.B \-font <path\ to\ font.desc\ file>
Search for the OSD/\:SUB fonts in an alternative directory (default for normal
fonts: ~/\:.mplayer/\:font/\:font.desc, default for FreeType fonts:
~/.mplayer/\:subfont.ttf).
.br
.I NOTE:
With FreeType, this option determines path to the text font file.
.br
With Fontconfig, this option determines the fontconfig font name.

.I EXAMPLE:
.PD 0
.RSs
\-font ~/\:.mplayer/\:arial-14/\:font.desc
.br
\-font ~/\:.mplayer/\:arialuni.ttf
.br
\-font 'Bitstream Vera Sans'
.RE
.PD 1
.
.TP
.B \-fontconfig
Enables the usage of fontconfig managed fonts.
.TP
.B \-forcedsubsonly
Display only forced subtitles for the DVD subtitle stream selected by e.g.\&
\-slang.
.TP
.B \-fribidi-charset <charset\ name>
Specifies the charset that will be passed to FriBiDi when decoding a non-UTF8
subtitles (default: ISO8859-8).
.TP
.B \-ifo <vobsub\ ifo\ file>
Indicate the file that will be used to load palette and frame size for VOBSUB
subtitles.
.TP
.B \-noautosub
Turns off automatic loading of subtitle files.
.TP
.B \-osdlevel <0\-3> (MPLAYER only)
Specifies which mode the OSD should start in.
.
.PD 0
.RSs
.IPs 0
subtitles only
.IPs 1
volume + seek (default)
.IPs 2
volume + seek + timer + percentage
.IPs 3
volume + seek + timer + percentage + total time
.RE
.PD 1
.
.TP
.B \-overlapsub
Allows the next subtitle to be displayed while the current one is
still visible (default is to enable the support only for specific
formats).
.TP
.B \-sid <id> (also see \-slang option)
Turns on DVD subtitle displaying.
Also, you MUST specify a number which corresponds to a DVD subtitle language
(0\-31).
For the list of available subtitles, use with the \-v option and look at the
output.
.TP
.B \-slang <two\ letter\ country\ code> (also see \-sid option)
For DVD playback, turns on/\:selects DVD subtitle language.
For the list of available subtitles, use with the \-v option and look at the
output.
.br
Otherwise, determines an optional subtitle suffix which gets a higher
priority when searching for subtitles.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-slang hu,en"
Selects Hungarian and falls back to English if Hungarian is not available.
.RE
.PD 1
.
.TP
.B \-spuaa <mode>
Antialiasing/scaling mode for DVD/VobSub.
A value of 16 may be added to mode in order to force scaling even
when original and scaled frame size already match, for example to
smooth subtitles with the gaussian blur.
The available modes are:
.PD 0
.RSs
.IPs 0
none (fastest, very ugly)
.IPs 1
approximate (broken?)
.IPs 2
full (slow)
.IPs 3
bilinear (default, fast and not too bad)
.IPs 4
uses swscaler gaussian blur (looks very good)
.RE
.PD 1
.
.TP
.B \-spualign <-1\-2>
Specify how spu (DVD/VobSub) subtitles should be aligned.
Values are the same as for \-subalign, with the extra choice -1 for original
position.
.TP
.B \-spugauss <0.0\-3.0>
Variance parameter of gaussian used by \-spuaa 4.
Higher means more blur.
The default is 1.0.
.TP
.B \-sub <subtitlefile1,subtitlefile2,...>
Use/\:display these subtitle files.
Only one file can be displayed at the same time and the files can be
switched with 'j'. 
.TP
.B \-sub-bg-alpha <0\-255>
Specify the alpha channel value for subtitles and OSD backgrounds.
Big values mean more transparency.
The 0 value is an exception and means completly transparent.
.TP
.B \-sub-bg-color <0\-255>
Specify the color value for subtitles and OSD backgrounds.
Currently subtitles are grayscale so this value is equivalente to the
intensity of the color.
The 255 value means white and 0 black.
.TP
.B \-sub-demuxer <number> (\-subfile only) (BETA CODE)
Force subtitle demuxer type for \-subfile.
Give the demuxer ID as defined in subreader.h.
.TP
.B \-sub-fuzziness <mode>
Adjust matching fuzziness when searching for subtitles:
.PD 0
.RSs
.IPs 0
exact match
.IPs 1
load all subs containing movie name
.IPs 2
load all subs in the current directory
.RE
.PD 1
.
.TP
.B \-sub-no-text-pp
Disables any kind of text post processing done after loading the subtitles.
Used for debug purposes.
.TP
.B \-subalign <0\-2>
Specify how subtitles should be aligned with subpos.
0 means align at top (original/default behavior), 1 means align at center, and
2 means align at bottom.
.TP
.B \-subcc \ 
Display DVD Closed Caption (CC) subtitles.
These are NOT the VOB subtitles, these are special ASCII subtitles for the
hearing impaired encoded in the VOB userdata stream on most region 1 DVDs.
CC subtitles have not been spotted on DVDs from other regions so far.
.TP
.B \-subcp <codepage>
If your system supports iconv(3), you can use this option to
specify codepage of the subtitle.

.I EXAMPLE:
.PD 0
.RSs
\-subcp latin2
.br
\-subcp cp1250
.RE
.PD 1
.
.TP
.B \-subdelay <sec>
Delays subtitles by <sec> seconds.
Can be negative.
.TP
.B \-subfile <filename> (BETA CODE)
Currently useless.
Same as \-audiofile, but for subtitle streams (OggDS?).
.TP
.B \-subfont-autoscale <0\-3> (FreeType only)
Sets the autoscale mode.
.br
.I NOTE:
Zero means that text-scale and osd-scale are font heights in points.

The mode can be:

.PD 0
.RSs
.IPs 0
no autoscale
.IPs 1
proportional to movie height
.IPs 2
proportional to movie width
.IPs 3
proportional to movie diagonal (default)
.RE
.PD 1
.
.TP
.B \-subfont-blur <0\-8> (FreeType only)
Sets the font blur radius (default: 2).
.TP
.B \-subfont-encoding <value> (FreeType only)
Sets the font encoding.
When set to 'unicode', all the glyphs from the font file will be rendered and
unicode will be used (default: unicode).
.TP
.B \-subfont-osd-scale <0\-100> (FreeType only)
Sets the osd elements autoscale coefficient (default: 6).
.TP
.B \-subfont-outline <0\-8> (FreeType only)
Sets the font outline thickness (default: 2).
.TP
.B \-subfont-text-scale <0\-100> (FreeType only)
Sets the subtitle text autoscale coefficient (percentage of the
screen size) (default: 5).
.TP
.B \-subfps <rate>
Specify frame/\:sec rate of subtitle file (float number),
default: the same fps as the movie.
.br
.I NOTE:
ONLY for frame-based SUB files, i.e.\& NOT MicroDVD format.
.TP
.B \-subpos <0\-100> (useful with \-vf expand)
Specify the position of subtitles on the screen.
The value is the vertical position of the subtitle in % of the screen height.
.TP
.B \-subwidth <10\-100>
Specify the maximum width of subtitles on the screen.
Useful for TV-out.
The value is the width of the subtitle in % of the screen width.
.TP
.B \-unicode
Tells MPlayer to handle the subtitle file as UNICODE.
.TP
.B \-utf8 \ \ 
Tells MPlayer to handle the subtitle file as UTF8.
.TP
.B \-vobsub <vobsub\ file\ without\ extension>
Specify the VobSub files that are to be used for subtitle.
This is the full pathname without extensions, i.e.\& without
the '.idx', '.ifo' or '.sub'.
.TP
.B \-vobsubid <0\-31>
Specify the VobSub subtitle id.
.
.
.SH "AUDIO OUTPUT OPTIONS (MPLAYER ONLY)"
.TP
.B \-abs <value> (OBSOLETE)
Override audio driver/\:card buffer size detection, \-ao oss only
.TP
.B \-ao <driver1[:device],driver2,...[,]>
Specify a priority list of audio output drivers (optionally with device) to be
used.
With SDL 'device' is valid, too, it means subdriver then.
.br
.I NOTE:
To get a full list of available drivers, see \-ao help.
.br
If the list has a trailing ',' it will fallback to drivers not listed.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-ao oss:/\:dev/\:dsp2,oss:/\:dev/\:dsp1,"
try to use OSS with the specified sound devices and fallback to others if it
fails
.IPs "\-ao sdl:esd"
specify the SDL subdriver
.RE
.PD 1
.
.TP
.B \-aofile <filename>
Filename for \-ao pcm.
.TP
.B \-aop <list=plugin1,plugin2...:option1=value1:opt2=val2...>
Specify audio plugin(s) and their options (see documentation too).

Available options are:
.
.RSs
.IPs list=[plugins]
comma separated list of plugins (resample, surround, format, volume,
extrastereo, volnorm)
.IPs delay=<sec>
example plugin, do not use.
.IPs format=<format>
output format (format plugin only)
.IPs fout=<Hz>
output frequency (resample plugin only)
.IPs volume=<0\-255>
volume (volume plugin only)
.IPs mul=<value>
stereo coefficient (default: 2.5) (extrastereo plugin only)
.IPs softclip
compressor / 'soft-clipping' capabilities (volume plugin only)
.RE
.
.TP
.B \-delay <sec>
Audio delay in seconds (may be +/\:- float value).
.TP
.B \-format <0\-8192>
Select the format used for output from the filter layer (according to the
defines in libao2/afmt.h):
.
.PD 0
.RSs
.IPs 1
Mu-Law
.IPs 2
A-Law
.IPs 4
Ima-ADPCM
.IPs 8
Signed 8-bit
.IPs 16
Unsigned 8-bit
.IPs 32
Unsigned 16-bit (Little-Endian)
.IPs 64
Unsigned 16-bit (Big-Endian)
.IPs 128
Signed  16-bit (Little-Endian)
.IPs 256
Signed 16-bit (Big-Endian)
.IPs 512
MPEG (2) Audio
.IPs 1024
AC3
.IPs 4096
Signed 32-bit (Little-Endian)
.IPs 8192
Signed 32-bit (Big-Endian)
.RE
.PD 1
.
.TP
.B \-mixer <device>
This option will tell MPlayer to use a different device for mixing than
/dev/\:mixer.
.TP      
.B \-mixer-channel <mixer line> (-ao oss only)
This option will tell MPlayer to use a different channel for controlling
volume than the default PCM.
Options include
.B vol, pcm, line.
For a complete list of options look for SOUND_DEVICE_NAMES in
/usr/include/linux/soundcard.h.
.TP
.B \-nowaveheader (\-ao pcm only)
Don't include wave header.
Used for RAW PCM.
.
.
.SH "VIDEO OUTPUT OPTIONS (MPLAYER ONLY)"
.TP
.B \-aa* (\-vo aa only)
You can get a list and an explanation of available options executing
.I mplayer \-aahelp
.TP
.B \-bpp <depth>
Use different color depth than autodetect.
Not all \-vo drivers support it (fbdev, dga2, svga, vesa).
.TP
.B \-brightness <-100\-100>
Adjust brightness of video output (default 0).
It changes intensity of RGB components of video signal from black to white
screen.
.TP
.B \-contrast <-100\-100>
Adjust contrast of video output (default 0).
Works in similar manner as brightness.
.TP
.B \-dfbopts <value> (\-vo directfb2 only)
Specify a parameter list for the directfb driver.
.TP
.B \-display <name>
Specify the hostname and display number of the X server you want to display
on.

.I EXAMPLE:
.PD 0
.RSs
\-display xtest.localdomain:0
.RE
.PD 1
.
.TP
.B \-double
Enables doublebuffering.
Fixes flicker by storing two frames in memory, and displaying one while
decoding another.
Can affect OSD.
Needs twice the memory of a single buffer, so it won't work on cards with
very little video memory.
.TP
.B \-dr \ \ \ 
Turns on direct rendering (not supported by all codecs and video outputs)
(default is off).
Warning: may cause OSD/\:SUB corruption!
.TP
.B \-dxr2 <option1:option2:...>
This option is used to control the dxr2 driver.
.
.RSs
.IPs ar-mode=<value>
aspect ratio mode (0 = normal, 1 = pan scan, 2 = letterbox (default))
.IPs iec958-encoded
iec958 output mode
.IPs iec958-decoded
set iec958 output mode to decoded (default)
.IPs macrovision=<value>
macrovision mode (0 = off (default), 1 = agc, 2 = agc 2 colorstripe,
3 = agc 4 colorstripe)
.IPs mute\ 
mute sound output
.IPs unmute
unmute sound output
.IPs ucode=<value>
path to the microcode
.RE
.RS

.I TV Out
.RE
.RSs
.IPs 75ire
enable 7.5 IRE output mode
.IPs no75ire
disable 7.5 IRE output mode (default)
.IPs bw\ \ \ 
b/\:w TV output
.IPs color
color TV output (default)
.IPs interlaced
interlaced TV output (default)
.IPs nointerlaced
disable interlaced TV output
.IPs norm=<value>
TV norm (ntsc (default), pal, pal60, palm, paln, palnc)
.IPs square-pixel
set pixel mode to square
.IPs ccir601-pixel
set pixel mode to ccir601
.RE
.RS

.I Overlay
.RE
.RSs
.IPs cr-left=<0\-500>
set the left cropping value (default: 50)
.IPs cr-right=<0\-500>
set the right cropping value (default: 300)
.IPs cr-top=<0\-500>
set the top cropping value (default: 0)
.IPs cr-bottom=<0\-500>
set the bottom cropping value (default: 0)
.IPs ck-[r|g|b]=<0\-255>
set the r(ed), g(reen) or b(lue) gain of the overlay color-key
.IPs ck-[r|g|b]min=<0\-255>
minimum value for the respective color key
.IPs ck-[r|g|b]max=<0\-255>
maximum value for the respective color key
.IPs ignore-cache
ignore cached overlay settings
.IPs update-cache
update cached overlay settings
.IPs ol-osd
enable overlay onscreen display
.IPs nool-osd
disable overlay onscreen display (default)
.IPs ol[h|w|x|y]-cor=<-20\-20>
adjust the overlay size (h,w) and position (x,y) in case it doesn't match the
window perfectly (default: 0)
.IPs overlay
activate overlay (default)
.IPs nooverlay
activate TVout
.IPs overlay-ratio=<1\-2500>
tune the overlay (default 1000)
.RE
.
.TP
.B \-fb <device> (fbdev or DirectFB only) (OBSOLETE)
Specifies the framebuffer device to use.
By default it uses /dev/\:fb0.
.TP
.B \-fbmode <modename> (fbdev only)
Change video mode to the one that is labelled as <modename> in
/etc/\:fb.modes.
.br
.I NOTE:
VESA framebuffer doesn't support mode changing.
.TP
.B \-fbmodeconfig <filename> (fbdev only)
Use this configuration file instead of the default /etc/\:fb.modes.
Only valid for the fbdev driver.
.TP
.B \-forcexv (SDL only)
Force using XVideo.
.TP
.B \-fs \ \ \ 
Fullscreen playing (centers movie, and makes black
bands around it).
Toggle it with the 'f' key (not all video outputs support it).
See also \-zoom.
.TP
.B \-fsmode-dontuse <0\-31> (OBSOLETE) (use \-fs option)
Try this option if you still experience fullscreen problems.
.TP
.B \-fstype <type1,type2,...>
Specify a priority list of fullscreen layer setting modes to be
used.
The available types are:

.PD 0
.RSs
.IPs above
Use _NETWM_STATE_ABOVE hint if available.
.IPs below
Use _NETWM_STATE_BELOW hint if available.
.IPs fullscreen
Use _NETWM_STATE_FULLSCREEN hint if available.
.IPs layer
Use _WIN_LAYER hint with default layer.
.IPs layer=<0..15>
Use _WIN_LAYER hint with layer number.
.IPs netwm
Force NETWM style.
.IPs none\ 
Don't set fullscreen window layer.
.IPs stays_on_top
Use _NETWM_STATE_STAYS_ON_TOP hint if available.
.RE
.PD 1
.TP
.B \ 
You can negate the modes by prefixing them with '-'.
.br
The default order is layer,stays_on_top,above,fullscreen.
It will be used as a fallback in case of specifying incorrect
or unsupported modes.
.br
OpenBox 1.x users have to use \-fstype \-fullscreen
to achieve working fs switching.
.br
If you experience problems with fullscreen window being covered by other
windows try using a different order.
.br
.I NOTE:
See \-fstype help for a full list of available modes.
.TP
.B \-geometry x[%][:y[%]] or [WxH][+x+y]
Adjust where the output is on the screen initially.
The x and y specifications are in pixels measured from the top-right of the
screen to the top-right of the image being displayed, however if a percentage
sign is given after the argument it turns the value into a percentage of the
screen size in that direction.
It also supports the standard option format to the standard X \-geometry
option.
The values given must be integers.
.br
.I NOTE:
This option is only supported by vo x11, xmga, xv, xvmc, xvidix,
directx and tdfxfb.

.I EXAMPLE:
.PD 0
.RSs
.IPs 50:40
Places the window at x=50, y=40
.IPs 50%:50%
Places the window in the middle of the screen
.IPs 100%\ 
Places the window at the top left corner of the screen
.IPs 100%:100%
Places the window at the bottom left corner of the screen
.RE
.PD 1
.
.TP
.B \-guiwid <window\ id>
This tells the GUI to also use an X11 window and stick itself to the bottom
of the video, which is useful to embed a mini-GUI in a browser (with the
MPlayer plugin for instance).
.TP
.B \-hue <-100\-100>
Adjust hue of video signal (default: 0).
You can get colored negative of image with this option.
.TP
.B \-jpeg <option1:option2:...> (\-vo jpeg only)
Specify options for the JPEG output.
.br
Available options are:

.PD 0
.RSs
.IPs [no]progressive
Specify standard or progressive JPEG.
.IPs [no]baseline
Specify use of baseline or not.
.IPs optimize=<value>
Optimization factor [0\-100]
.IPs smooth=<value>
Smooth factor [0\-100]
.IPs quality=<value>
Quality factor [0\-100]
.IPs outdir=<value>
Directory to save the JPEG files
.RE
.PD 1
.
.TP
.B \-monitor-dotclock <dotclock\ (or\ pixelclock) range> (fbdev and vesa only)
Look into etc/\:example.conf for further information and in
DOCS/\:HTML/\:en/\:devices.html#video-dev.
.TP
.B \-monitor-hfreq <horizontal frequency range> (fbdev and vesa only)
.TP
.B \-monitor-vfreq <vertical frequency range> (fbdev and vesa only)
.TP
.B \-monitoraspect <ratio>
Set aspect ratio of your monitor or TV screen.
See also \-aspect for movie aspect.

.I EXAMPLE:
.PD 0
.RSs
\-monitoraspect 4:3  or 1.3333
.br
\-monitoraspect 16:9 or 1.7777
.RE
.PD 1
.
.TP
.B \-nograbpointer
Do not grab mouse pointer after VidMode change (\-vm), useful for multihead
setup.
.TP
.B \-nokeepaspect
Do not keep window aspect ratio when resizing X11 windows (Works currently only
with \-vo x11, xv, xmga and xvidix and your window manager needs to understand
window aspect hints.).
.TP
.B \-noxv (SDL only)
Disables XVideo SDL driver.
.TP
.B \-ontop 
Makes the player window stay on top other windows.
Supported by drivers which use X11, except SDL, as well as directx and gl2 under Windows.
.TP
.B \-panscan <0.0\-1.0>
Enables Pan & Scan functionality, i.e.\& in order to display a 16:9 movie
on a 4:3 display, the sides of the movie are cropped to get a 4:3 image
which fits the screen.
This function works only with the xv, xmga, mga and xvidix video out drivers.
.br
The range controls how much of the image is cropped.
.TP
.B \-rootwin
Play movie in the root window (desktop background) instead of opening
a new one.
Works only with x11, xv, xmga and xvidix drivers.
.TP
.B \-saturation <-100\-100>
Adjust saturation of video output (default: 0).
You can get grayscale output with this option.
.TP
.B \-screenw <pixels> \-screenh <pixels>
If you use an output driver which can't know the resolution of the screen
(fbdev/\:x11 and/\:or TVout) this is where you can specify the horizontal and
vertical resolution.
.TP
.B \-stop-xscreensaver
Turns off xscreensaver at startup and turns it on again on exit.
.TP
.B \-vm \ \ \ 
Try to change to a better video mode.
dga, x11/\:xv (XF86VidMode) and sdl output drivers support it.
.TP
.B \-vsync \ \ 
Enables VBI for vesa.
.TP
.B \-wid <window\ id>
This tells MPlayer to use a X11 window, which is useful to embed MPlayer in a
browser (with the plugger extension for instance).
.TP
.B \-xineramascreen <0\-...>
In Xinerama configurations (i.e.\& a single desktop that spans across multiple
displays) this option tells MPlayer which screen to display movie on.
.TP
.B \-z <0\-9>
Specifies compression level for PNG output (\-vo png)
.
.PD 0
.RSs
.IPs 0
no compression
.IPs 9
max compression
.RE
.PD 1
.
.TP
.B \-zrbw (\-vo zr only)
Display in black and white (for optimal performance, this option can be
combined with the 'decode only in black and white' option for codecs
belonging to the FFmpeg family).
.TP
.B \-zrcrop <[width]x[height]+[x offset]+[y offset]> (\-vo zr only)
Select a part of the input image for display, multiple occurences of this
option switch on cinerama mode.
In cinerama mode the movie is distributed over more than one TV (or beamer) to
create a larger screen.
Options appearing after the n-th \-zrcrop apply to the n-th MJPEG card, each
card should at least have a \-zrdev in addition to the \-zrcrop.
For examples, see the output of \-zrhelp and the Zr section of the
documentation.
.TP
.B \-zrdev <device> (\-vo zr only)
Specify the device special file that belongs to your MJPEG card, by default
this driver takes the first v4l device it can find.
.TP
.B \-zrfd (\-vo zr only)
Force decimation: Decimation, as specified by \-zrhdec and \-zrvdec, only
happens if the hardware scaler can stretch the image to its original size.
Use this option to force decimation.
.TP
.B \-zrhelp (\-vo zr only)
Display a list of all \-zr* options, their default values and an example of
cinerama mode.
.TP
.B \-zrnorm <norm> (\-vo zr only)
Specify norm PAL/\:NTSC, the default is 'no change'.
.TP
.B \-zrquality <1\-20> (\-vo zr only)
A number from 1 to 20 representing the jpeg encoding quality.
1 gives the best quality and 20 gives very bad quality.
.TP
.B \-zrvdec <1,2,4> \-zrhdec <1,2,4> (\-vo zr only)
Vertical/\:horizontal decimation: Ask the driver to send only every 2nd or 4th
line/\:pixel of the input image to the MJPEG card and use the scaler of the
MJPEG card to strech the image to its original size.
.TP
.B \-zrxdoff <x display offset>, \-zrydoff <y display offset> (\-vo zr only)
If the movie is smaller than the TV screen, these options control the position
of the movie relative to the upper left corner of the screen.
The movie is centered by default.
.
.
.SH "DECODING/FILTERING OPTIONS"
.TP
.B \-ac <[-]codec1,[-]codec2,...[,]>
Specify a priority list of audio codecs to be used, according to their codec
name in codecs.conf.
Use a '-' before the codec name to omit it.
.br
.I NOTE:
See \-ac help for a full list of available codecs.
.br
If the list has a trailing ',' it will fallback to codecs not listed.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-ac mp3acm"
force l3codeca.acm MP3 codec
.IPs "\-ac mad,"
try libmad first, then fallback to others
.IPs "\-ac hwac3,a52,"
try hardware AC3 passthrough, then software AC3 codec, then others
.IPs "\-ac -ffmp3,"
try other codecs except FFmpeg's MP3 decoder
.RE
.PD 1
.
.TP
.B \-af <plugin1[=options],plugin2,...>
Activate a comma separated list of audio filters and their options.
.br
Available filters are:
.
.RSs
.IPs resample[=srate[:sloppy][:type]]
Changes the sample rate of the audio stream to an integer srate (Hz).
It only supports the 16 bit little endian format.
.IPs channels[=nch]
Change the number of channels to nch output channels.
If the number of output channels is bigger than the number of input channels
empty channels are inserted (except mixing from mono to stereo, then the mono
channel is repeated in both of the output channels).
If the number of output channels is smaller than the number of input channels
the exceeding channels are truncated.
.IPs format[=bps,f]
Select the format f and bytes per sample bps used for output from the
filter layer.
The option bps is an integer and denotes Bytes per sample.
The format f is a string containing a concatenated mix of:
.br
alaw, mulaw or imaadpcm
.br
float or int
.br
unsigned or signed
.br
le or be (little or big endian)
.br
.IPs volume[=v:sc]
Select the output volume level.
This filter is not reentrant and can therefore only be enabled once for every
audio stream.
.RSss
v: desired gain in dB for all channels in the stream.
The gain can be set from -200dB to +40dB (where -200dB mutes the sound
completely and +40dB equals a gain of 1000).
.br
sc: enable soft clipping.
.REss
.IPs pan[=n:l01:l02:..l10:l11:l12:...ln0:ln1:ln2:...]
Mixes channels arbitrarily, see DOCS/HTML/en/devices.html#audio-dev for details.
.RSss
n: number of output channels (1\-6).
.br
lij: how much of input channel j is mixed into output channel i.
.REss
.IPs sub[=fc:ch]
Add sub-woofer channel.
.RSss
fc: Cutoff frequency for low-pass filter (20Hz to 300Hz) default is 60Hz.
.br
ch: channel number for the sub-channel.
.REss
.IPs surround[=d]
Decoder for matrix encoded surround sound, works on many 2 channel files.
.RSss
d: delay time in ms for the rear speakers (0ms to 1000ms) default is 15ms.
.REss
.IPs delay[=ch1:ch2:...]
Delays the sound output.
Specify the delay separately for each channel in milliseconds (floating point
number between 0 and 1000).
.IPs export[=mmapped_file[:nsamples]]
Exports the incoming signal to other processes using memory mapping (mmap()).
.RSss
mmapped_file: File to map data to (default: ~/.mplayer/mplayer-af_export).
.br
nsamples: number of samples per channel (default: 512)
.REss
.RE
.
.TP
.B \-af-adv <force=(0\-3):list=(filters)> (see \-af option too)
Specify advanced audio filter options:
.
.RSs
.IPs force=<0\-3>
Forces the insertion of audio filters to one of the following:
.RSss
0: Completely automatic insertion of filters (default)
.br
1: Optimize for accuracy
.br
2: Optimize for speed
.br
3: Turn off auto
.REss
.IPs list=<filters>
Same as \-af (see \-af option).
.RE
.
.TP
.B \-afm <driver1,driver2,...>
Specify a priority list of audio drivers to be used, according to their driver
name in codecs.conf.
It falls back to default if none is ok.
.br
.I NOTE:
See \-afm help for a full list of available drivers.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-afm ffmpeg"
try FFmpeg's libavcodec (mp1/\:2/\:3) codecs first
.IPs "\-afm acm,dshow"
try Win32 codecs first
.RE
.PD 1
.
.TP
.B \-aspect <ratio>
Override aspect ratio of movies.
It's autodetected on MPEG files, but can't be autodetected on most AVI files.

.I EXAMPLE:
.PD 0
.RSs
\-aspect 4:3  or \-aspect 1.3333
.br
\-aspect 16:9 or \-aspect 1.7777
.RE
.PD 1
.
.TP
.B \-codecs-file <filename>
Use the specified file instead of system wide installed or builtin codecs.conf.
See also \-afm, \-ac, \-vfm and \-vc.
.TP
.B \-flip \ 
Flip image upside-down.
.TP
.B \-lavdopts <option1:option2:...> (DEBUG CODE)
If decoding with libavcodec, you can specify its parameters here.

.I EXAMPLE:
.PD 0
.RSs
\-lavdopts bug=1
.RE
.PD 1

.RS
.I NOTE:
Just add the values of the things you want to enable.
.br
Available options are:
.RE
.
.RSs
.IPs ec\ \ \ 
error concealment:
.RSss
1: use strong deblock filter for damaged MBs
.br
2: iterative MV search (slow)
.br
3: all (default)
.REss
.IPs er=<value>
error resilience:
.RSss
.br
0: disabled
.br
1: careful (should work with broken encoders)
.br
2: normal (default) (works with compliant encoders)
.br
3: agressive (more checks but might cause problems even for valid bitstreams)
.br
4: very agressive
.REss
.IPs debug=<value>
debug:
.RSss
.br
0: disabled
.br
1: picture info
.br
2: rate control
.br
4: bitstream
.br
8: MB type
.br
16: QP
.br
32: Motion vector
.br
0x0040: Motion vector visualization (use \-noslices)
.br
0x0080: MB skip
.br
0x0100: startcode
.br
0x0200: PTS
.br
0x0400: error resilience
.br
0x0800: memory management control operations (H264)
.br
0x1000: bugs
.REss
.IPs vismv=<value>
vismv:
.RSss
.br
0: disabled
.br
1: visualize forward predicted MVs of P frames
.br
2: visualize forward predicted MVs of B frames
.br
4: visualize backward predicted MVs of B frames
.REss
.IPs bug=<value>
manually work around encoder bugs:
.RSss
0: nothing
.br
1: autodetect bugs (default)
.br
2 (msmpeg4v3): some old lavc generated msmpeg4v3 files (no autodetect)
.br
4 (mpeg4): xvid interlacing bug (autodetected if fourcc==XVIX) 
.br
8 (mpeg4): UMP4 (autodetected if fourcc==UMP4)
.br
16 (mpeg4): padding bug (autodetected)
.br
32 (mpeg4): illegal vlc bug (autodetected per fourcc)
.br
64 (mpeg4): XVID and DIVX qpel bug (autodetected per fourcc/ver)
.br
128 (mpeg4): old standard qpel (autodetected per fourcc/ver)
.br
256 (mpeg4): another qpel bug (autodetected per fourcc/ver)
.br
512 (mpeg4): direct-qpel-blocksize bug (autodetected per fourcc/ver)
.br
1024 (mpeg4): edge padding bug (autodetected per fourcc/ver)
.REss
.IPs idct=<0\-99>
(see lavcopts)
For best decoding quality use the same idct algorithm for decoding and encoding.
This may come at a price in accuracy, though.
.IPs gray\ 
grayscale only decoding (a bit faster than with color)
.RE
.
.TP
.B \-noaspect
Disable automatic movie aspect ratio compensation.
.TP
.B \-noslices
Disable drawing video by 16-pixel height slices/\:bands, instead draws the
whole frame in a single run.
May be faster or slower, depending on card/\:cache.
It has effect only with libmpeg2 and libavcodec codecs.
.TP
.B \-nosound
Do not play/\:encode sound.
.TP
.B \-novideo
Do not play/\:encode video.
.TP
.B \-oldpp <quality> (OBSOLETE)
Use the opendivx postprocessing code instead of the internal one.
Superseded by \-pp, the internal postprocessing offers better
quality and performance.
.
The valid range of \-oldpp values varies by codec, mostly
0\-6, where 0=disable 6=slowest/\:best.
.TP
.B \-pp <quality> (see \-vf pp option too!)
Set postprocess level of the DLL.
This option is NO LONGER USABLE with MPlayer's postprocess filter, but only
with Win32 DirectShow DLLs which have internal postprocessing routines.
.
The valid range of \-pp values varies by codec, mostly
0\-6, where 0=disable 6=slowest/\:best.
.TP
.B \-pphelp (see \-vf pp option too)
Show a summary about the available postprocess filters and their usage.
.TP
.B \-ssf <mode>
Specifies SwScaler parameters.

.I EXAMPLE:
.PD 0
.RSs
\-vf scale \-ssf lgb=3.0
.RE
.PD 1
.
.PD 0
.RSs
.IPs lgb=<0\-100>
Gaussian blur filter (luma)
.IPs cgb=<0\-100>
Gaussian blur filter (chroma)
.IPs ls=<0\-100>
sharpen filter (luma)
.IPs cs=<0\-100>
sharpen filter (chroma)
.IPs chs=<h>
chroma horizontal shifting
.IPs cvs=<v>
chroma vertical shifting
.RE
.PD 1
.
.TP
.B \-stereo <mode>
Select type of MP2/\:MP3 stereo output.
.
.PD 0
.RSs
.IPs 0
Stereo
.IPs 1
Left channel
.IPs 2
Right channel
.RE
.PD 1
.
.TP
.B \-sws <software\ scaler\ type> (see \-vf scale option too)
This option sets the quality (and speed, respectively) of the software scaler,
with the \-zoom option.
For example with x11 or other outputs which lack hardware acceleration.
Possible settings are:
.br
.I NOTE:
For \-sws\ 2 and 7, the sharpness can be set with the scaling parameter (p)
of \-vf scale (0 (soft) \- 100 (sharp)), for \-sws 9, it specifies the filter
length (1 \- 10).

.PD 0
.RSs
.IPs 0
fast bilinear (default)
.IPs 1
bilinear
.IPs 2
bicubic (good quality)
.IPs 3
experimental
.IPs 4
nearest neighbour (bad quality)
.IPs 5
area
.IPs 6
luma bicubic / chroma bilinear
.IPs 7
gauss
.IPs 8
sincR
.IPs 9
lanczos
.IPs 10
bicubic spline
.RE
.PD 1
.
.TP
.B \-vc <[-]codec1,[-]codec2,...[,]>
Specify a priority list of video codecs to be used, according to their codec
name in codecs.conf.
Use a '-' before the codec name to omit it.
.br
.I NOTE:
See \-vc help for a full list of available codecs.
.br
If the list has a trailing ',' it will fallback to codecs not listed.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-vc divx"
force Win32/\:VFW DivX codec, no fallback
.IPs "\-vc divx4,"
try divx4linux codec first, then fallback to others
.IPs "\-vc -divxds,-divx,"
try other codecs except Win32 DivX codecs
.IPs "\-vc ffmpeg12,mpeg12,"
try libavcodec's MPEG1/\:2 codec, then libmpeg2, then others
.RE
.PD 1
.
.TP
.B \-vfm <driver1,driver2,...>
Specify a priority list of video codecs to be used, according to their
names in codecs.conf.
It falls back to default if none is ok.
.br
.I NOTE:
If libdivxdecore support was compiled in, then odivx and divx4 now contains
just the same DivX4 codec, but different APIs to reach it.
For difference between them and when to use which, check the DivX4 section in
the documentation.
.br
See \-vfm help for a full list of available drivers.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-vfm ffmpeg,dshow,vfw"
try the libavcodec, then Directshow, then VFW codecs and fallback to the
others, if still none is ok
.IPs "\-vfm xanim"
try XAnim codecs first
.RE
.PD 1
.
.TP
.B \-x <x> (MPLAYER only)
Scale image to x width (if sw/\:hw scaling available).
Disables aspect calculations.
.TP
.B \-xvidopts <option1:option2:...>
Specify additional parameters when decoding with XviD.
.
.PD 0
.RSs
.IPs dr2\ \ 
Activate direct rendering method 2.
.IPs nodr2
Deactivate direct rendering method 2.
.RE
.PD 1
.
.TP
.B \-xy <value>
.PD 0
.RSs
.IPs value<=8
Scale image by factor <value>.
.IPs value>8
Set width to value and calculate height to keep correct aspect ratio.
.RE
.PD 1
.
.TP
.B \-y <y> (MPLAYER only)
Scale image to y height (if sw/\:hw scaling available).
Disables aspect calculations.
.TP
.B \-zoom \ 
Allow software scaling, where available.
Could be used to force scaling with \-vf scale.
.br
.I NOTE:
\-vf scale will IGNORE options \-x / \-y / \-xy / \-fs / \-aspect without
\-zoom.
.
.
.SH "VIDEO FILTERS"
Video filter are plugins that allow you to modify the video stream and its
properties.
The syntax is:
.TP
.B \-vf <filter1[=parameters],filter2,...>
Setup a chain of video filters.
.TP
.B \-vop <...,filter3[=parameters],filter2,filter1> (OBSOLETE)
Setup a chain of video filters, to be applied in
.B reverse
order.
Deprecated in favor of \-vf.
.PP
The parameters are optional and if omitted, some of them are set to default
values.
Use '-1' to keep the default value.
Parameters w:h means width x height in pixels, x:y means x;y position counted
from the upper left corner of the bigger image.
.br
.I NOTE:
To get a full list of available filters, see \-vf help.

Filters are managed in lists.
There are a few commands to manage the filter list.
.TP
.B \-vf-add <filter1[,filter2,...]>
Appends the filters given as arguments to the filter list.
.TP
.B \-vf-pre <filter1[,filter2,...]>
Prepends the filters given as arguments to the filter list.
.TP
.B \-vf-del <index1[,index2,...]>
Deletes the filters at the given indexes.
Index numbers start at 0, negative numbers address the end of the
list (-1 is the last).
.TP
.B \-vf-clr
Completely empties the filter list.
.PP
With filters that support it, you can access parameters by their name.
.TP
.B \-vf <filter>=help
Prints the parameter names and parameter value ranges for a particular
filter.
.TP
.B \-vf <filter=named_parameter1=value1[:named_parameter2=value2:...]>
Sets a named parameter to the given value.
Use on and off or yes and no to set flag parameters.
.PP
Available filters are:
.
.TP
.B crop[=w:h:x:y]
Crops the given part of the image and discards the rest.
Useful to remove black bands from widescreen movies.
.PD 0
.RSs
.IPs w,h
Cropped width and height, defaults to original width and height.
.IPs x,y
Position of the cropped picture, defaults to center.
.RE
.PD 1
.TP
.B cropdetect[=0\-255]
Calculates necessary cropping parameters and prints the recommended parameters
to stdout.
The threshold can be optionally specified from nothing (0) to everything
(255).
(default: 24)
.TP
.B rectangle[=w:h:x:y]
The plugin responds to the input.conf directive 'change_rectangle'
that takes two parameters.
.PD 0
.RSs
.IPs w,h
width and height (default: -1, maximum possible width where boundaries
are still visible.
.IPs x,y
top left corner position (default: -1, uppermost leftmost)
.RE
.PD 1
.TP
.B expand[=w:h:x:y:o]
Expands (not scales) movie resolution to the given value and places the
unscaled original at coordinates x, y.
Can be used for placing subtitles/\:OSD in the resulting black bands.
.RSs
.IPs w,h
expanded width,height (default: original width,height).
Negative values for w and h are treated as offsets to the original size.

.I EXAMPLE:
.PD 0
.RSs
.IP expand=0:-50:0:0
adds a 50 pixel border to the bottom of the picture
.RE
.PD 1
.IPs x,y
position of original image on the expanded image (default: center)
.IPs o
OSD/subtitle rendering
.RSss
0: disable (default)
.br
1: enable
.REss
.RE
.TP
.B flip\ \ \ 
Flips the image upside down.
See also option \-flip.
.TP
.B mirror\ 
Mirrors the image on the Y axis.
.TP
.B rotate[=<0\-7>]
Rotates and flips (optional) the image +/\:- 90 degrees.
For parameters between 4\-7 rotation is only done if the movie's geometry is
portrait and not landscape.
.TP
.B scale[=w:h[:interlaced[:chr_drop[:param[:presize]]]]]
Scales the image with the software scaler (slow) and performs a YUV<\->RGB
colorspace conversion (also see \-sws option).
.RSs
.IPs w,h\ \ 
scaled width/height (default: original width/height)
.br
.I NOTE:
If \-zoom is used, and underlying filters (including libvo) are
incapable of scaling, it defaults to d_width/\:d_height!
.RSss
 0:   scaled d_width/\:d_height
.br
-1:   original width/\:height
.br
-2:   Calculate w/\:h using the other dimension and the prescaled aspect ratio.
.br
-3:   Calculate w/\:h using the other dimension and the original aspect ratio.
.REss
.IPs interlaced
Toggle interlaced scaling.
.IPs chr_drop
chroma skipping
.RSss
0: use all available input lines for chroma
.br
1: use only every 2. input line for chroma
.br
2: use only every 4. input line for chroma
.br
3: use only every 8. input line for chroma
.REss
.IPs param
scaling parameter (depends upon the scaling method used)
.RSss
\-sws 2 (bicubic):  sharpness (0 (soft) \- 100 (sharp))
.br
\-sws 7 (gaussian): sharpness (0 (soft) \- 100 (sharp))
.br
\-sws 9 (lanczos):  filter length (1\-10)
.REss
.IPs presize
Scale to preset sizes.
.RSss
qntsc:   352x240 (NTSC quarter screen)
.br
qpal:    352x288 (PAL quarter screen)
.br
ntsc:    720x480 (standard NTSC)
.br
pal:     720x576 (standard PAL)
.br
sntsc:   640x480 (square pixel NTSC)
.br
spal:    768x576 (square pixel PAL)
.REss
.RE
.TP
.B dsize={aspect|w:h}
Changes the intended display size/aspect at an arbitrary point in the
filter chain.
Aspect can be given as a fraction (4/3) or floating point number
(1.33).
Alternatively, you may specify the exact display width and height
desired.
Note that this filter does NOT do any scaling itself; it just affects
what later scalers (software or hardware) will do when auto-scaling to
correct aspect.
.TP
.B yuy2\ \ \ 
Forces software YV12/\:I420 or 422P to YUY2 conversion.
Useful for video cards/\:drivers with slow YV12 but fast YUY2 support.
.TP
.B yvu9\ \ \ 
Forces software YVU9 to YV12 colorspace conversion.
Deprecated in favor of the software scaler.
.TP
.B yuvcsp\ 
Clamps YUV color values to the CCIR 601 range without doing real conversion.
.TP
.B rgb2bgr[=swap]
RGB 24/\:32 <\-> BGR 24/\:32 colorspace conversion.
.PD 0
.RSs
.IPs swap
Also perform  R <\-> B swapping.
.RE
.PD 1
.TP
.B palette
RGB/\:BGR 8 \-> 15/\:16/\:24/\:32bpp colorspace conversion using palette.
.TP
.B format[=fourcc]
Restricts the colorspace for the next filter without doing any conversion.
Use together with the scale filter for a real conversion.
For a list of available formats see format=fmt=help.
.PD 0
.RSs
.IPs fourcc
format name like rgb15, bgr24, yv12, etc (default: yuy2)
.RE
.PD 1
.TP
.B pp[=filter1[:option1[:option2...]]/[-]filter2...] (see \-pphelp too)
This option enables usage of MPlayer's internal postprocessing filter,
and also gives an interface where you can pass options to the named filter.
To get a list of available filters, use \-pphelp.
Note that each sub-filter must be separated with a / sign.
.br
Each filter defaults to 'c' (chrominance).
.br
The keywords accept a '-' prefix to disable the option.
.br
A ':' followed by a letter may be appended to the option to indicate its
scope:
.PD 0
.RSs
.IPs a
Automatically switches the filter off if the CPU is too slow.
.IPs c
Do chrominance filtering, too.
.IPs y
Do not do chrominance filtering (only luminance filtering).
.RE
.PD 1

.RS
.I EXAMPLE:
.RE
.PD 0
.RSs
.IPs "\-vf pp=hb/vb/dr/al"
horizontal and vertical deblocking, deringing and automatic
brightness/\:contrast
.IPs "\-vf pp=hb/vb/dr/al/lb"
horizontal and vertical deblocking, deringing, automatic
brightness/\:contrast and linear blend deinterlacer
.IPs "\-vf pp=de/-al"
default filters without brightness/\:contrast correction
.IPs "\-vf pp=de/tn:1:2:3"
Enable default filters & temporal denoiser.
.IPs "\-vf pp=hb:y/vb:a \-autoq 6"
Deblock horizontal only luminance and switch vertical deblocking on or
off automatically depending on available CPU time.
.RE
.PD 1
.TP
.B spp[=quality[:qp]]
simple postprocessing filter
.RSs
.IPs quality
0\-6 
.IPs qp\ \ \ 
force quantization parameter
.RE
.TP
.B test\ \ \ 
Generate various test patterns.
.TP
.B rgbtest
Generate an RGB test pattern useful for detecting RGB vs BGR issues.
You should see a red, green and blue stripe from top to bottom.
.TP
.B lavc[=quality:fps]
Fast software YV12 to MPEG1 conversion with libavcodec for use with DVB/\:DXR3.
Faster and of better quality than \-vf fame.
.RSs
.IPs quality
.RSss
1\-31: fixed qscale
.br
32\-:  fixed bitrate in kBits
.REss
.IPs fps\ \ 
force output fps (float value) (default: 0, autodetect based on height)
.RE
.TP
.B fame\ \ \ 
Fast software YV12 to MPEG1 conversion with libfame for use with DVB/\:DXR3.
.TP
.B dvbscale[=aspect]
Set up optimal scaling for DVB cards, scaling the X axis in hardware and
calculating the Y axis scaling in software to keep aspect.
It's only useful together with expand+scale
(\-vf dvbscale,scale=-1:0,expand=-1:576:-1:-1:1,lavc).
.RSs
.IPs aspect
control aspect ratio, calculate as DVB_HEIGHT*ASPECTRATIO (default:
576*4/3=768), set it to 576*(16/9)=1024 for a 16:9 TV.
.RE
.TP
.B noise[=luma[u][t|a][h][p]:chroma[u][t|a][h][p]]
Adds noise.
.PD 0
.RSs
.IPs <0\-100>
luma noise
.IPs <0\-100>
chroma noise
.IPs u
uniform noise (gaussian otherwise)
.IPs t
temporal noise (noise pattern changes between frames)
.IPs a
averaged temporal noise (smoother, but a lot slower)
.IPs h
high quality (slightly better looking, slightly slower)
.IPs p
mix random noise with a (semi)regular pattern
.RE
.PD 1
.
.TP
.B denoise3d[=luma:chroma:time]
This filter aims to reduce image noise producing smooth images and making still
images really still (This should enhance compressibility.).
It can be given from 0 to 3 parameters.  If you omit a parameter, a reasonable
value will be inferred.
.PD 0
.RSs
.IPs luma\ 
spatial luma strength (default = 4)
.IPs chroma
spatial chroma strength (default = 3)
.IPs time\ 
temporal strength (default = 6)
.RE
.PD 1
.TP
.B hqdn3d[=luma:chroma:time]
High precision/\:quality version of the denoise3d filter.
Parameters and usage are the same.
.TP
.B eq[=bright:cont]
Software equalizer with interactive controls just like the hardware
equalizer, for cards/\:drivers that do not support brightness and
contrast controls in hardware.
Might also be useful with MEncoder, either for fixing poorly captured
movies, or for slightly reducing contrast to mask artifacts and get by
with lower bitrates.
Initial values in the range -100\-100 may be given on the command line.
.TP
.B eq2[=gamma:contrast:brightness:saturation:rg:gg:bg:weight]
Alternative software equalizer that uses lookup tables (very slow),
allowing gamma correction in addition to simple brightness
and contrast adjustment.
Note that it uses the same MMX optimized code as \-vf eq if all
gamma values are 1.0.
The parameters are given as floating point values.
Parameters rg, gg, bg are the independent gamma values for the Red, Green
and Blue components.
The weight parameter can be used to reduce the effect of a high gamma value on
bright image areas, e.g.\& keep them from getting overamplified and just plain
white.
A value of 0.0 turns the gamma correction all the way down while 1.0 leaves it
at its full strength.
Defaults are gamma=1.0, contrast=1.0, brightness=0.0, saturation=1.0,
weight=1.0.
Value ranges are 0.1\-10 for gamma, -2\-2 for contrast (negative values result
in a negative image), -1\-1 for brightness, 0\-3 for saturation and 0\-1 for
weight.
.TP
.B hue[=hue:saturation]
Defaults are hue=0.0, saturation=1.0.
Value ranges are -180\-180 for hue, -2\-2 for saturation (negative values result
in a negative chroma).
.TP
.B halfpack[=f]
Convert planar YUV 4:2:0 to half-height packed 4:2:2, downsampling luma but
keeping all chroma samples.
Useful for output to low-resolution display devices when hardware downscaling
is poor quality or is not available.
Can also be used as a primitive luma-only deinterlacer with very low cpu
usage.
By default, halfpack averages pairs of lines when downsampling.
The optional parameter f can be 0 to only use even lines, or 1 to only use
odd lines.
Any other value for f gives the default (averaging) behavior.
.TP
.B ilpack[=mode]
When interlaced video is stored in YUV 4:2:0 formats, chroma
interlacing does not line up properly due to vertical downsampling of
the chroma channels.
This filter packs the planar 4:2:0 data into YUY2 (4:2:2) format with
the chroma lines in their proper locations, so that in any given
scanline, the luma and chroma data both come from the same field.
The optional argument selects the sampling mode.
By default, linear interpolation (mode 1) is used.
Mode 0 uses nearest-neighbor sampling, which is fast but incorrect.
.TP
.B decimate[=max:hi:lo:frac]
Drops frames that don't differ greatly from the previous frame in
order to reduce framerate.
The argument max (if positive) sets the maximum number of consecutive
frames which can be dropped, or (if negative) the minimum interval
between dropped frames.
A frame is a candidate for dropping if no 8x8 region differs by more
than a threshold of hi, and if not more than frac portion (1 meaning
the whole image) differs by more than a threshold of lo.
Values of hi and lo are for 8x8 pixel blocks and represent actual
pixel value differences, so a threshold of 64 corresponds to 1 unit of
difference for each pixel, or the same spread out differently over the
block.
The main use of this filter is for very-low-bitrate encoding (e.g.\&
streaming over dialup modem), but it could in theory be used for
fixing movies that were inverse-telecined incorrectly.
.TP
.B dint[=sense:level]
Detects and drops first of interlaced frames in video stream.
Values can be from 0.0 to 1.0 \- first (default 0.1) is relative difference
between neighbor pixels, second (default 0.15) is what part of image have to
be detected as interlaced to drop the frame.
.TP
.B lavcdeint
Use libavcodec's deinterlace filter.
.TP
.B kerndeint[=map[:order[:thresh[:sharp[:twoway]]]]]
Donald Graft's adaptive kernel deinterlacer.
Deinterlaces parts of a video if a configurable threshold is exceeded.
.PD 0
.RSs
.IPs "map (0 or 1)"
Paint pixels which exceed the threshold white (default: 0).
.IPs "order (0 or 1)"
Swap fields if 1 (default: 0).
.IPs "thresh (0 - 255)"
Threshold (default 10).
.IPs "sharp (0 or 1)"
Enable additional sharpening (default: 0).
.IPs "twoway (0 or 1)"
Enable twoway sharpening (default: 0).
.RE
.PD 1
.TP
.B unsharp=l|cWxH:amount[:l|cWxH:amount]
Unsharp mask / gaussian blur.
.RSs
.IPs l
Apply effect on luma component.
.IPs c
Apply effect on chroma components.
.IPs WxH
width and height of the matrix, odd sized in both directions
(min = 3x3, max = 13x11 or 11x13, usually something between 3x3 and 7x7)
.IPs amount
Relative amount of sharpness/\:blur to add to the image
(a sane range should be -1.5\-1.5).
.RSss
<0: blur
.br
>0: sharpen
.REss
.RE
.TP
.B swapuv\ 
Swap U & V plane.
.TP
.B il=[d|i][s][:[d|i][s]]
(de)interleaves lines.
The goal of this filter is to add the ability to process interlaced images
pre-field without deinterlacing them.
You can filter your interlaced DVD and play it on a TV without breaking the
interlacing.
While deinterlacing (with the postprocessing filter) removes interlacing
permanently (by smoothing, averaging, etc) deinterleaving splits the frame into
2 fields (so called half pictures), so you can process (filter) them
independently and then re-interleave them.
.PD 0
.RSs
.IPs d
deinterleave (placing one above the other)
.IPs i
interleave
.IPs s
swap fields (exchange even & odd lines)
.RE
.PD 1
.TP
.B fil=[i|d]
(de)interleaves lines.
This filter is very similar to the il filter but much faster, the main
disadvantage is that it doesn't always work.
Especially if combined with other filters it may produce randomly messed
up images, so be happy if it works but don't complain if it doesn't for
your combination of filters. 
.PD 0
.RSs
.IPs d
Deinterleave fields, placing them side by side.
.IPs i
Interleave fields again (reversing the effect of fil=d).
.RE
.PD 1
.TP
.B field[=n]
Extracts a single field from an interlaced image using stride arithmetic
to avoid wasting CPU time.
The optional argument n specifies whether to extract the even or the odd
field (depending on whether n is even or odd).
.TP
.B detc[=var1=value2:var2=value2:...]
Attempts to reverse the 'telecine' process to recover a clean,
non-interlaced stream at film framerate.
This filter is still experimental but seems to be usable.
Please be aware that there is absolutely no use in this filter
unless you see interlacing when playing the movie!
The following arguments (see syntax above) may be used to control
its behavior:
.RSs
.IPs dr
Set the frame dropping mode.
0 (default) means don't drop frames to maintain fixed output framerate.
1 means always drop a frame when there have been no drops or telecine
merges in the past 5 frames.
2 means always maintain exact 5:4 input to output frame ratio.
.I NOTE:
Use mode 1 with MEncoder.
.IPs am
Analysis mode.
Available values are 0 (fixed pattern with initial frame number
specified by fr=#) and 1 (agressive search for telecine pattern).
Default is 1.
.IPs fr
Set initial frame number in sequence.
0\-2 are the three clean progressive frames; 3 and 4 are the two
interlaced frames.
The default, -1, means 'not in telecine sequence'.
The number specified here is the type for the imaginary previous
frame before the movie starts.
.IPs "tr0, tr1, tr2, tr3"
Threshold values to be used in certain modes.
.RE
.TP
.B ivtc[=1]
Experimental 'stateless' inverse telecine filter.
Rather than trying to lock on to a pattern like the detc filter does,
ivtc makes its decisions independently for each frame.
This will give much better results for material that has undergone
heavy editing after telecine was applied, but as a result it is not as
forgiving of noisy input, for example TV capture.
The optional parameter (ivtc=1) corresponds to the dr=1 option for the
detc filter, and should be used with MEncoder but not with MPlayer.
As with detc, you must specify the correct output framerate (\-ofps
23.976) when using MEncoder.
.TP
.B pullup\ 
Third-generation pulldown reversal (inverse telecine) filter,
capable of handling mixed hard-telecine, 24 fps progressive, and 30
fps progressive content.
The pullup filter is designed to be much more robust than detc or
ivtc, but it is still under development.
No configuration options are available yet.
As the underlying pulldown reversal engine is designed to take
advantage of the new features in MPlayer G2, the current
implementation in G1 is meant to serve mainly as a testbed.
.I NOTE:
Presently pullup lacks any way to cap the output framerate, so
during 30 fps progressive sequences or stills, it will output more
than 24 fps, meaning you'll have trouble if you use it with mencoder
\-ofps 23.976.
.TP
.B filmdint[=options]
Inverse telecine filter, similar to the pullup filter above.
It is designed to handle any pulldown pattern, including mixed soft and
hard telecine and limited support for movies that are slowed down or sped
up from their original framerate for TV.
Only the luma plane is used to find the frame breaks.
If a field has no match, it is deinterlaced with simple linear
approximation.
If the source is MPEG-2, libmpeg2 must be used for decoding (not
ffmpeg2!), and this must be the first filter to allow access to the
field-flags set by the MPEG-2 decoder.
Depending on the source mpeg, you may be fine ignoring this advice, as
long as you do not see lots of "Bottom-first field" warnings.
With no options it does normal inverse telecine, and should be used
together with mencoder \-fps 29.97 \-ofps 23.976.
When this filter is used with mplayer, it will result in an uneven
framerate during playback, but it is still generally better than using
pp=lb or no deinterlacing at all.
Multiple options can be specified separated by /.
.RSs
.IPs crop=w:h:x:y
Just like the crop filter, but faster, and works on mixed hard and soft
telecined content as well as when y is not a multiple of 4.
If x or y would require cropping fractional pixels from the chroma
planes, the crop area is extended.
This usually means that x and y must be even.
.IPs io=ifps:ofps
For each ifps input frames the filter will output ofps frames.
The ratio of ifps/ofps should match the \-fps/\-ofps ratio.
This could be used to filter movies that are broadcast on TV at a frame
rate different from their original frame rate.
.IPs luma_only=n
If n is nonzero, the chroma plane is copied unchanged.
This is useful for YV12 sampled TV, which discards one of the chroma
fields.
.IPs mmx2=n
On x86, if n=1, use MMX2 optimized functions, if n=2, use 3DNow!
optimized functions, othewise, use plain C.
If this option is not specified, MMX2 and 3DNow! are auto-detected, use
this option to override auto-detection.
.IPs fast=n
The larger n will speed up the filter at the expense of accuracy.
The default value is n=3.
If n is odd, a frame immediately following a frame marked with the
REPEAT_FIRST_FIELD mpeg flag is assumed to be progressive, thus filter
will not spend any time on soft-telecined MPEG-2 content.
This is the only effect of this flag if MMX2 or 3DNow! is available.
Without MMX2 and 3DNow, if n=0 or 1, the same calculations will be used
as with MMX2.
If n=2 or 3, the number of luma levels used to find the frame breaks is
reduced from 256 to 128, which results in a faster filter without losing
much accuracy.
If n=4 or 5, a faster, but much less accurate metrics will be used to
find the frame breaks, which is more likely to misdetect high vertical
detail as interlaced content.
.IPs verbose=n
If n is nonzero, print the detailed metrics for each frame.
Useful for debugging.
.IPs dint_thres=n
Deinterlace threshold.
Used during de-interlacing of unmatched frames.
Larger value means less deinterlacing, use n=256 to completely turn off
deinterlacing.
Default is n=8.
.IPs comb_thres=n
Threshold for comparing a top and bottom fields.
Defaults to 128.
.IPs diff_thres=n
Threshold to detect temporal change of a field.
Default is 128.
.IPs sad_thres=n
Sum of Absolute Difference threshold, default is 64.
.RE
.TP
.B softpulldown
This filter works only correct with MEncoder and acts on the MPEG2 flags
used for soft 3:2 pulldown (soft telecine).
If you want to use the ivtc or detc filter on movies that are partly soft
telecined, inserting this filter before them should make them more reliable.
Currently only libmpeg2 exports the needed flags.
If used on material that does not set them or if using ffmpeg12, the
filter does nothing.
.TP
.B telecine[=start]
Apply 3:2 'telecine' process to increase framerate by 20%.
This most likely will not work correctly with MPlayer, but it can
be used with 'mencoder \-fps 29.97 \-ofps 29.97 \-vf telecine'.
Both fps options are essential!
(A/V sync will break if they are wrong.)
The optional start parameter tells the filter where in the telecine
pattern to start (0\-3).
.TP
.B tinterlace[=mode]
Temporal field interlacing \- merge pairs of frames into an interlaced
frame, halving the framerate. Even frames are moved into the upper
field, odd frames to the lower field. This can be used to fully reverse
the effect of the tfields filter (in mode 0). Available modes are:
.PD 0
.RSs
.IPs 0
odd frames into upper field, even to lower, generating a full-height
frame at half the framerate
.IPs 1
only output odd frames, even frames are dropped, height unchanged
.IPs 2
only output even frames, odd frames are dropped, height unchanged
.IPs 3
expand each frame to full height, but pad alternate lines with black,
framerate unchanged
.RE
.PD 1
.TP
.B tfields[=mode]
Temporal field separation \- split fields into frames, doubling the
output framerate.
Like the telecine filter, tfields will only work properly with
MEncoder, and only if both \-fps and \-ofps are set to the
desired (double) framerate!
Available modes are:
.PD 0
.RSs
.IPs 0
leave fields unchanged (this will jump/flicker)
.IPs 1
interpolate missing lines (the algorithm used might not be so good)
.IPs 2
translate fields by 1/4 pixel with linear interp (no jump)
.IPs 4
translate fields by 1/4 pixel with 4tap filter (higher quality)
.RE
.PD 1
.TP
.B boxblur=radius:power[:radius:power]
box blur
.PD 0
.RSs
.IPs radius
size of the filter
.IPs power
How often the filter should be applied.
.RE
.PD 1
.TP
.B sab=rad:pf:colorDiff[:rad:pf:colorDiff]
shape adaptive blur
.PD 0
.RSs
.IPs rad\ \ \ 
blur filter strength (~0.1\-4.0) (slower if larger)
.IPs pf\ \ \ 
prefilter strength (~0.1\-2.0)
.IPs colorDiff
How different the pixels are allowed to be considered.
(~0.1\-100.0)
.RE
.PD 1
.TP
.B smartblur=rad:strength:thresh[:rad:strength:thresh]
smart blur
.PD 0
.RSs
.IPs rad\ \ 
blur filter strength (~0.1\-5.0) (slower if larger)
.IPs strength
blur (0.0\-1.0) or sharpen (-1.0\-0.0)
.IPs thresh
filter all (0), filter flat areas (0\-30) or filter edges (-30\-0)
.RE
.PD 1
.TP
.B perspective=x0:y0:x1:y1:x2:y2:x3:y3:t
perspective correction
.PD 0
.RSs
.IPs x0,y0,...
coordinates of the top left, top right, bottom left, bottom right corners
.IPs t\ \ \ \ 
linear (0) or cubic resampling (1)
.RE
.PD 1
.TP
.B 2xsai\ \ 
Use the 2x scale and interpolate algorithm for scaling and smoothing images.
.TP
.B 1bpp\ \ \ 
1bpp bitmap to YUV/BGR 8/15/16/32 conversion
.TP
.B down3dright[=lines]
Reposition and resize stereoscopic images.
Extracts both stereo fields and places them side by side, resizing
them to maintain the original movie aspect.
.PD 0
.RSs
.IPs lines
number of lines to select from the middle of the image (default: 12)
.RE
.PD 1
.TP
.B bmovl=hidden:opaque:<fifo>
Read bitmaps from a FIFO and display them in a window.
.
.PD 0
.RSs
.IPs hidden
sets the default value of the 'hidden' flag (boolean)
.IPs opaque
flag switching between alphablended (transparent) and opaque (fast) mode
.IPs fifo\ 
path/filename for the FIFO (named pipe connecting mplayer \-vf bmovl to the
controlling application)
.RE
.PD 1

.RS
FIFO commands are:
.RE
.PD 0
.RSs
.IPs "RGBA32 width height xpos ypos alpha clear"
followed by width*height*4 Bytes of raw RGBA32 data.
.IPs "ABGR32 width height xpos ypos alpha clear"
followed by width*height*4 Bytes of raw ABGR32 data.
.IPs "RGB24 width height xpos ypos alpha clear"
followed by width*height*3 Bytes of raw RGB32 data.
.IPs "BGR24 width height xpos ypos alpha clear"
followed by width*height*3 Bytes of raw BGR32 data.
.IPs "ALPHA width height xpos ypos alpha"
change alpha for area
.IPs "CLEAR width height xpos ypos"
clear area
.IPs OPAQUE
disable all alpha transparency.
Send "ALPHA 0 0 0 0 0" to enable it again.
.IPs HIDE\ 
hide bitmap
.IPs SHOW\ 
show bitmap
.RE
.PD 1

.RS
Arguments are:
.RE
.PD 0
.RSs
.IPs "width, height"
size of image/area
.IPs "xpos, ypos"
start blitting at X/Y position   
.IPs alpha
set alpha difference.
If you set this to -255 you can then send a sequence of ALPHA-commands to set
the area to -225, -200, -175 etc for a nice fade-in-effect! ;)
.RSss
0:    same as original
.br
255:  makes everything opaque
.br
-255: makes everything transparent
.REss
.IPs clear
clear the framebuffer before blitting.
.RSss
0: The image will just be blitted on top of the old one, so you don't need to
send 1,8MB of RGBA32 data everytime a small part of the screen is updated.
.br
1: clear
.REss
.RE
.PD 1
.TP
.B framestep=I|[i]step
Renders only every nth frame or every Intra (key) frame.

If you call the filter with I (uppercase) as the parameter, then ONLY 
keyframes are rendered.
For DVDs it generally means one in every 15/12  frames (IBBPBBPBBPBBPBB),
for AVI it means every scene change or every keyint value (see \-lavcopts
keyint= value if you use MEncoder to encode the video).

When a key frame is found, an 'I!' string followed by a newline character is
printed, leaving the current line of mplayer/mencoder output on the screen,
because it contains the time (in seconds) and frame number of the keyframe
(You can use this information to split the AVI.).

If you call the filter with a numeric parameter 'step' then only one in
every 'step' frames is rendered.

If you put an 'i' (lowercase) before the number then an I! is printed 
(like the I parameter).

If you give only the i then nothing is done to the frames, only I! is 
printed.
.TP
.B tile=xtile:ytile:output:start:delta
Tile a series of images into a single, bigger image.
If you omit a parameter or use a value less than 0, then the default
value is used. You can also stop when you're OK (... \-vf tile=10:5 ...)
.
It is probably a good idea to put the scale filter before the tile :-)
.br
The parameters are:

.PD 0
.RSs
.IPs xtile
number of tiles on the x axis (default: 5)
.IPs ytile
number of tiles on the y axis (default: 5)
.IPs output
Render the tile when 'output' number of frames are reached, where 'output'
should be a number less than xtile * ytile.
Missing tiles are left blank.
You could, for example, write an 8 * 7 tile every 50 frames to have one
image every 2 seconds @ 25 fps.
.IPs start  
pixel at the start (x/y) (default: 2)
.IPs delta
pixel between 2 tiles, (x/y) (default: 4)
.RE
.PD 1
.TP
.B delogo[=x:y:w:h:t]
Suppresses a TV station logo by a simple interpolation of the
surrounding pixels. Just set a rectangle covering the logo and watch
it disappear (and sometimes something even uglier appear \- your
mileage may vary).
.PD 0
.RSs
.IPs x,y
Position of the top left corner of the logo.
.IPs w,h
Width and height of the cleared rectangle.
.IPs t
Thickness of the fuzzy edge of the rectangle (added to w and h). When
set to -1, a green rectangle is drawn on the screen to simplify finding
the right x,y,w,h parameters.
.RE
.PD 1
.TP
.B zrmjpeg[=options]
Software YV12 to MJPEG encoder for use with the zr2 video
output device.
.RSs
.IPs maxheight=h|maxwidth=w
These options set the maximum width and height the zr card
can handle (the MPlayer filter layer currently cannot query those).
.IPs {dc10+,dc10,buz,lml33}-{PAL|NTSC}
Use these options to set maxwidth and maxheight automatically to the 
values known for card/mode combo.
For example, valid options are: dc10-PAL and buz-NTSC (default: dc10+PAL)
.IPs color|bw
Select color or black and white encoding.
Black and white encoding is faster.
Color is the default.
.IPs hdec={1,2,4}
Horizontal decimation 1, 2 or 4.
.IPs vdec={1,2,4}
Vertical decimation 1, 2 or 4.
.IPs quality=1-20
Set JPEG compression quality [BEST] 1 - 20 [VERY BAD].
.IPs fd|nofd
By default, decimation is only performed if the zoran hardware
can upscale the resulting MJPEG images to the original size.
The option fd instructs the filter to always perform the requested
decimation (ugly).
.RE
.
.
.SH "VIDEO OUTPUT DRIVERS (MPLAYER ONLY)"
Video output drivers are interfaces to different output facilities.
The syntax is:
.TP
.B \-vo <driver1[:option],driver2,...[,]>
Specify a priority list of video output drivers to be used.
.PP
If the list has a trailing ',' it will fall back to drivers not listed on the
command line.
Suboptions are optional and can mostly be omitted.
.br
.I NOTE:
See \-vo help for a list of compiled-in drivers.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-vo xmga,xv,"
Try the Matrox X11 driver, then the Xv driver, then others.
.br
.IPs "\-vo directx:noaccel"
Uses the DirectX driver with acceleration features turned off.
.RE
.PD 1
.

Available output drivers are:
.
.TP
.B xv (X11 only)
Uses the XVideo extension of XFree86 4.x to enable hardware
accelerated playback.
If you cannot use a hardware specific driver, this is probably
the best option.
.PD 0
.RSs
.IPs port=<number>
Select a specific XVideo port.
.RE
.PD 1
.TP
.B x11 (X11 only)
Shared memory output driver without hardware acceleration that
works whenever X11 is present.
.TP
.B xover (X11 only)
Adds X11 support to all overlay based video output drivers.
Currently only supported by tdfx_vid.
.TP
.B xvmc (X11 only)
This video output driver employs the XvMC (X Video Motion Compensation)
extension of XFree86 4.x.
.TP
.B dga (X11 only)
Output video through the XFree86 Direct Graphics Access extension.
Considered obsolete.
.TP
.B sdl\ \ \ \ 
Highly platform independent SDL (Simple Directmedia Layer) library
output driver.
.TP
.B vidix\ \ 
VIDIX (VIDeo Interface for *niX) is an interface to the
video acceleration features of different graphics cards.
Very fast output driver on cards that support it.
.TP
.B xvidix (X11 only)
VIDIX running under X11.
.TP
.B cvidix\ 
VIDIX running in a console.
.TP
.B winvidix (Windows only)
Windows version of the VIDIX driver.
.TP
.B directx (Windows only)
Output driver that uses the DirectX interface.
.PD 0
.RSs
.IPs noaccel
Turns off hardware acceleration.
Try this option if you have display problems.
.RE
.PD 1
.TP
.B fbdev (Linux only)
Uses the kernel framebuffer to output video.
.TP
.B fbdev2 (Linux only)
Uses the kernel framebuffer to output video,
alternative implementation.
.TP
.B vesa\ \ \ 
Very general output driver that should work on any VESA VBE 2.0
compatible card.
.PD 0
.RSs
.IPs dga\ \ 
Turns on DGA mode.
.IPs nodga
Turns off DGA mode.
.IPs vidix
FIXME: document this
.IPs lvo\ \ 
FIXME: document this
.RE
.PD 1
.TP
.B svga\ \ \ 
Output video using the SVGA library.
.TP
.B gl\ \ \ \ \ 
OpenGL output driver.
.TP
.B gl2\ \ \ \ 
OpenGL output driver, second generation.
.TP
.B null\ \ \ 
Produces no video output.
Useful for benchmarking.
.TP
.B aa\ \ \ \ \ 
ASCII art output driver that works on a text console.
.TP
.B bl\ \ \ \ \ 
Video playback using the Blinkenlights UDP protocol.
This driver is highly hardware specific.
.TP
.B ggi\ \ \ \ 
Output driver for the GGI graphics system.
.TP
.B directfb
Play video using the DirectFB library.
.PD 0
.RSs
.IPs number
Selects layer.
.RE
.PD 1
.TP
.B directfb2
Play video using the DirectFB library, second generation.
.TP
.B dfbmga\ 
Matrox G400/G450/G550 specific output driver that uses the DirectFB library.
Enables CRTC2 (second head), displaying video independently of the first head.
.TP
.B mga (Linux only)
Matrox specific output driver that makes use of the YUV back
end scaler on Gxxx cards through a kernel module.
If you have a Matrox card, this is the fastest option.
.TP
.B xmga (Linux, X11 only)
The mga output driver, running in an X11 window.
.TP
.B syncfb\ 
Video output driver for the SyncFB kernel module, which provides
special hardware features of Matrox Gxxx cards like hardware
deinterlacing, scaling and synchronizing your video output to
the vertical retrace of your monitor.
.TP
.B 3dfx (Linux only)
This driver employs the tdfx framebuffer driver to play movies with
YUV acceleration.
.TP
.B tdfx_vid (Linux only)
3Dfx specific output driver.
Works in conjunction with a kernel module.
.TP
.B dxr2\ \ \ 
Creative DXR2 specific output driver.
Also see the -dxr2 option.
.PD 0
.RSs
.IPs x11
Enables overlay.
.IPs xv
Enables overlay.
.RE
.PD 1
.TP
.B dxr3\ \ \ 
Sigma Designs em8300 MPEG decoder chip (Creative DXR3, Sigma Designs
Hollywood Plus) specific output driver.
Also see the lavc video filter.
.PD 0
.RSs
.IPs overlay
Activates the overlay instead of TVOut.
.IPs prebuf
Turns on prebuffering.
.IPs sync
Will turn on the new sync-engine.
.IPs norm=<norm>
Specifies the TV norm.
.RSss
0: Does not change current norm (default).
.br
1: Auto-adjust using PAL/NTSC.
.br
2: Auto-adjust using PAL/PAL-60.
.br
3: PAL
.br
4: PAL-60
.br
5: NTSC
.REss
.IPs device=<number>
Specifies the device number to use if you have more than one em8300 card.
.RE
.PD 1
.TP
.B mpegpes
DVB specific output driver.
.TP
.B zr\ \ \ \ \ 
Output driver for a number of MJPEG capture/playback cards.
Also see the -zr* options and -zrhelp.
.TP
.B zr2\ \ \ \ 
Output driver for a number of MJPEG capture/playback cards, second generation.
Also see the zrmjpeg video filter.
.TP
.B md5\ \ \ \ 
Writes md5sums for each frame into a file called 'md5' in the
current directory.
Useful for debugging.
.TP
.B yuv4mpeg
Transforms the video stream into a sequence of uncompressed YUV 4:2:0
images and stores it in a file called 'stream.yuv' in the current
directory.
Useful if you want to process the video with the mjpegtools suite.
.TP
.B gif89a\ 
Output each frame into a GIF file in the current directory.
Each file takes the frame number padded with leading zeros as name.
.TP
.B jpeg\ \ \ 
Output each frame into a JPEG file in the current directory.
Each file takes the frame number padded with leading zeros as name.
.TP
.B pgm\ \ \ \ 
Output each frame into a PGM file in the current directory.
Each file takes the frame number padded with leading zeros as name.
.TP
.B png\ \ \ \ 
Output each frame into a PNG file in the current directory.
Each file takes the frame number padded with leading zeros as name.
.TP
.B tga\ \ \ \ 
Output each frame into a Targa file in the current directory.
Each file takes the frame number padded with leading zeros as name.
.
.
.SH "GENERAL ENCODING OPTIONS (MENCODER ONLY)"
.TP
.B \-audio-delay <0.0\-...>
Sets the audio delay field in the header.
Default is 0.0, negative values do not work.
This does not delay the audio while encoding, but the player will see the
default audio delay, sparing you the use of the \-delay option.
.TP
.B \-audio-density <1\-50>
Number of audio chunks per second (default is 2 for 0.5s long audio chunks).
.br
.I NOTE:
CBR only, VBR ignores this as it puts each packet in a new chunk.
.TP
.B \-audio-preload <0.0\-2.0>
Sets up audio buffering time interval (default: 0.5s).
.TP
.B \-endpos <[[hh:]mm:]ss[.ms]|size[b|kb|mb]> (see \-ss and \-sb option too)
Stop encoding at given time or byte position.
Can be specified in many ways:
.br
.I NOTE:
Byte position won't be accurate, as it can only stop at
a frame boundary.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-endpos 56"
encode only 56 seconds
.IPs "\-endpos 01:10:00"
encode only 1 hour 10 minutes
.IPs "\-endpos 100mb"
encode only 100 MBytes
.RE
.PD 1
.
.TP
.B \-ffourcc <fourcc>
Can be used to override the video fourcc of the output file.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-ffourcc div3"
will have the output file contain 'div3' as video fourcc.
.RE
.PD 1
.
.TP
.B \-include <configuration\ file>
Specify configuration file to be parsed after the default ones.
.TP
.B \-info <option1:option2:...> (AVI only)
Specify the info header of the resulting AVI file.
.br
Available options are:
.
.RSs
.IPs help\ 
show this description
.IPs name=<value>
title of the subject of the file
.IPs artist=<value>
artist or author of the original subject of the file
.IPs genre=<value>
original work category
.IPs subject=<value>
contents of the file
.IPs copyright=<value>
copyright information for the file
.IPs srcform=<value>
original form of the material that was digitized
.IPs comment=<value>
general comments about the file or the subject of the file
.RE
.
.TP
.B \-noautoexpand
Do not automatically insert the expand filter into the MEncoder filter chain.
Useful to control at which point of the filter chain subtitles are rendered
when hardcoding subtitles onto a movie.
.TP
.B \-noskip
Do not skip frames.
.TP
.B \-o <filename>
Outputs to the given filename, instead of the default 'test.avi'.
.TP
.B \-oac <codec name>
Encode with the given audio codec.
Use \-oac help to get a list of available codecs.
(no default set)

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-oac copy"
no encoding, just streamcopy
.IPs "\-oac pcm"
encode to uncompressed PCM
.IPs "\-oac mp3lame"
encode to MP3 (using Lame)
.IPs "\-oac lavc"
encode with a libavcodec codec
.RE
.PD 1
.
.TP
.B \-of <format> (BETA CODE!)
Encode to the specified format.
Use \-of help to get a list of available formats.

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-of avi"
encode to avi (default)
.IPs "\-of mpeg"
encode to mpeg
.RE
.PD 1
.
.TP
.B \-ofps <fps>
The output file will have different frame/\:sec than the source.
You MUST set it for variable fps (asf, some mov) and progressive
(29.97fps telecined mpeg) files.
.TP
.B \-ovc <codec name>
Encode with the given video codec.
Use \-ovc help to get a list of available codecs.
(no default set)

.I EXAMPLE:
.PD 0
.RSs
.IPs "\-ovc copy"
no encoding, just streamcopy
.IPs "\-ovc divx4"
encode to DivX4/\:DivX5
.IPs "\-ovc rawrgb"
encode to uncompressed RGB24
.IPs "\-ovc rawyuv"
encode to uncompressed YUV (I420)
.IPs "\-ovc lavc"
encode with a libavcodec codecs
.RE
.PD 1
.
.TP
.B \-passlogfile <filename>
When encoding in 2pass mode, MEncoder dumps first pass' informations
to the given file instead of the default divx2pass.log.
.TP
.B \-skiplimit <value>
Maximum skippable frames after non-skipped one
(\-noskiplimit for unlimited number).
.TP
.B \-v, \-verbose
Increment verbose level (more \-v means more verbosity).
.
.PD 0
.RSs
.IPs 0
only some informal output (default)
.IPs 1
some basic debug infos, avi header, function values (init debug)
.IPs 2
print avi indexes, chunk inputs, more debug infos (player debug)
.IPs 3
prints everything related to input parsers (parser debug)
.RE
.PD 1
.
.TP
.B \-vobsubout <basename>
Specify the basename for the output .idx and .sub files.
This turns off subtitle rendering in the encoded movie and diverts it to
Vobsub subtitle files.
.TP
.B \-vobsuboutid <langid>
Specify the language two letter code for the subtitles.
This overrides what is read from the DVD or the .ifo file.
.TP
.B \-vobsuboutindex <index>
Specify the index of the subtitles in the output files.
(default: 0)
.
.
.SH "CODEC SPECIFIC ENCODING OPTIONS (MENCODER ONLY)"
You can specify codec specific encoding parameters using the following
syntax:
.TP
.B \-<codec>opts <option1[=value],option2,...>
.RE
.br
.PP
Where <codec> may be: lavc, xvidenc, divx4, lame
.
.
.SS divx4 (\-divx4opts)
divx4 is obsolete and only supported for completeness.
For details about divx4 options, read the source, most options are not
described here.
.TP
.B help\ \ \ 
get help
.TP
.B br=<value>
specify bitrate
.RSs
.IPs 4\-16000
(in kbit)
.IPs 16001\-24000000
(in bit)
.RE
.TP
.B key=<value>
maximum keyframe interval (in frames)
.TP
.B deinterlace
enable deinterlacing (avoid it, DivX4 is buggy)
.TP
.B q=<1\-5>
quality (1\-fastest, 5\-best)
.TP
.B min_quant=<1\-31>
minimum quantizer
.TP
.B max_quant=<1\-31>
maximum quantizer
.TP
.B rc_period=<value>
rate control period
.TP
.B rc_reaction_period=<value>
rate control reaction period
.TP
.B rc_reaction_ratio=<value>
rate control reaction ratio
.TP
.B crispness=<0\-100>
specify crispness/\:smoothness
.TP
.B pass=<1\-2>
With this you can encode 2pass DivX4 files.
First encode with pass=1, then with the same parameters, encode with
pass=2.
.TP
.B vbrpass=<0\-2>
Override the pass argument and use XviD VBR Library instead of DivX4 VBR.
Available options are:
.
.RSs
.IPs 0
one pass encoding (as in not putting pass on the command line)
.IPs 1
Analysis (first) pass of two pass encoding.
The resulting AVI file can be directed to /dev/null.
.IPs 2
Final (second) pass of two pass encoding.
.RE
.
.
.SS lame (\-lameopts)
.
.TP
.B help\ \ \ 
get help
.TP
.B vbr=<0\-4>
variable bitrate method
.PD 0
.RSs
.IPs 0
cbr
.IPs 1
mt
.IPs 2
rh (default)
.IPs 3
abr
.IPs 4
mtrh
.RE
.PD 1
.TP
.B abr\ \ \ \ 
average bitrate
.TP
.B cbr\ \ \ \ 
constant bitrate.
.br
Forces also CBR mode encoding on subsequent ABR presets modes
.TP
.B br=<0\-1024>
specify bitrate in kBit (CBR and ABR only)
.TP
.B q=<0\-9>
quality (0\-highest, 9\-lowest) (only for VBR)
.TP
.B aq=<0\-9>
algorithmic quality (0\-best/\:slowest, 9\-worst/\:fastest)
.TP
.B ratio=<1\-100>
compression ratio
.TP
.B vol=<0\-10>
set audio input gain
.TP
.B mode=<0\-3>
(default: auto)
.PD 0
.RSs
.IPs 0
stereo
.IPs 1
joint-stereo
.IPs 2
dualchannel
.IPs 3
mono
.RE
.PD 1
.TP
.B padding=<0\-2>
.PD 0
.RSs
.IPs 0
no
.IPs 1
all
.IPs 2
adjust
.RE
.PD 1
.TP
.B fast\ \ \ 
switch on faster encoding on subsequent VBR presets modes, slightly lower 
quality and higher bitrates.
.TP
.B highpassfreq=<freq>
Set a highpass filtering frequency in Hz.
Frequencies below the specified one will be cut off.
A value of -1 will disable filtering, a value of 'auto'
will let lame choose values automatically.
.TP
.B lowpassfreq=<freq>
Set a lowpass filtering frequency in Hz.
Frequencies above the specified one will be cut off.
A value of -1 will disable filtering, a value of 'auto'
will let lame choose values automatically.
.TP
.B preset=<value>
preset values
.RSs
.IPs medium
VBR encoding, good quality, 150\-180 kbps bitrate range.
.IPs standard
VBR encoding, high quality, 170\-210 kbps bitrate range.
.IPs extreme
VBR encoding, very high quality, 200\-240 kbps bitrate range.
.IPs insane
CBR encoding, highest preset quality, 320 kbps bitrate.
.IPs <8\-320>
ABR encoding at average given kbps bitrate.
.RE

.RS
.I EXAMPLE:
.RE
.PD 0
.RSs
.IPs fast:preset=standard
for most people on most music and already quite high in quality.
.IPs cbr:preset=192
encode with ABR presets at a 192 kbps forced constant bitrate.
.IPs preset=172
encode with ABR presets at a 172 kbps average bitrate.
.IPs preset=extreme
for people with extremely good hearing and similar equipment.
.IPs preset=help
print additional options and informations on presets settings.
.RE
.PD 1
.
.
.SS lavc (\-lavcopts)
Many lavc options are very specialized and tersely documented.
Read the source for full details.
.PP
.I EXAMPLE:
.PD 0
.RSs
.IPs vcodec=msmpeg4:vbitrate=1800:vhq:keyint=250
.RE
.PD 1
.
.TP
.B acodec=<value>
Audio codec (default: mp2):
.PD 0
.RSs
.IPs mp2
MPEG Layer 2
.IPs mp3
MPEG Layer 3
.IPs ac3
AC3
.IPs adpcm_ima_wav
IMA Adaptive PCM (4bits per sample, 4:1 compression)
.RE
.PD 1
.TP
.B abitrate=<value>
Audio bitrate in kBit (default 224).
.TP
.B atag=<value>
Use the specified Windows audio format tag (e.g.\& atag=0x55).
.TP
.B vcodec=<value>
use the specified codec (default: mpeg4):
.PD 0
.RSs
.IPs mjpeg
Motion JPEG
.IPs ljpeg
Lossless JPEG
.IPs h263\ 
H263
.IPs h263p
H263 Plus
.IPs mpeg4
DivX 4/\:5
.IPs msmpeg4
DivX 3
.IPs msmpeg4v2
MS MPEG4v2
.IPs wmv1
Windows Media Video, version 1 (aka WMV7)
.IPs wmv2
Windows Media Video, version 2 (aka WMV8)
.IPs rv10
an old RealVideo codec
.IPs mpeg1video
MPEG1 video
.IPs mpeg2video
MPEG2 video
.IPs huffyuv
HuffYUV
.IPs asv1
ASUS Video v1
.IPs asv2
ASUS Video v2
.IPs ffv1
FFmpeg's lossless video codec
.RE
.PD 1
.TP
.B vqmin=<1\-31>
minimum quantizer (pass\ 1/\:2)
.RSs
.IPs 1
Not recommended (much larger file, little quality difference and weird side
effects: msmpeg4, h263 will be very low quality, ratecontrol will be confused
resulting in lower quality and some decoders will not be able to decode it).
.IPs 2
Recommended for normal mpeg4/mpeg1video encoding (default).
.IPs 3
Recommended for h263(p)/msmpeg4.  The reason for preferring 3 over 2 is that
2 could lead to overflows (this will be fixed for h263(p) by changing the
quantizer per MB in the future, msmpeg4 cannot be fixed as it does not support
that).
.RE
.TP
.B lmin=<0.01\-255.0>
Minimum lagrange multiplier for ratecontrol, you probably want it to be
equal to or lower than vqmin. (default: 2.0)
.RE
.TP
.B lmax=<0.01\-255.0>
Maximum lagrange multiplier for ratecontrol. (default: 31.0)
.RE
.TP
.B vqscale=<1\-31>
Constant quantizer /\: constant quality encoding (selects fixed quantizer mode).
A lower value means better quality but larger files (default: 0 (disabled)).
1 is not recommended (see \-vqmin for details).
.TP
.B vqmax=<1\-31>
maximum quantizer (pass\ 1/\:2) 10\-31 should be a sane range (default: 31)
.TP
.B mbqmin=<1\-31>
minimum macroblock quantizer (pass\ 1/\:2) (default: 2)
.TP
.B mbqmax=<1\-31>
maximum macroblock quantizer (pass\ 1/\:2) (default: 31)
.TP
.B vqdiff=<1\-31>
maximum quantizer difference between I or P frames (pass\ 1/\:2) (default: 3)
.TP
.B vmax_b_frames=<0\-4>
maximum number of B frames between non B frames:
.PD 0
.RSs
.IPs 0
no B frames (default)
.IPs 0\-2
sane range for MPEG4
.RE
.PD 1
.TP
.B vme=<0\-5>
motion estimation method.
.I NOTE:
0\-3 currently ignores the amount of Bits spent,
so quality may be low.
Available methods are:
.PD 0
.RSs
.IPs 0
none (very low quality)
.IPs 1
full (slow)
.IPs 2
log (low quality)
.IPs 3
phods (low quality)
.IPs 4
EPZS (default)
.IPs 5
X1 (experimental)
.RE
.PD 1
.TP
.B me_range=<0\-9999>
motion estimation search range, 0 (default) means unlimited
.TP
.B mbd=<0\-2>
Macroblock decision algorithm (high quality mode), encode each macro
block in all modes and choose the best.
This is slow but results in better quality and file size.
.PD 0
.RSs
.IPs 0
use mbcmp (default)
.IPs 1
select the MB mode which needs the fewest bits (=vhq)
.IPs 2
select the MB mode which has the best rate distortion
.RE
.PD 1
.TP
.B vhq
Same as mbd=1, kept for compatibility reasons.
.TP
.B v4mv\ \ \ 
Allow 4 motion vectors per macroblock (slightly better quality).
(default: disabled)
.TP
.B obmc\ \ \ 
overlapped block motion compensation (H263+)
.TP
.B loop\ \ \ 
loop filter (H263+)
note, this is broken
.TP
.B inter_threshold <-1000\-1000>
Does absolutely nothing at the moment.
.TP
.B keyint=<0\-300>
maximum interval between keyframes in frames.
Keyframes are needed for seeking as seeking is only possible to a keyframe but
keyframes need more space than other frames so larger numbers here mean
slightly smaller files, but less precise seeking, 0 means no key frames.
Values >300 are not recommended as the quality might be bad depending upon
decoder, encoder and luck.
For a strict MPEG1/\:2/\:4 compliance this would have to be <=132.
(default: 250 or one key frame every ten seconds in a 25fps movie)
.TP
.B sc_threshold=<-1000000\-1000000>
Threshold for scene change detection.
Libavcodec inserts a keyframe when it detects a scene change. 
You can specify the sensitivity of the detection with this option.
-1000000 means there is a scene change detected at every frame, 1000000 means
no scene changes are detected (default 0).
.TP
.B vb_strategy=<0\-1>
strategy to choose between I/\:P/\:B frames (pass\ 2):
.RSs
.IPs 0
always use the maximum number of B frames (default)
.IPs 1
avoid B frames in high motion scenes (will cause bitrate misprediction)
.RE
.TP
.B vpass=<1\-2>
Activates internal two pass mode, only specify if you wish to use two pass
encoding (default: disabled).
.PD 0
.RSs
.IPs 1
first pass
.IPs 2
second pass
.RE
.PD 1

.RS
huffyuv:
.RE
.PD 0
.RSs
.IPs pass 1
saves statistics
.IPs pass 2
encodes with an optimal Huffman table based upon pass 1 statistics.
.RE
.PD 1
.TP
.B aspect=<x/y>
Store movie aspect internally, just like MPEG files.
Much nicer solution than rescaling, because quality isn't decreased.
Only MPlayer will play these files correctly, other players will display
them with wrong aspect.
The aspect parameter can be given as a ratio or a floating point number.

.RS
.I EXAMPLE:
.RE
.RSs
.PD 0
.IPs "aspect=16/9 or aspect=1.78"
.PD 1
.RE
.TP
.B autoaspect
Same as the aspect option, but automatically computes aspect, taking
into account all the adjustments (crop/expand/scale/etc.) made in the
filter chain.
.TP
.B vbitrate=<value>
specify bitrate (pass\ 1/\:2).  Warning: 1kBit = 1000 Bits.
.RSs
.IPs 4\-16000
(in kbit)
.IPs 16001\-24000000
(in bit)
.IPs 800
default
.RE
.TP
.B vratetol=<value>
approximated filesize tolerance in kBit. 1000\-100000 is a sane range.
(warning: 1kBit = 1000 Bits)
(default: 8000)
.TP
.B vrc_maxrate=<value>
maximum bitrate in kbit/\:sec (pass\ 1/\:2)
.TP
.B vrc_minrate=<value>
minimum bitrate in kbit/\:sec (pass\ 1/\:2)
.TP
.B vrc_buf_size=<value>
buffer size in kbit (pass\ 1/\:2).
For MPEG1/2 this also sets the vbv buffer size, use 327 for VCD,
917 for SVCD and 1835 for DVD.
.I NOTE:
vratetol should not be too large during the second pass or there might
be problems if vrc_(min|max)rate is used.
.TP
.B vrc_buf_aggressivity
currently useless
.TP
.B vrc_strategy
Dummy, reserved for future use.
.TP
.B vb_qfactor=<-31.0\-31.0>
quantizer factor between B and non B frames (pass\ 1/\:2) (default: 1.25)
.TP
.B vi_qfactor=<-31.0\-31.0>
(pass\ 1/\:2) (default: 0.8)
.TP
.B vb_qoffset=<-31.0\-31.0>
quantizer offset between B and non B frames (pass\ 1/\:2) (default: 1.25)
.TP
.B vi_qoffset=<-31.0\-31.0>
(pass\ 1/\:2) (default: 0.0)
.br
if v{b|i}_qfactor > 0
.br
I/\:B-Frame quantizer = P-Frame quantizer * v{b|i}_qfactor + v{b|i}_qoffset
.br
else
.br
do normal ratecontrol (dont lock to next P frame quantizer) and
set q= -q * v{b|i}_qfactor + v{b|i}_qoffset
.TP
.B \ 
Tip: To do constant quantizer encoding with different quantizers for
I/P and B frames you can use:
lmin= <ip_quant>:lmax= <ip_quant>:vb_qfactor= <b_quant/ip_quant>
.TP
.B vqblur=<0.0\-1.0> (pass 1)
Quantizer blur, larger values will average the quantizer more over
time (slower change).
.RSs
.IPs 0.0
qblur disabled
.IPs 0.5
(default)
.IPs 1.0
average the quantizer over all previous frames
.RE
.TP
.B vqblur=<0.0\-99.0> (pass 2)
Quantizer gaussian blur, larger values will average the quantizer more
over time (slower change) (default: 0.5).
.TP
.B vqcomp=<value>
quantizer compression, depends upon vrc_eq (pass\ 1/\:2) (default: 0.5)
.TP
.B vrc_eq=<equation>
main ratecontrol equation (pass\ 1/\:2):
.RE
.RSs
.IPs 1\ \ \ \ 
constant bitrate
.IPs tex\ \ 
constant quality
.IPs 1+(tex/\:avgTex-1)*qComp
approximately the equation of the old ratecontrol code
.IPs tex^qComp
with qcomp 0.5 or something like that (default)
.RE
.PP
.RS
infix operators: +,-,*,/,^
.RE
.PP
.RS
variables:
.RE
.RSs
.IPs tex\ \ 
texture complexity
.IPs iTex,pTex
intra, non intra texture complexity
.IPs avgTex
average texture complexity
.IPs avgIITex
average intra texture complexity in I frames
.IPs avgPITex
average intra texture complexity in P frames
.IPs avgPPTex
average non intra texture complexity in P frames
.IPs avgBPTex
average non intra texture complexity in B frames
.IPs mv\ \ \ 
Bits used for motion vectors
.IPs fCode
maximum length of motion vector in log2 scale
.IPs iCount
number of intra macro blocks / number of macro blocks
.IPs var\ \ 
spatial complexity
.IPs mcVar
temporal complexity
.IPs qComp
qcomp from the command line
.IPs "isI, isP, isB"
is 1 if picture type is I/\:P/\:B else 0
.IPs Pi,E\ 
see your favorite math book
.RE
.PP
.RS
functions:
.RE
.RSs
.IPs max(a,b),min(a,b)
maximum / minimum
.IPs gt(a,b)
is 1 if a>b, 0 otherwise
.IPs lt(a,b)
is 1 if a<b, 0 otherwise
.IPs eq(a,b)
is 1 if a==b, 0 otherwise
.IPs "sin, cos, tan, sinh, cosh, tanh, exp, log, abs"
.RE
.
.TP
.B vrc_override=<options>
User specified quality for specific parts (ending, credits, ..) (pass\ 1/\:2).
The options are <start-frame>, <end-frame>, <quality>[/\:<start-frame>,
<end-frame>, <quality>[/...]]:
.RSs
.IPs "quality (2\-31)"
quantizer
.IPs "quality (-500\-0)"
quality correction in %
.RE
.TP
.B vrc_init_cplx=<0\-1000>
initial complexity (pass\ 1)
.TP
.B vqsquish=<0,1>
specify how to keep the quantizer between qmin and qmax (pass\ 1/\:2):
.PD 0
.RSs
.IPs 0
use clipping
.IPs 1
use a nice differentiable function (default)
.RE
.PD 1
.TP
.B vlelim=<-1000\-1000>
single coefficient elimination threshold for luminance.
Negative values will also consider the dc coefficient (should be at least -4
or lower for encoding at quant=1):
.PD 0
.RSs
.IPs 0
disabled (default)
.IPs -4
(JVT recommendation)
.RE
.PD 1
.TP
.B vcelim=<-1000\-1000>
single coefficient elimination threshold for chrominance.
Negative values will also consider the dc coefficient (should be at least -4
or lower for encoding at quant=1):
.PD 0
.RSs
.IPs 0
disabled (default)
.IPs 7
(JVT recommendation)
.RE
.TP
.B vstrict=<-1,0,1>
strict standard compliance
.RSs
.IPs 0
disabled (default)
.IPs 1
only recommended if you want to feed the output into the mpeg4 reference
decoder
.IPs -1
allows non-standard YV12 huffyuv encoding (20% smaller files, but cannot be
played by the official huffyuv codec)
.RE
.PD 1
.TP
.B vdpart\ 
data partitioning.
Adds 2 Bytes per video packet, improves error-resistance when transferring over
unreliable channels (eg.\& streaming over the internet)
Each video packet will be encoded in 3 separate partitions:
.PD 0
.RSs
.IPs "1. MVs"
(movement)
.IPs "2. DC coefficients"
(low res picture)
.IPs "3. AC coefficients"
(details)
.RE
.PD 1
.TP
.B \ 
MV & DC are most important, loosing them looks far worse than loosing
the AC and the 1. & 2. partition.
(MV&DC) are far smaller than the 3. partition (AC) meaning that errors
will hit the AC partition much more often than the MV&DC partitions.
Thus, the picture will look better with partitioning than without,
as without partitioning an error will trash AC/DC/MV equally.
.TP
.B vpsize=<0\-10000>
video packet size, improves error-resistance (see \-vdpart option too):
.RSs
.IPs 0
disabled (default)
.IPs 100-1000
good choice
.RE
.TP
.B ss\ \ \ \ \ 
slice structured mode for H263+
.TP
.B gray\ \ \ 
grayscale only encoding (faster) (default: disabled)
.TP
.B vfdct=<0\-10>
dct algorithm:
.PD 0
.RSs
.IPs 0
automatically select a good one (default)
.IPs 1
fast integer
.IPs 2
accurate integer
.IPs 3
mmx
.IPs 4
mlib
.IPs 5
altivec
.IPs 6
floating point AAN
.RE
.PD 1
.TP
.B idct=<0\-99>
idct algorithm.
.I NOTE:
To the best of our knowledge all these IDCTs do pass the IEEE1180 tests.
.PD 0
.RSs
.IPs 0
automatically select a good one (default)
.IPs 1
jpeg reference integer
.IPs 2
simple
.IPs 3
simplemmx
.IPs 4
libmpeg2mmx (inaccurate, DON'T USE for encoding with keyint >100)
.IPs 5
ps2
.IPs 6
mlib
.IPs 7
arm
.IPs 8
altivec
.IPs 9
sh4
.RE
.PD 1
.TP
.B lumi_mask=<0.0\-1.0>
luminance masking.
Warning: Be careful, too large values can cause disastrous things.
Warning2: Large values might look good on some monitors but may look horrible
on other monitors:
.RSs
.IPs 0.0
disabled (default)
.IPs 0.0\-0.3
sane range
.RE
.TP
.B dark_mask=<0.0\-1.0>
darkness masking.
Warning: be careful, too large values can cause disasterous things.
Warning2: large values might look good on some monitors but may look horrible
on other monitors / TV / TFT:
.RSs
.IPs 0.0
disabled (default)
.IPs 0.0\-0.3
sane range
.RE
.TP
.B tcplx_mask=<0.0\-1.0>
temporal complexity masking (default: 0.0 (disabled))
.TP
.B scplx_mask=<0.0\-1.0>
spatial complexity masking.
Larger values help against blockiness, if no deblocking filter is used for
decoding.
Tip: Crop any black borders completely as they will reduce the quality
of the macro blocks (also applies without scplx_mask).
.RSs
.IPs 0.0
disabled (default)
.IPs 0.0\-0.5
sane range
.RE
.TP
.B p_mask=<0.0\-1.0>
inter MB masking (default: 0.0 (disabled))
.TP
.B naq\ \ \ \ 
Normalize adaptive quantization (experimental).
When using adaptive quantization (*_mask), the average per-MB quantizer may no
longer match the requested frame-level quantizer.
Naq will attempt to adjust the per-MB quantizers to maintain the proper
average.
.TP
.B ildct\ \ 
use interlaced dct
.TP
.B ilme\ \ \ 
use interlaced motion estimation
.TP
.B alt\ \ \ \ 
use alternative scantable
.TP
.B top=<-1\-1>\ \ \ 
.RSs
.IPs -1
automatic
.IPs 0
bottom field first
.IPs 1
top field first
.RE
.TP
.B format=<value>
.RSs
.IPs YV12
default
.IPs 444P
for ffv1
.IPs 422P
for huffyuv, lossless jpeg and ffv1
.IPs 411P,YVU9
for lossless jpeg and ffv1
.IPs BGR32
for lossless jpeg and ffv1
.RE
.TP
.B pred
(for huffyuv)
.PD 0
.RSs
.IPs 0
left prediction
.IPs 1
plane/gradient prediction
.IPs 2
median prediction
.RE
.PD 1
.TP
.B pred
(for lossless jpeg)
.PD 0
.RSs
.IPs 0
left prediction
.IPs 1
top prediction
.IPs 2
topleft prediction
.IPs 3
plane/gradient prediction
.IPs 6
mean prediction
.RE
.PD 1
.TP
.B coder
(for ffv1)
.PD 0
.RSs
.IPs 0
vlc coding (golomb rice)
.IPs 1
arithmetic coding (cabac)
.RE
.PD 1
.TP
.B context
(for ffv1)
.PD 0
.RSs
.IPs 0
small context model
.IPs 1
large context model
.RE
.PD 1
.TP
.B qpel\ \ \ 
use quarter pel motion compensation
Tip: This seems only useful for high bitrate encodings.
.TP
.B ildctcmp=<0\-2000>
comparison function for interlaced dct decision
.TP
.B precmp=<0\-2000>
comparison function for motion estimation pre pass
.TP
.B cmp=<0\-2000>
comparison function for full pel motion estimation
.TP
.B subcmp=<0\-2000>
comparison function for sub pel motion estimation
.TP
.B mbcmp=<0\-2000>
comparison function for the macroblock decision, only used if mbd=0
.PD 0
.RSs
.IPs "0 (SAD)"
sum of absolute differences, fast (default)
.IPs "1 (SSE)"
sum of squared errors
.IPs "2 (SATD)"
sum of absolute hadamard transformed differences
.IPs "3 (DCT)"
sum of absolute dct transformed differences
.IPs "4 (PSNR)"
sum of the squared quantization errors (don't use, low quality)
.IPs "5 (BIT)"
number of bits needed for the block
.IPs "6 (RD)"
rate distortion optimal, slow
.IPs "7 (ZERO)"
0
.IPs "8 (VSAD)"
sum of absolute vertical differences 
.IPs "9 (VSSE)"
sum of squared vertical differences
.IPs +256\ 
use chroma too, doesn't work (correctly) with B frames currently
.RE
.PD 1
.TP
.B predia=<-99\-6>
Diamond type and size for motion estimation pre pass
.TP
.B dia=<-99\-6>
Diamond type & size for motion estimation.
.I NOTE:
The sizes of the normal diamonds and shape adaptive ones don't have
the same meaning.
.RSs
.IPs -3
shape adaptive (fast) diamond with size 3
.IPs -2
shape adaptive (fast) diamond with size 2
.IPs -1
experimental
.IPs  1
normal size=1 diamond (default) =EPZS type diamond
.nf
.ne
      0 
     000
      0 
.fi
.br
.IPs 2
normal size=2 diamond
.nf
.ne
      0  
     000 
    00000
     000 
      0  
.fi
.RE
.TP
.B trell\ \ 
Trellis searched quantization.
This will find the optimal encoding for each 8x8 block.
Trellis searched quantization is quite simple a optimal quantization in the PSNR
vs bitrate sense (assuming that there would be no rounding errors introduced 
by the IDCT, which is obviously not the case) it simply finds a block for
the minimum of error and lambda*bits.
.PD 0
.RSs
.IPs lambda
qp dependant constant
.IPs bits\ 
amount of bits needed to encode the block
.IPs error
sum of squared errors of the quantization
.RE
.PD 1
.TP
.B cbp\ \ \ \ 
Rate distorted optimal coded block pattern
will select the coded block pattern which minimizes distortion + lambda*rate
this can only be used together with trellis quantization
.TP
.B mv0\ \ \ \ 
try to encode each MB with MV=<0,0> and choose the better one
this has no effect if mbd=0
.TP
.B qprd\ \ \ 
rate distorted optimal QP for the given lambda of each macroblock
.TP
.B last_pred=<0\-99>
Amount of motion predictors from the previous frame
.PD 0
.RSs
.IPs 0
(default)
.IPs a
will use 2a+1 x 2a+1 macro block square of motion vector predictors from the
previous frame
.RE
.PD 1
.TP
.B preme=<0\-2> 
motion estimation pre-pass
.PD 0
.RSs
.IPs 0
disabled
.IPs 1
only after I frames (default)
.IPs 2
always
.RE
.PD 1
.TP
.B subq=<1\-8>
subpel refinement quality (for qpel) (default: 8).
.I NOTE:
This has a significant effect on speed.
.TP
.B psnr\ \ \ 
print the psnr (peak signal to noise ratio) for the whole video after encoding
and store the per frame psnr in a file with a name like 'psnr_hhmmss.log'.
Returned values are in dB (decibel), the higher the better.
.TP
.B mpeg_quant
use MPEG quantizers instead of H.263.
(default: disabled) (i.e.\& use H.263 quantizers)
.TP
.B aic\ \ \ \ 
ac prediction (=advanced intra prediction for H.263+)
.I NOTE:
vqmin should be 8 or larger for AIC H263+.
.TP
.B aiv\ \ \ \ 
alternatice inter vlc for H.263+
.TP
.B umv\ \ \ \ 
unlimited MVs (H.263+ only)
Allow encoding of abritarily long MVs.
.TP
.B ibias=<-256\-256>
intra quantizer bias (256 == 1.0)
.br
mpeg style quantizer default: 96
.br
h263 style quantizer default: 0
.br
.I NOTE:
The h263 MMX quantizer cannot handle positive biases (set vfdct=1or2),
the mpeg MMX quantizer cannot handle negative biases (set vfdct=1or2).
.TP
.B pbias=<-256\-256>
inter quantizer bias (256 == 1.0)
.br
mpeg style quantizer default: 0
.br
h263 style quantizer default: -64
.br
.I NOTE:
The h263 MMX quantizer cannot handle positive biases (set vfdct=1or2),
the mpeg MMX quantizer cannot handle negative biases (set vfdct=1or2).
.br
Tip: a more positive bias (-32 \- -16 instead of -64) seems to improve the PSNR
.TP
.B nr=<0\-100000>
noise reduction, 0 is disabled
.TP
.B qns=<0\-3>
quantizer noise shaping, reduces ringing artefacts, larger values are slower
but may not result in better quality
this can and should be used together with trellis quantization, in which case
the trellis quantization (optimal for constant weight) will be used as startpoint
for the iterative search.
.PD 0
.RSs
.IPs 0
disabled (default)
.IPs 1
only lower the absolute value of coefficients
.IPs 2
only change coefficients before the last non zero coefficient + 1
.IPs 3
try all
.RE
.PD 1
.TP
.B inter_matrix=<comma separated matrix>
Use custom inter matrix. It needs a comma separated string of 64 integers.
.TP
.B intra_matrix=<comma separated matrix>
Use custom intra matrix. It needs a comma separated string of 64 integers.
.TP
.B vqmod_amp
experimental quantizer modulation
.TP
.B vqmod_freq
experimental quantizer modulation
.RE
.
.SS nuv (\-nuvopts)
.
Nuppel video is based on rtjpeg and lzo.
By default frames are first encoded with rtjpeg and then compressed with lzo.
But both passes can be enabled or not.
So you can in fact output raw i420, lzo compressed i420, rtjpeg, or the
default lzo compressed rtjpeg.
.br
.I NOTE:
The nuvrec documentation contains some advice and examples about the
settings to use for the most common TV encodings.
.TP
.B c=<0\-20>
chrominance threshold
.TP
.B l=<0\-20>
luminance threshold
.TP
.B nolzo \ 
Disable the lzo compression.
.TP
.B q=<3\-255>
Set the quality level.
.TP
.B raw \ \ \ 
Disable rtjpeg encoding.
.TP
.B rtjpeg\ 
Enable rtjpeg encoding.
.
.SS xvidenc (\-xvidencopts)
.
There are three modes available: constant bitrate (CBR), fixed quantizer and
2pass.
.TP
.B pass=<1|2>
specify the pass in 2pass mode
.TP
.B bitrate=<value>
sets the bitrate to be used in kbits/\:second if <16000 or in bits/\:second
if >16000
(CBR or 2pass mode, default=687 kbits/s)
.TP
.B fixed_quant=<1\-31>
switch to fixed quantizer mode and specify the quantizer to be used
.TP
.B me_quality=<0\-6>
specify the motion detection quality (default=6)
.TP
.B interlacing
enable support for interlaced content (default=off)
.TP
.B 4mv\ \ \ \ 
use 4 motion vectors per macro-block, might give better compression at the
cost of a slower encoding (default=off)
.TP
.B rc_reaction_delay_factor=<value>
specify how fast the rate control reacts, lower values are faster
.TP
.B rc_averaging_period=<value>
period to reach the required average
.TP
.B rc_buffer=<value>
size of the rate control buffer
.TP
.B quant_range=<1\-31>\-<1\-31>[/<1\-31>\-<1\-31>]
min & max quantizer for all frames (default=2\-31, CBR mode)
.br
min & max quantizer for I/P frames (default=2\-31/2\-31, 2pass mode)
.TP
.B min_key_interval=<value>
minimum interval between key frames (default=0, 2pass only)
.TP
.B max_key_interval=<value>
maximum interval between key frames (default=10*fps)
.TP
.B mpeg_quant
use MPEG quantizers instead of H.263 (default=off)
.TP
.B mod_quant
decide whether to use MPEG or H.263 quantizers on a frame-by-frame basis.
(default=off, 2pass mode only)
.TP
.B greyscale
encode in black & white (default=off)
.TP
.B debug\ \ 
Save per-frame statistics in xvid.dbg (default=off).
This is NOT the 2pass control file.
.TP
.B keyframe_boost=<0\-1000>
(default=0, 2pass mode only)
.TP
.B kfthreshold=<value>
(default=10, 2pass mode only)
.TP
.B kfreduction=<0\-100>
(default=30, 2pass mode only)
.RE
.PP
The following options are only available with the unstable (cvs -HEAD)
version of XviD.
Be warned that these options are experimental and may
not work as intended.
.TP
.B packed\ 
create a bitstream that can be decoded delay-free (default=off)
.br
.I WARNING:
this will generate an illegal bitstream, and WILL NOT be 
decodeable by ISO-MPEG4 decoders except divx/libavcodec/xvid
.br
.I WARNING:
this will also store a fake divx version in the file so the bug
autodetection of some decoders might be confused
.TP
.B divx5bvop
generate DivX5 compatible B-frames (default=on)
.TP
.B qpel\ \ \ 
enable quarter-pixel motion estimation (default=off)
.TP
.B gmc\ \ \ \ 
enable global motion compensation, may save bits on panning scenes (default=off)
.TP
.B chroma_me
uses chroma information to estimate motion (default=off)
.TP
.B chroma_opt
enable a chroma optimizer prefilter (default=off)
.TP
.B reduced
enable encoding reduced resolution frames (default=off)
.TP
.B max_bframes=<0\-4>
maximum number of B frames to put between I/P frames (default=0)
.TP
.B bquant_ratio=<0\-1000>
quantizer ratio between B and non B frames, 150=1.50 (default=150)
.TP
.B bquant_offset=<-1000\-1000>
quantizer offset between B and non B frames, 100=1.00 (default=100)
.TP
.B bf_threshold=<-255\-255>
change the probability of a frame to be a bframe (default=0)
.TP
.B hq_ac\ \ 
enable a better prediction of AC component (default=off)
.TP
.B vhq=<0\-4>
enable a higher quality ME search using DCT, faster to slower:
.PD 0
.RSs
.IPs 0
off (default)
.IPs 1
mode decision (inter/intra MB)
.IPs 2
limited search
.IPs 3
medium search
.IPs 4
wide search
.RE
.PD 1
.TP
.B psnr\ \ \ 
Print the psnr (peak signal to noise ratio) for the whole video after encoding
and store the per frame psnr in a file with a name like 'psnr_hhmmss.log'.
Returned values are in dB (decibel), the higher the better.
.
.
.\" --------------------------------------------------------------------------
.\" Files
.\" --------------------------------------------------------------------------
.
.SH FILES
.TP
/etc/\:mplayer/\:mplayer.conf
system-wide settings
.TP
~/.mplayer/\:config
user settings
.TP
~/.mplayer/\:input.conf
input bindings (see '\-input keylist' for full keylist)
.TP
~/.mplayer/\:gui.conf
GUI configuration file
.TP
~/.mplayer/\:gui.pl
GUI playlist
.TP
~/.mplayer/\:font/
font directory (There must be a font.desc file and files with .RAW extension.)
.TP
~/.mplayer/\:DVDkeys/
cached CSS keys
.TP
Sub files are searched for in this order (for example /mnt/\:cdrom/\:movie.avi):
.RS
/mnt/\:cdrom/\:movie.sub
.br
~/.mplayer/\:sub/\:movie.sub
.br
~/.mplayer/\:default.sub
.RE
.PD 1
.
.
.\" --------------------------------------------------------------------------
.\" Examples
.\" --------------------------------------------------------------------------
.
.SH EXAMPLES
.TP
.B Quickstart DVD playing
mplayer dvd://1
.TP
.B Play in japanese with english subtitles
mplayer dvd://1 \-alang ja \-slang en
.TP
.B Play only chapters 5, 6, 7
mplayer dvd://1 \-chapter 5-7
.TP
.B Multiangle DVD playing
mplayer dvd://1 \-dvdangle 2
.TP
.B Playing from a different DVD device
mplayer dvd://1 \-dvd-device /dev/\:dvd2
.TP
.B Stream from HTTP
mplayer http://mplayer.hq/\:example.avi
.TP
.B Stream using RTSP
mplayer rtsp://server.example.com/\:streamName
.TP
.B Convert subtitle to MPsub (to ./\:dump.mpsub)
mplayer dummy.avi \-sub source.sub \-dumpmpsub
.TP
.B Convert subtitle to MPsub without watching the movie
mplayer /dev/zero \-rawvideo on:pal:fps=xx \-vc null \-vo null \-noframedrop
\-benchmark \-sub source.sub \-dumpmpsub
.TP
.B Input from standard V4L
mplayer tv:// \-tv driver=v4l:width=640:height=480:outfmt=i420 \-vc rawi420
\-vo xv
.TP
.B Playback on zoran card (old style, depreciated)
mplayer -vo zr -vf scale=352:288 file.avi
.TP
.B Playback on zoran card (new style)
mplayer -vo zr2 -vf scale=352:288,zrmjpeg file.avi
.TP
.B Encoding DVD title #2, only selected chapters
mencoder dvd://2 \-chapter 10-15 \-o title2.avi \-oac copy \-ovc divx4
.TP
.B Encoding DVD title #2, resizing to 640x480
mencoder dvd://2 \-vf scale=640:480 \-o title2.avi \-oac copy \-ovc divx4
.TP
.B Encoding DVD title #2, resizing to 512xHHH (keep aspect ratio)
mencoder dvd://2 \-vf scale \-zoom \-xy 512 \-o title2.avi \-oac copy
\-ovc divx4
.TP
.B The same, but with libavcodec family, MPEG4 (Divx5) compression
mencoder dvd://2 \-o title2.avi \-ovc lavc
\-lavcopts vcodec=mpeg4:vhq:vbitrate=1800 \-oac copy
.TP
.B The same, but with libavcodec family, MJPEG compression
mencoder dvd://2 \-o titel2.avi \-ovc lavc
\-lavcopts vcodec=mjpeg:vhq:vbitrate=1800 \-oac copy
.TP
.B Encoding all *.jpg files in the current dir
mencoder "mf://*.jpg" \-mf fps=25 \-o output.avi \-ovc divx4
.TP
.B Encoding from tuner
mencoder \-tv driver=v4l:width=640:height=480 tv:// \-o tv.avi \-ovc rawrgb
.TP
.B Encoding from a pipe
rar p test-SVCD.rar | mencoder \-ovc divx4 \-divx4opts br=800 \-ofps 24 \-
.TP
.B Encoding multiple *.vob files
cat *.vob | mencoder <options> \-
.
.
.\" --------------------------------------------------------------------------
.\" Bugs, authors, standard disclaimer
.\" --------------------------------------------------------------------------
.
.SH BUGS
If you find one, report it to us, but please make sure you have read all
of the documentation first.
Many bugs are the result of incorrect setup or parameter usage.
The bug reporting section of the documentation (DOCS/HTML/en/bugreports.html)
explains how to create useful bug reports.
.
.
.SH AUTHORS
MPlayer was initially written by Arpad Gereoffy.
See the AUTHORS file for a list of some of the many other contributors.
.TP
MPlayer is (C) 2000\-2004
.B The MPlayer Team
.TP
This man page is written and maintained by
.B Gabucino
.br
.B Diego Biurrun
.br
.B Jonas Jermann
.PP
Please send mails about it to the MPlayer-DOCS mailing list.
.
.
.SH "STANDARD DISCLAIMER"
Use only at your own risk!
There may be errors and inaccuracies that could be damaging to your system or
your eye.
Proceed with caution, and although this is highly unlikely, the authors don't
take any responsibility for that!
.\" end of file
