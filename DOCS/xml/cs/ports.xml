<?xml version="1.0" encoding="iso-8859-2"?>
<!-- Synced with: 1.70 -->
<chapter id="ports" xreflabel="Ports">
<title>Porty</title>

<sect1 id="linux">
<title>Linux</title>
<para>
Hlavní vývojovou platformou je Linux na x86, aèkoli
<application>MPlayer</application> pracuje na mnoha jiných portech Linuxu.
Binární balíèky <application>MPlayer</application>u jsou dostupné z nìkolika
zdrojù. Nicménì <emphasis role="bold">není ¾ádný z tìchto balíèkù podporován</emphasis>.
Hlaste tedy problémy jejich autorùm, nikoli nám.
</para>

<sect2 id="debian">
<title>Vytvoøení balíèku pro Debian</title>
<para>
Pro vytvoøení balíèku pro Debian spus»te následující pøíkaz v adresáøi se
zdrojovým kódem <application>MPlayer</application>u:

<screen>fakeroot debian/rules binary</screen>

Pokud chcete pøedat nìjaké volby pro configure, mù¾ete nastavit promìnnou
prostøedí <envar>DEB_BUILD_OPTIONS</envar>. Napøíklad, pokud chcete GUI a
podporu OSD menu, mìli byste pou¾ít:

<screen>DEB_BUILD_OPTIONS="--enable-gui --enable-menu" fakeroot debian/rules binary</screen>

Rovnì¾ mù¾ete pøedat nìkteré promìnné do Makefile. Napøíklad, pokud chcete
kompilovat pomocí gcc 3.4 i v pøípadì, ¾e to není výchozí kompilátor:

<screen>CC=gcc-3.4 DEB_BUILD_OPTIONS="--enable-gui" fakeroot debian/rules binary</screen>

K vyèistìní zdrojového stromu spus»te následující pøíkaz:

<screen>fakeroot debian/rules clean</screen>

Jako root mù¾ete nainstalovat <filename>.deb</filename> balíèek obvyklým
zpùsobem:

<screen>dpkg -i ../mplayer_<replaceable>version</replaceable>.deb</screen>
</para>

<para>
Christian Marillat vytváøel jistou dobu neoficiální Debianí balíèky
<application>MPlayer</application>u, <application>MEncoder</application>u a
na¹ich bitmapových fontù, mù¾ete si je stáhnout (apt-get) z
<ulink url="http://hpisi.nerim.net/">jeho domácí stránky</ulink>.
</para>
</sect2>

<sect2 id="rpm">
<title>Balení RPM</title>
<para>
Dominik Mierzejewski vytvoøil a udr¾uje oficiální RPM balíèky
<application>MPlayer</application>u pro Red Hat a Fedora Core. Ty jsou dostupné
z jeho
<ulink url="http://rpm.greysector.net/mplayer/">repozitáøe</ulink>.
</para>

<para>
RPM balíèky pro Mandrake/Mandriva jsou dostupné z
<ulink url="http://plf.zarb.org/">P.L.F.</ulink>.
SuSE zaøadilo do své distribuce zmrzaèenou verzi
<application>MPlayer</application>u. V posledních verzích ji odstranili. Funkèní
RPM naleznete na
<ulink url="http://packman.links2linux.de/?action=128">links2linux.de</ulink>.
</para>
</sect2>

<sect2 id="arm">
<title>ARM</title>
<para>
<application>MPlayer</application> pracuje na Linuxových PDA s ARM CPU napø.
Sharp Zaurus, Compaq Ipaq. Nejjednodu¹¹í zpùsob jak si opatøit
<application>MPlayer</application> je, stáhnout si jej z nìkterého
<ulink url="http://www.openzaurus.org">OpenZaurus</ulink> balíèkového kanálu.
Pokud si jej chcete skompilovat sami, mìli byste nahlédnout do adresáøe
<ulink url="http://openzaurus.bkbits.net:8080/buildroot/src/packages/mplayer?nav=index.html|src/.|src/packages">mplayer</ulink>
a
<ulink url="http://openzaurus.bkbits.net:8080/buildroot/src/packages/libavcodec?nav=index.html|src/.|src/packages">libavcodec</ulink>
v buildroot OpenZaurus distribuce. Zde mají v¾dy poslední Makefile a patche pou¾ívané
pro sestavení CVS verze <application>MPlayer</application>u s
<systemitem class="library">libavcodec</systemitem>em.
Pokud potøebujete GUI rozhraní, mù¾ete pou¾ít xmms-embedded.
</para>
</sect2>
</sect1>

<sect1 id="bsd">
<title>*BSD</title>
<para>
<application>MPlayer</application> bì¾í na FreeBSD, OpenBSD, NetBSD,
BSD/OS a Darwinu. Existují portované/pkgsrc/fink/atd verze
<application>MPlayer</application>u, které lze pravdìpodobnì snadnìji pou¾ít,
ne¾ na¹e surové zdrojové kódy.
</para>

<para>
K sestavení <application>MPlayer</application>u budete potøebovat GNU make
(gmake - nativní BSD make nebude pracovat) a souèasnou verzi binutils.
</para>

<para>
Pokud si <application>MPlayer</application> stì¾uje, ¾e nemù¾e najít
<filename>/dev/cdrom</filename> nebo <filename>/dev/dvd</filename>,
vytvoøte pøíslu¹ný symbolický link:
<screen>ln -s /dev/<replaceable>va¹e_cdrom_zaøízení</replaceable> /dev/cdrom</screen>
</para>

<para>
Chcete-li pou¾ívat Win32 DLL v <application>MPlayer</application>u, budete muset
rekompilovat jádro s volbou &quot;<envar>USER_LDT</envar>&quot;
(pokud nepou¾íváte FreeBSD-CURRENT, kde je to výchozí).
</para>


<sect2 id="freebsd">
<title>FreeBSD</title>
<para>
Pokud vá¹ procesor má SSE, rekompilujte jádro s volbami
&quot;<envar>CPU_ENABLE_SSE</envar>&quot; (vy¾aduje FreeBSD-STABLE nebo patche
do jádra).
</para>
</sect2>

<sect2 id="openbsd">
<title>OpenBSD</title>
<para>
Vzhledem k omezením v rùzných verzích gas (GNU assembleru &ndash; pozn. pøekl.)
(relokace vs MMX), budete muset kompilovat ve dvou krocích:
Nejprve se ujistìte ¾e je nenativní as jako první ve va¹í <envar>$PATH</envar>
a proveïte <command>gmake -k</command>, pak zajistìte, aby se pou¾ila nativní
verze a proveïte <command>gmake</command>.
</para>
<para>
Od OpenBSD 3.4 není ji¾ vý¹e uvedená metoda potøeba.
</para>
</sect2>

<sect2 id="darwin">
<title>Darwin</title>
<para>
Viz sekce <link linkend="macos">Mac OS</link>.
</para>
</sect2>
</sect1>

<sect1 id="solaris">
<title>Sun Solaris</title>
<para>
<application>MPlayer</application> by mìl bì¾et na Solarisu 2.6 nebo novìj¹ím.
Pou¾ijte SUN audio rozhraní pomocí volby <option>-ao sun</option> pro pøehrávání
zvuku.
</para>

<para>
Na <emphasis role="bold">UltraSPARC</emphasis>ích, <application>MPlayer</application>
vyu¾ívá jejich roz¹íøení <emphasis role="bold">VIS</emphasis>
(ekvivalentní MMX), zatím jen v
<systemitem class="library">libmpeg2</systemitem>,
<systemitem class="library">libvo</systemitem>
a <systemitem class="library">libavcodec</systemitem>, ale nikoli v
<systemitem class="library">mp3lib</systemitem>. Mù¾ete pøehrávat VOB soubor
na 400MHz CPU. Budete k tomu potøebovat nainstalovanou
<ulink url="http://www.sun.com/sparc/vis/mediaLib.html"><systemitem class="library">mLib</systemitem></ulink>.
</para>

<para>
Pro kompilaci balíku budete potøebovat GNU <application>make</application>
(<filename>gmake</filename>, <filename>/opt/sfw/gmake</filename>), jeliko¾
nativní make Solarisu nebude pracovat. Typickou chybou kompilace s make
Solarisu namísto GNU make je:
<screen>
   % /usr/ccs/bin/make
   make: Fatal error in reader: Makefile, line 25: Unexpected end of line seen
</screen>
</para>

<para>
Na Solarisu SPARC, potøebujete GNU C/C++ Compiler; nezále¾í na tom, zda je
GNU C/C++ compiler konfigurován s nebo bez GNU assembleru.
</para>

<para>
Na Solarisu x86, potøebujete GNU assembler a GNU C/C++ compiler,
konfigurovaný pro pou¾ití GNU assembleru! Kód <application>MPlayer</application>u
na platformì x86 intenzivnì pou¾ívá MMX, SSE a 3DNOW! instrukce,
které nemù¾e být kompilovány Sun assemblerem <filename>/usr/ccs/bin/as</filename>.
</para>

<para>
Skript <filename>configure</filename> zkou¹í zjistit, který assembler je pou¾itý
va¹ím pøíkazem &quot;gcc&quot; (v pøípadì ¾e autodetekce sel¾e, pou¾ijte volbu
<option>--as=<replaceable>/kdekoli/máte/nainstalován/gnu-as</replaceable></option>
pro nastavení <filename>configure</filename> skriptu tak, aby na¹el GNU
"as" na va¹em systému).
</para>

<para>
Chybová zpráva z <filename>configure</filename> na systému Solaris x86
s pou¾itím GCC bez GNU assembleru:
<screen>
   % configure
   ...
   Checking assembler (/usr/ccs/bin/as) ... , failed
   Please upgrade(downgrade) binutils to 2.10.1...
</screen>
(Øe¹ení: Nainstalujte a pou¾ijte gcc konfigurovaný s <option>--with-as=gas</option>)
</para>

<para>
Typická chyba, kterou dostanete pøi kompilaci pomocí GNU C kompilátoru, který
nepou¾ívá GNU as:
<screen>
   % gmake
   ...
   gcc -c -Iloader -Ilibvo -O4 -march=i686 -mcpu=i686 -pipe -ffast-math
        -fomit-frame-pointer  -I/usr/local/include   -o mplayer.o mplayer.c
   Assembler: mplayer.c
   "(stdin)", line 3567 : Illegal mnemonic
   "(stdin)", line 3567 : Syntax error
   ... more "Illegal mnemonic" and "Syntax error" errors ...
</screen>
</para>

<para>
Díky chybám v Solarisu 8, nemù¾ete pøehrávat DVD disky vìt¹í ne¾ 4 GB:
</para>

<itemizedlist>
<listitem><para>
Ovladaè sd(7D) na Solarisu 8 x86 má chybu v pøístupu k diskovému bloku >4GB
na zaøízeních, které mají logical blocksize != DEV_BSIZE (èili CD-ROM a DVD média).
Díky 32Bit int overflow, dostanete pøístupovou diskovou adresu modulo 4GB
(<ulink url="http://groups.yahoo.com/group/solarisonintel/message/22516"/>).
Tento problém neexistuje ve SPARC verzi Solarisu 8.
</para></listitem>

<listitem><para>
Podobná chyba je i v kódu systému souborù hsfs(7FS) (AKA ISO9660),
hsfs nemusí podporovat oddíly/disky vìt¹í ne¾ 4GB, ke v¹em datùm je pøistupováno
modulo 4GB
(<ulink url="http://groups.yahoo.com/group/solarisonintel/message/22592"/>).
Problém hsfs mù¾e být odstranìn nainstalováním patche 109764-04 (sparc) / 109765-04 (x86).
</para></listitem>
</itemizedlist>
</sect1>

<sect1 id="irix">
<title>Silicon Graphics Irix</title>
<para>
You can either try to install the GNU install program, and (if you did
not put it in your global path) then point to the location with:
<screen>./configure --with-install=<replaceable>/path/and/name/of/install</replaceable></screen>
</para>

<para>
Or you can use the default install delivered with IRIX 6.5 in which case
you will have to edit the <filename>Makefile</filename> by hand a little bit.
Change the following two lines:
<programlisting>
  $(INSTALL) -c -m 644 DOCS/mplayer.1 $(MANDIR)/man1/mplayer.1

  $(INSTALL) -c -m 644 etc/codecs.conf $(CONFDIR)/codecs.conf
</programlisting>
to:
<programlisting>
  $(INSTALL) -m 644 mplayer.1 $(MANDIR)/man1/

  $(INSTALL) -m 644 codecs.conf $(CONFDIR)/
</programlisting>
And then do (from within the <application>MPlayer</application> source dir):
<screen>cp DOCS/mplayer.1 . ; cp etc/codecs.conf .</screen>
and then go on with building and installing.
</para>
</sect1>


<sect1 id="hp-ux">
<title>HP-UX</title>
<para>
Joe Page hosts a detailed HP-UX <application>MPlayer</application>
<ulink url="http://users.rcn.com/joepage/mplayer_on_hpux11.htm">HOWTO</ulink>
by Martin Gansser on his homepage. With these instructions the build should
work out of the box. The following information is taken from this HOWTO.
</para>

<para>
You need GCC 3.4.0 or later, GNU make 3.80 or later and SDL 1.2.7 or later.
HP cc will not produce a working program, prior GCC versions are buggy.
For OpenGL functionality you need to install Mesa and the gl and gl2 video
output drivers should work, speed may be very bad, depending on the CPU speed,
though. A good replacement for the rather poor native HP-UX sound system is
GNU esound.
</para>

<para>
Create the DVD device
scan the SCSI bus with:
</para>

<screen>
# ioscan -fn

Class          I            H/W   Path          Driver    S/W State    H/W Type        Description
...
ext_bus 1    8/16/5      c720  CLAIMED INTERFACE  Built-in SCSI
target  3    8/16/5.2    tgt   CLAIMED DEVICE
disk    4    8/16/5.<emphasis role="bold">2</emphasis>.<emphasis role="bold">0</emphasis>  sdisk CLAIMED DEVICE     <emphasis role="bold">PIONEER DVD-ROM DVD-305</emphasis>
                         /dev/dsk/c1t2d0 <emphasis role="bold">/dev/rdsk/c1t2d0</emphasis>
target  4    8/16/5.7    tgt   CLAIMED DEVICE
ctl     <emphasis role="bold">1</emphasis>    8/16/5.7.0  sctl  CLAIMED DEVICE     Initiator
                         /dev/rscsi/c1t7d0 /dev/rscsi/c1t7l0 /dev/scsi/c1t7l0
...
</screen>

<para>
The screen output shows a Pioneer DVD-ROM at SCSI address 2.
The card instance for hardware path 8/16 is 1.
</para>

<para>
Create a link from the raw device to the DVD device.
</para>

<screen>
# ln -s /dev/rdsk/c<replaceable>&lt;SCSI bus instance&gt;</replaceable>t<replaceable>&lt;SCSI target ID&gt;</replaceable>d<replaceable>&lt;LUN&gt;</replaceable> /dev/<replaceable>&lt;device&gt;</replaceable>
</screen>

<para>
Example:
</para>

<screen>
# ln -s /dev/rdsk/c1t2d0 /dev/dvd
</screen>

<para>
Below are solutions for some common problems:
</para>

<itemizedlist>
<listitem>
<para>
Crash at Start with the following error message:
<screen>
/usr/lib/dld.sl: Unresolved symbol: finite (code) from /usr/local/lib/gcc-lib/hppa2.0n-hp-hpux11.00/3.2/../../../libGL.sl
</screen>
</para>

<para>
This means that the function <systemitem>.finite().</systemitem> is not
available in the standard HP-UX math library.
Instead there is <systemitem>.isfinite().</systemitem>.
Solution: Use the latest Mesa depot file.
</para>
</listitem>

<listitem>
<para>
Crash at playback with the following error message:
<screen>
/usr/lib/dld.sl: Unresolved symbol: sem_init (code) from /usr/local/lib/libSDL-1.2.sl.0
</screen>
</para>

<para>
Solution: Use the extralibdir option of configure
<option>--with-extralibdir="/usr/lib -lrt"</option>
</para>
</listitem>

<listitem>
<para>
MPlayer segfaults with a message like this:
<screen>
Pid 10166 received a SIGSEGV for stack growth failure.
Possible causes: insufficient memory or swap space, or stack size exceeded maxssiz.
Segmentation fault
</screen>
</para>

<para>
Solution:
The HP-UX kernel has a default stack size of 8MB(?) per process.(11.0 and
newer 10.20 patches let you increase <systemitem>maxssiz</systemitem> up to
350MB for 32-bit programs). You need to extend <systemitem>maxssiz</systemitem>
and recompile the kernel (and reboot). You can use SAM to do this. (While at
it, check out the <systemitem>maxdsiz</systemitem> parameter for the maximum
amount of data a program can use. It depends on your applications, if the
default of 64MB is enough or not.)
</para>
</listitem>
</itemizedlist>

</sect1>


<sect1 id="qnx">
<title>QNX</title>
<para>
Works. You'll need to download SDL for QNX, and install it. Then run
<application>MPlayer</application> with <option>-vo sdl:photon</option>
and <option>-ao sdl:nto</option> options, and it should be fast.
</para>

<para>
The <option>-vo x11</option> output will be even slower than on Linux,
since QNX has only X <emphasis>emulation</emphasis> which is VERY slow. Use SDL.
</para>
</sect1>

<sect1 id="windows">
<title>Windows</title>

<para>Yes, <application>MPlayer</application> runs on Windows under
  <ulink url="http://www.cygwin.com/"><application>Cygwin</application></ulink> and
  <ulink url="http://www.mingw.org/"><application>MinGW</application></ulink>.
  It does not have an official GUI yet, but the command line version
  is completely functional. You should check out the
  <ulink url="http://mplayerhq.hu/mailman/listinfo/mplayer-cygwin/">MPlayer-cygwin</ulink>
  mailing list for help and latest information.
  Official Windows binaries can be found on the
  <ulink url="http://www.mplayerhq.hu/homepage/design7/dload.html">download page</ulink>.
  Installer packages and simple GUI frontends are available from external
  sources, we have collected then in the Windows section of our
  <ulink url="http://www.mplayerhq.hu/homepage/design7/projects.html#windows">projects page</ulink>.
</para>

<para>If you wish to avoid using the command line, a simple trick is
  to put a shortcut on your desktop that contains something like the
  following in the execute section:
  <screen><replaceable>c:\path\to\</replaceable>mplayer.exe %1</screen>
  This will make <application>MPlayer</application> play any movie that is
  dropped on the shortcut. Add <option>-fs</option> for fullscreen mode.
</para>

<para>Best results are achieved with the native DirectX video output driver
  (<option>-vo directx</option>) and the native Windows waveout audio driver
  (<option>-ao win32</option>). Alternatives are OpenGL and SDL, but OpenGL
  performance varies greatly between systems and SDL is known to
  distort sound and video or crash on some systems. If the image is
  distorted, try turning off hardware acceleration with
  <option>-vo directx:noaccel</option>. Download
  <ulink url="http://www.mplayerhq.hu/MPlayer/releases/win32/contrib/dx7headers.tgz">DirectX 7 header files</ulink>
  to compile the DirectX video output driver. Furthermore you need to have
  DirectX 7 or later installed for the DirectX video output driver to work.
  </para>

<para><link linkend="vidix">VIDIX</link> now works under Windows as
  <option>-vo winvidix</option>, although it is still experimental
  and needs a bit of manual setup. Download
  <ulink url="http://www.mplayerhq.hu/MPlayer/releases/win32/dhahelperwin/dhahelper.sys">dhahelper.sys</ulink> or
  <ulink url="http://www.mplayerhq.hu/MPlayer/releases/win32/dhahelperwin/withmtrr/dhahelper.sys">dhahelper.sys (with MTRR support)</ulink>
  and copy it to the
  <filename class="directory">libdha/dhahelperwin</filename> directory in your
  <application>MPlayer</application> source tree.
  Open a console and change to that directory. Then type

  <screen>gcc -o dhasetup.exe dhasetup.c</screen>

  and execute

  <screen>dhasetup.exe install</screen>

  as Administrator. After that you will have to reboot. When you are
  done, copy the <systemitem class="library">.so</systemitem> files from
  <filename class="directory">vidix/drivers</filename> to the
  <filename class="directory">mplayer/vidix</filename> directory
  relative to your <filename>mplayer.exe</filename>.</para>

<para>For best results <application>MPlayer</application> should use a
  colorspace that your video card supports in hardware. Unfortunately many
  Windows graphics drivers wrongly report some colorspaces as supported in
  hardware. To find out which, try

  <screen>mplayer -benchmark -nosound -frames 100 -vf format=<replaceable>colorspace</replaceable> <replaceable>movie</replaceable></screen>

  where <replaceable>colorspace</replaceable> can be any colorspace
  printed by the <option>-vf format=fmt=help</option> option. If you
  find a colorspace your card handles particularly bad
  <option>-vf noformat=<replaceable>colorspace</replaceable></option>
  will keep it from being used. Add this to your config file to permanently
  keep it from being used.</para>

<para>There are special codec packages for Windows available on our
  <ulink url="http://mplayerhq.hu/homepage/design7/codecs.html">codecs page</ulink>
  to allow playing formats for which there is no native support yet.
  Put the codecs somewhere in your path or pass
  <option>--with-codecsdir=<replaceable>c:/path/to/your/codecs</replaceable></option>
  (alternatively
  <option>--with-codecsdir=<replaceable>/path/to/your/codecs</replaceable></option>
  only on <application>Cygwin</application>) to <filename>configure</filename>.
  We have had some reports that Real DLLs need to be writable by the user
  running <application>MPlayer</application>, but only on some systems (NT4).
  Try making them writable if you have problems.</para>

<para>You can play VCDs by playing the <filename>.DAT</filename> or <filename>.MPG</filename> files
  that Windows exposes on VCDs. It works like this (adjust for the drive letter
  of your CD-ROM):</para>

<screen>mplayer <replaceable>d:/mpegav/avseq01.dat</replaceable></screen>

<para>DVDs also work, adjust <option>-dvd-device</option> for the drive letter
  of your DVD-ROM:</para>

<screen>mplayer dvd://<replaceable>&lt;title&gt;</replaceable> -dvd-device <replaceable>d</replaceable>:</screen>

<para>The <application>Cygwin</application>/<application>MinGW</application>
  console is rather slow. Redirecting output or using the
  <option>-quiet</option> option has been reported to improve performance on
  some systems. Direct rendering (<option>-dr</option>) may also help.
  You can prevent OSD flicker through double buffering with the
  <option>-double</option> option. If playback is jerky, try
  <option>-autosync 100</option>. If some of these options help you, you
  may want to put them in your config file.</para>

<sect2 id="cygwin">
<title><application>Cygwin</application></title>

<para>You need to run <application>Cygwin</application> 1.5.0 or later in
  order to compile <application>MPlayer</application>.</para>

<para>DirectX header files need to be extracted to <filename class="directory">/usr/include/</filename> or
  <filename class="directory">/usr/local/include/</filename>.</para>

<para>Instructions and files for making SDL run under
  <application>Cygwin</application> can be found on the
  <ulink url="http://www.libsdl.org/extras/win32/cygwin/">libsdl site</ulink>.</para>

</sect2>


<sect2 id="mingw">
<title><application>MinGW</application></title>

<para>Installing a version of <application>MinGW</application> that could
  compile <application>MPlayer</application> used to be quite tricky, but it
  works out of the box now. Just install <application>MinGW</application>
  3.1.0 or later and MSYS 1.0.9 or later and tell the MSYS postinstall that
  <application>MinGW</application> is installed.</para>

<para>Extract DirectX header files to <filename class="directory">/mingw/include/</filename>.</para>

<para>MOV compressed header support requires
  <ulink url="http://www.gzip.org/zlib/">zlib</ulink>, which
  <application>MinGW</application> does not provide by default.
  Configure it with <option>--prefix=/mingw</option> and install
  it before compiling <application>MPlayer</application>.</para>

<para>Complete instructions for building <application>MPlayer</application>
  and necessary libraries can be found in the
  <ulink url="http://mplayerhq.hu/MPlayer/releases/win32/contrib/MPlayer-MinGW-Howto.txt">MPlayer MinGW HOWTO</ulink>.</para>

</sect2>


</sect1>

<sect1 id="macos">
<title>Mac OS</title>
<para>
<application>MPlayer</application> should compile out-of-the-box on
Mac OS X 10.2 and up. The preferred compiler is the Apple version of
GCC 3.x or later. If you have Mac OS X 10.3.9 or later and QuickTime 7
you can use the macosx video output driver.
</para>

<sect2 id="mplayerosx">
<title>MPlayer OS X</title>

<para>
You can get a native GUI for <application>MPlayer</application> together with
precompiled <application>MPlayer</application> binaries for Mac OS X from the
<ulink url="http://mplayerosx.sf.net/">MPlayerOSX</ulink> project, but be
warned: that project is not active anymore.
</para>

<para>
Fortunately, <application>MPlayerOSX</application> has been taken over
by a member of the <application>MPlayer</application> team.
Preview releases are available from our
<ulink url="http://mplayerhq.hu/dload.html">download page</ulink>
and an official release should arrive soon.
</para>

<para>
In order to build <application>MPlayerOSX</application> from source
yourself, you need the <systemitem>mplayerosx</systemitem>, the
<systemitem>main</systemitem> and a copy of the
<systemitem>main</systemitem> CVS module named
<systemitem>main_noaltivec</systemitem>.
<systemitem>mplayerosx</systemitem> is the GUI frontend,
<systemitem>main</systemitem> is MPlayer and
<systemitem>main_noaltivec</systemitem> is MPlayer built without AltiVec
support.
</para>

<para>
To check out CVS modules use:

<screen>
cvs -d:pserver:anonymous@mplayerhq.hu:/cvsroot/mplayer login
cvs -z3 -d:pserver:anonymous@mplayerhq.hu:/cvsroot/mplayer co -P mplayerosx
cvs -z3 -d:pserver:anonymous@mplayerhq.hu:/cvsroot/mplayer co -P main
</screen>
</para>

<para>
In order to build <application>MPlayerOSX</application> you will need to
set up something like this:

<screen>
MPlayer_source_directory
   |
   |--->main           (MPlayer CVS source)
   |
   |--->main_noaltivec (MPlayer CVS source configured with --disable-altivec)
   |
   |--->mplayerosx     (MPlayer OS X CVS source)
</screen>

You first need to build main and main_noaltivec.
</para>

<para>
Next, set a global variable:

<screen>export MACOSX_DEPLOYMENT_TARGET=10.3</screen>
</para>

<para>
Then, configure:
</para>

<para>
If you configure for a G4 or later CPU with AltiVec support, do as follows:
<screen>
./configure --with-termcaplib=ncurses.5 --disable-gl --disable-x11
</screen>
If you configure for a G3-powered machine without AltiVec, use:
<screen>
./configure --with-termcaplib=ncurses.5 --disable-gl --disable-x11
--disable-altivec
</screen>
You may need to edit <filename>config.mak</filename> and change
<systemitem>-mcpu</systemitem> and <systemitem>-mtune</systemitem>
from <systemitem>74XX</systemitem> to <systemitem>G3</systemitem>.
</para>

<para>
Continue with
<screen>
make
</screen>
then go to the mplayerosx directory and type

<screen>
make dist
</screen>
This will create a compressed <systemitem>.dmg</systemitem> archive
with the ready to use binary.
</para>

<para>
You can also use the <application>Xcode</application> 2.1 project;
the old project for <application>Xcode</application> 1.x does
not work anymore.
</para>
</sect2>
</sect1>

<sect1 id="amiga">
<title>Amiga/MorphOS (GeekGadgets)</title>
<para>
The people over at <ulink url="www.amigasoft.net">www.amigasoft.net</ulink>
make current <application>MPlayer</application> and
<application>MEncoder</application> packages.
</para>

<para>
Nicholas Det at Genesi has done a big and powerful port of <application>MPlayer
</application> for MorphOS. Sadly it's based on the 0.90 series.
</para>

<para>
Get if from <ulink url="http://www.morphzone.org/">MorphZone</ulink>:
<itemizedlist>
<listitem><para>
<ulink url="http://www.morphzone.org/modules/mydownloads/singlefile.php?lid=90">
<application>MPlayer</application> 0.91 binary</ulink>
</para></listitem>
<listitem><para>
<ulink url="http://www.morphzone.org/modules/mydownloads/singlefile.php?lid=91">
<application>MPlayer</application> 0.91 source</ulink>
</para></listitem>
<listitem><para>
<ulink url="http://www.morphzone.org/modules/mydownloads/singlefile.php?lid=92">
<application>MEncoder</application> 1.0pre3 binary</ulink>
</para></listitem>
</itemizedlist>
</para>
</sect1>

</chapter>
