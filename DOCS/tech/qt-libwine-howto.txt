How to get win32 quicktime audio/video codec plugins support work?
==================================================================

1. Get the latest wine source. Some leech urls:
    http://www.ibiblio.org/pub/Linux/ALPHA/wine/development/Wine-20021031.tar.gz
    ftp://ftp.infomagic.com/pub/mirrors/linux/sunsite/ALPHA/wine/development/Wine-20021031.tar.gz
    ftp://ftp.fu-berlin.de/unix/linux/mirrors/sunsite.unc.edu/ALPHA/wine/development/Wine-20021031.tar.gz
    ftp://orcus.progsoc.uts.edu.au/pub/Wine/development/Wine-20021031.tar.gz
   Compile and install it:
    ./configure
    make
    make install
    
2. Get mplayer CVS (RTFM...), and compile this way:
   ./configure --disable-win32 --enable-qtx-codecs
        (the --disable-win32 is VERY important!!!)
   make mplayer.exe.so
   
3. Get the quicktime DLLs & wine config pack:
   [ftp|http]://mplayerhq.hu/MPlayer/releases/qt-dotwine.tar.bz2
   If you already have ~/.wine, backup it:
       mv ~/.wine ~/.wine.orig
   Extract the tarball in your home dir:
       cd
       tar -xjf qt-dotwine.tar.bz2

4. Launch mplayer with wine:
	wine z:/path/to/mplayer/main/mplayer.exe.so -- file.mov [options]
	
   You can also create a wrapper script to emulate 'old' mplayer behaviour:
   Create a file called 'mplayer' with content:
        wine z:/path/to/mplayer/main/mplayer.exe.so -- $*
   then: chmod +x mplayer

NOTES:
   Note 1: when first time starting wine, it will create a FONT database, it
   may take a while... don't worry, it won't be rebuild next time!
   
   Note 2: wine/quicktime DLLs fork several processes/threads, they
   somehow don't die at exit and keep eating your memory in the background,
   so it's recommended to 'killall wine' after running mplayer this way...
   
   Note 3: yes we all know this is messy hack, and we're working on a
   cleaner solution, using the minimalist loader included in mplayer
   instead of all the bloat coming with libwine.
   
   Note 4: due to --disable-win32, you cannot use vfw/acm/dshow and quicktime
   DLLs at the same time.

